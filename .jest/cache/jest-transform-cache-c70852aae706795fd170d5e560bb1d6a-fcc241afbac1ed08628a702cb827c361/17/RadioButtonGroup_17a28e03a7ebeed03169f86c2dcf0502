4a5f5f3d9ac651c2d7ee456775262a81
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RadioButtonGroup = exports.default = exports.RadioButtonContext = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

var RadioButtonContext = React.createContext(null);
exports.RadioButtonContext = RadioButtonContext;

var RadioButtonGroup = function RadioButtonGroup(_ref) {
  var value = _ref.value,
      onValueChange = _ref.onValueChange,
      children = _ref.children;
  return React.createElement(RadioButtonContext.Provider, {
    value: {
      value: value,
      onValueChange: onValueChange
    }
  }, React.createElement(_reactNative.View, {
    accessibilityRole: "radiogroup"
  }, children));
};

exports.RadioButtonGroup = RadioButtonGroup;
RadioButtonGroup.displayName = 'RadioButton.Group';
var _default = RadioButtonGroup;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzQk8sSUFBTUEsa0JBQWtCLEdBQUdDLEtBQUssQ0FBQ0MsYUFBTkQsQ0FDaEMsSUFEZ0NBLENBQTNCOzs7QUE0Q1AsSUFBTUUsZ0JBQWdCLEdBQUcsU0FBbkJBLGdCQUFtQjtBQUFBLE1BQUdDLEtBQUgsUUFBR0EsS0FBSDtBQUFBLE1BQVVDLGFBQVYsUUFBVUEsYUFBVjtBQUFBLE1BQXlCQyxRQUF6QixRQUF5QkEsUUFBekI7QUFBQSxTQUN2Qkwsb0JBQUNELGtCQUFELENBQW9CTyxRQUFwQjtBQUE2QkgsU0FBSyxFQUFFO0FBQUVBLFdBQUYsRUFBRUEsS0FBRjtBQUFTQztBQUFUO0FBQXBDLEtBQ0VKLG9CQUFDTyxpQkFBRDtBQUFNQyxxQkFBaUIsRUFBQztBQUF4QixLQUFzQ0gsUUFBdEMsQ0FERixDQUR1QjtBQUFBLENBQXpCOzs7QUFNQUgsZ0JBQWdCLENBQUNPLFdBQWpCUCxHQUErQixtQkFBL0JBO2VBQ2VBIiwibmFtZXMiOlsiUmFkaW9CdXR0b25Db250ZXh0IiwiUmVhY3QiLCJjcmVhdGVDb250ZXh0IiwiUmFkaW9CdXR0b25Hcm91cCIsInZhbHVlIiwib25WYWx1ZUNoYW5nZSIsImNoaWxkcmVuIiwiUHJvdmlkZXIiLCJfcmVhY3ROYXRpdmUiLCJhY2Nlc3NpYmlsaXR5Um9sZSIsImRpc3BsYXlOYW1lIl0sInNvdXJjZXMiOlsiUmFkaW9CdXR0b25Hcm91cC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgVmlldyB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIC8qKlxuICAgKiBGdW5jdGlvbiB0byBleGVjdXRlIG9uIHNlbGVjdGlvbiBjaGFuZ2UuXG4gICAqL1xuICBvblZhbHVlQ2hhbmdlOiAodmFsdWU6IHN0cmluZykgPT4gdm9pZDtcbiAgLyoqXG4gICAqIFZhbHVlIG9mIHRoZSBjdXJyZW50bHkgc2VsZWN0ZWQgcmFkaW8gYnV0dG9uLlxuICAgKi9cbiAgdmFsdWU6IHN0cmluZztcbiAgLyoqXG4gICAqIFJlYWN0IGVsZW1lbnRzIGNvbnRhaW5pbmcgcmFkaW8gYnV0dG9ucy5cbiAgICovXG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XG59O1xuXG5leHBvcnQgdHlwZSBSYWRpb0J1dHRvbkNvbnRleHRUeXBlID0ge1xuICB2YWx1ZTogc3RyaW5nO1xuICBvblZhbHVlQ2hhbmdlOiAoaXRlbTogc3RyaW5nKSA9PiB2b2lkO1xufTtcblxuZXhwb3J0IGNvbnN0IFJhZGlvQnV0dG9uQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQ8UmFkaW9CdXR0b25Db250ZXh0VHlwZT4oXG4gIG51bGwgYXMgYW55XG4pO1xuXG4vKipcbiAqIFJhZGlvIGJ1dHRvbiBncm91cCBhbGxvd3MgdG8gY29udHJvbCBhIGdyb3VwIG9mIHJhZGlvIGJ1dHRvbnMuXG4gKlxuICogPGRpdiBjbGFzcz1cInNjcmVlbnNob3RzXCI+XG4gKiAgIDxmaWd1cmU+XG4gKiAgICAgPGltZyBjbGFzcz1cIm1lZGl1bVwiIHNyYz1cInNjcmVlbnNob3RzL3JhZGlvLWJ1dHRvbi1ncm91cC1hbmRyb2lkLmdpZlwiIC8+XG4gKiAgPGZpZ2NhcHRpb24+QW5kcm9pZDwvZmlnY2FwdGlvbj5cbiAqICAgPC9maWd1cmU+XG4gKiAgIDxmaWd1cmU+XG4gKiAgICAgPGltZyBjbGFzcz1cIm1lZGl1bVwiIHNyYz1cInNjcmVlbnNob3RzL3JhZGlvLWJ1dHRvbi1ncm91cC1pb3MuZ2lmXCIgLz5cbiAqICA8ZmlnY2FwdGlvbj5pT1M8L2ZpZ2NhcHRpb24+XG4gKiAgIDwvZmlndXJlPlxuICogPC9kaXY+XG4gKlxuICogIyMgVXNhZ2VcbiAqIGBgYGpzXG4gKiBpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG4gKiBpbXBvcnQgeyBWaWV3IH0gZnJvbSAncmVhY3QtbmF0aXZlJztcbiAqIGltcG9ydCB7IFJhZGlvQnV0dG9uLCBUZXh0IH0gZnJvbSAncmVhY3QtbmF0aXZlLXBhcGVyJztcbiAqXG4gKiBjb25zdCBNeUNvbXBvbmVudCA9ICgpID0+IHtcbiAqICAgY29uc3QgW3ZhbHVlLCBzZXRWYWx1ZV0gPSBSZWFjdC51c2VTdGF0ZSgnZmlyc3QnKTtcbiAqXG4gKiAgIHJldHVybiAoXG4gKiAgICAgPFJhZGlvQnV0dG9uLkdyb3VwIG9uVmFsdWVDaGFuZ2U9e25ld1ZhbHVlID0+IHNldFZhbHVlKG5ld1ZhbHVlKX0gdmFsdWU9e3ZhbHVlfT5cbiAqICAgICAgIDxWaWV3PlxuICogICAgICAgICA8VGV4dD5GaXJzdDwvVGV4dD5cbiAqICAgICAgICAgPFJhZGlvQnV0dG9uIHZhbHVlPVwiZmlyc3RcIiAvPlxuICogICAgICAgPC9WaWV3PlxuICogICAgICAgPFZpZXc+XG4gKiAgICAgICAgIDxUZXh0PlNlY29uZDwvVGV4dD5cbiAqICAgICAgICAgPFJhZGlvQnV0dG9uIHZhbHVlPVwic2Vjb25kXCIgLz5cbiAqICAgICAgIDwvVmlldz5cbiAqICAgICA8L1JhZGlvQnV0dG9uLkdyb3VwPlxuICogICApO1xuICogfTtcbiAqXG4gKiBleHBvcnQgZGVmYXVsdCBNeUNvbXBvbmVudDtcbiAqYGBgXG4gKi9cbmNvbnN0IFJhZGlvQnV0dG9uR3JvdXAgPSAoeyB2YWx1ZSwgb25WYWx1ZUNoYW5nZSwgY2hpbGRyZW4gfTogUHJvcHMpID0+IChcbiAgPFJhZGlvQnV0dG9uQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17eyB2YWx1ZSwgb25WYWx1ZUNoYW5nZSB9fT5cbiAgICA8VmlldyBhY2Nlc3NpYmlsaXR5Um9sZT1cInJhZGlvZ3JvdXBcIj57Y2hpbGRyZW59PC9WaWV3PlxuICA8L1JhZGlvQnV0dG9uQ29udGV4dC5Qcm92aWRlcj5cbik7XG5cblJhZGlvQnV0dG9uR3JvdXAuZGlzcGxheU5hbWUgPSAnUmFkaW9CdXR0b24uR3JvdXAnO1xuZXhwb3J0IGRlZmF1bHQgUmFkaW9CdXR0b25Hcm91cDtcblxuLy8gQGNvbXBvbmVudC1kb2NzIGlnbm9yZS1uZXh0LWxpbmVcbmV4cG9ydCB7IFJhZGlvQnV0dG9uR3JvdXAgfTtcbiJdfQ==