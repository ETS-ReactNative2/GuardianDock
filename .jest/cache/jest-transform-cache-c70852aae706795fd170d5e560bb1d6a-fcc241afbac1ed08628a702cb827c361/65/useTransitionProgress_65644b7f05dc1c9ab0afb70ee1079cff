320301dd04ccb4fabf0660cc933b9e7d
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useTransitionProgress;

var React = _interopRequireWildcard(require("react"));

var _TransitionProgressContext = _interopRequireDefault(require("./TransitionProgressContext"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function useTransitionProgress() {
  var progress = React.useContext(_TransitionProgressContext.default);

  if (progress === undefined) {
    throw new Error("Couldn't find values for transition progress. Are you inside a screen in Native Stack?");
  }

  return progress;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFZSxTQUFTQSxxQkFBVCxHQUFpQztBQUM5QyxNQUFNQyxRQUFRLEdBQUdDLEtBQUssQ0FBQ0MsVUFBTkQsQ0FBaUJFLGtDQUFqQkYsQ0FBakI7O0FBRUEsTUFBSUQsUUFBUSxLQUFLSSxTQUFqQixFQUE0QjtBQUMxQixVQUFNLElBQUlDLEtBQUosQ0FDSix3RkFESSxDQUFOO0FBR0Q7O0FBRUQsU0FBT0wsUUFBUDtBQUNEIiwibmFtZXMiOlsidXNlVHJhbnNpdGlvblByb2dyZXNzIiwicHJvZ3Jlc3MiLCJSZWFjdCIsInVzZUNvbnRleHQiLCJUcmFuc2l0aW9uUHJvZ3Jlc3NDb250ZXh0IiwidW5kZWZpbmVkIiwiRXJyb3IiXSwic291cmNlcyI6WyJ1c2VUcmFuc2l0aW9uUHJvZ3Jlc3MudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IFRyYW5zaXRpb25Qcm9ncmVzc0NvbnRleHQgZnJvbSAnLi9UcmFuc2l0aW9uUHJvZ3Jlc3NDb250ZXh0JztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlVHJhbnNpdGlvblByb2dyZXNzKCkge1xuICBjb25zdCBwcm9ncmVzcyA9IFJlYWN0LnVzZUNvbnRleHQoVHJhbnNpdGlvblByb2dyZXNzQ29udGV4dCk7XG5cbiAgaWYgKHByb2dyZXNzID09PSB1bmRlZmluZWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBcIkNvdWxkbid0IGZpbmQgdmFsdWVzIGZvciB0cmFuc2l0aW9uIHByb2dyZXNzLiBBcmUgeW91IGluc2lkZSBhIHNjcmVlbiBpbiBOYXRpdmUgU3RhY2s/XCJcbiAgICApO1xuICB9XG5cbiAgcmV0dXJuIHByb2dyZXNzO1xufVxuIl19