{"version":3,"mappings":"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","names":["MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","LABEL_PADDING_TOP_DENSE","MIN_HEIGHT","MIN_DENSE_HEIGHT_WL","MIN_DENSE_HEIGHT","TextInputFlat","render","props","disabled","editable","label","error","selectionColor","underlineColor","activeUnderlineColor","dense","style","theme","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","rest","isAndroid","Platform","OS","colors","fonts","font","regular","hasActiveOutline","focused","StyleSheet","flatten","fontSizeStyle","fontSize","fontWeight","height","paddingHorizontal","textAlign","viewStyle","MAXIMIZED_LABEL_FONT_SIZE","isPaddingHorizontalPassed","undefined","adornmentConfig","paddingLeft","paddingRight","leftLayout","rightLayout","rightAffixWidth","width","ADORNMENT_SIZE","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","inputOffset","FLAT_INPUT_OFFSET","mode","InputMode","Flat","inputTextColor","activeColor","underlineColorCustom","placeholderColor","errorColor","text","alpha","rgb","string","primary","placeholder","containerStyle","backgroundColor","dark","background","lighten","darken","borderTopLeftRadius","roundness","borderTopRightRadius","labelScale","MINIMIZED_LABEL_FONT_SIZE","fontScale","labelWidth","labelLayout","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","I18nManager","isRTL","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","styles","inputFlatDense","inputFlat","pad","paddingFlat","baseLabelTranslateY","placeholderOpacity","labeled","measured","minHeight","flatHeight","iconTopPosition","leftAffixTopPosition","affixHeight","rightAffixTopPosition","labelProps","placeholderStyle","wiggleOffsetX","LABEL_WIGGLE_X_OFFSET","paddingOffset","affixTopPosition","AdornmentSide","Left","Right","onAffixChange","adornmentProps","AdornmentType","Affix","Icon","isTextInputFocused","length","textStyle","visible","React","_reactNative","Underline","labelContainer","testID","pointerEvents","absoluteFill","densePatchContainer","patchContainer","_InputLabel","ref","underlineColorAndroid","input","color","textAlignVertical","outline","_TextInputAdornment","Component","View","underline","transform","scaleY","create","position","bottom","zIndex","paddingTop","paddingBottom","flexGrow","margin"],"sources":["TextInputFlat.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  Animated,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n} from 'react-native';\nimport color from 'color';\nimport InputLabel from './Label/InputLabel';\nimport TextInputAdornment, {\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  FLAT_INPUT_OFFSET,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingFlat,\n  Padding,\n  interpolatePlaceholder,\n  calculateFlatAffixTopPosition,\n  calculateFlatInputHorizontalPadding,\n} from './helpers';\nimport {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n} from './Adornment/TextInputAdornment';\nimport { AdornmentSide, AdornmentType, InputMode } from './Adornment/enums';\n\nconst MINIMIZED_LABEL_Y_OFFSET = -18;\n\nconst LABEL_PADDING_TOP = 30;\nconst LABEL_PADDING_TOP_DENSE = 24;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT_WL = 52;\nconst MIN_DENSE_HEIGHT = 40;\n\nclass TextInputFlat extends React.Component<ChildTextInputProps> {\n  static defaultProps = {\n    disabled: false,\n    error: false,\n    multiline: false,\n    editable: true,\n    render: (props: RenderProps) => <NativeTextInput {...props} />,\n  };\n\n  render() {\n    const {\n      disabled,\n      editable,\n      label,\n      error,\n      selectionColor,\n      underlineColor,\n      activeUnderlineColor,\n      dense,\n      style,\n      theme,\n      render,\n      multiline,\n      parentState,\n      innerRef,\n      onFocus,\n      forceFocus,\n      onBlur,\n      onChangeText,\n      onLayoutAnimatedText,\n      onLeftAffixLayoutChange,\n      onRightAffixLayoutChange,\n      left,\n      right,\n      placeholderTextColor,\n      ...rest\n    } = this.props;\n\n    const isAndroid = Platform.OS === 'android';\n\n    const { colors, fonts } = theme;\n    const font = fonts.regular;\n    const hasActiveOutline = parentState.focused || error;\n\n    const {\n      fontSize: fontSizeStyle,\n      fontWeight,\n      height,\n      paddingHorizontal,\n      textAlign,\n      ...viewStyle\n    } = (StyleSheet.flatten(style) || {}) as TextStyle;\n    const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n    const isPaddingHorizontalPassed =\n      paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n\n    const adornmentConfig = getAdornmentConfig({\n      left,\n      right,\n    });\n\n    let { paddingLeft, paddingRight } = calculateFlatInputHorizontalPadding({\n      adornmentConfig,\n    });\n\n    if (isPaddingHorizontalPassed) {\n      paddingLeft = paddingHorizontal as number;\n      paddingRight = paddingHorizontal as number;\n    }\n\n    const { leftLayout, rightLayout } = parentState;\n\n    const rightAffixWidth = right\n      ? rightLayout.width || ADORNMENT_SIZE\n      : ADORNMENT_SIZE;\n\n    const leftAffixWidth = left\n      ? leftLayout.width || ADORNMENT_SIZE\n      : ADORNMENT_SIZE;\n\n    const adornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput(\n      {\n        adornmentConfig,\n        rightAffixWidth,\n        leftAffixWidth,\n        paddingHorizontal,\n        inputOffset: FLAT_INPUT_OFFSET,\n        mode: InputMode.Flat,\n      }\n    );\n\n    let inputTextColor,\n      activeColor,\n      underlineColorCustom,\n      placeholderColor,\n      errorColor;\n\n    if (disabled) {\n      inputTextColor = activeColor = color(colors.text)\n        .alpha(0.54)\n        .rgb()\n        .string();\n      placeholderColor = colors.disabled;\n      underlineColorCustom = 'transparent';\n    } else {\n      inputTextColor = colors.text;\n      activeColor = error\n        ? colors.error\n        : activeUnderlineColor || colors.primary;\n      placeholderColor = colors.placeholder;\n      errorColor = colors.error;\n      underlineColorCustom = underlineColor || colors.disabled;\n    }\n\n    const containerStyle = {\n      backgroundColor: theme.dark\n        ? color(colors.background).lighten(0.24).rgb().string()\n        : color(colors.background).darken(0.06).rgb().string(),\n      borderTopLeftRadius: theme.roundness,\n      borderTopRightRadius: theme.roundness,\n    };\n\n    const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n    const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n    const labelWidth = parentState.labelLayout.width;\n    const labelHeight = parentState.labelLayout.height;\n    const labelHalfWidth = labelWidth / 2;\n    const labelHalfHeight = labelHeight / 2;\n\n    const baseLabelTranslateX =\n      (I18nManager.isRTL ? 1 : -1) *\n        (labelHalfWidth - (labelScale * labelWidth) / 2) +\n      (1 - labelScale) * (I18nManager.isRTL ? -1 : 1) * paddingLeft;\n\n    const minInputHeight = dense\n      ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) -\n        LABEL_PADDING_TOP_DENSE\n      : MIN_HEIGHT - LABEL_PADDING_TOP;\n\n    const inputHeight = calculateInputHeight(\n      labelHeight,\n      height,\n      minInputHeight\n    );\n\n    const topPosition = calculateLabelTopPosition(\n      labelHeight,\n      inputHeight,\n      multiline && height ? 0 : !height ? minInputHeight / 2 : 0\n    );\n\n    if (height && typeof height !== 'number') {\n      // eslint-disable-next-line\n      console.warn('Currently we support only numbers in height prop');\n    }\n\n    const paddingSettings = {\n      height: height ? +height : null,\n      labelHalfHeight,\n      offset: FLAT_INPUT_OFFSET,\n      multiline: multiline ? multiline : null,\n      dense: dense ? dense : null,\n      topPosition,\n      fontSize,\n      label,\n      scale: fontScale,\n      isAndroid,\n      styles: StyleSheet.flatten(\n        dense ? styles.inputFlatDense : styles.inputFlat\n      ) as Padding,\n    };\n\n    const pad = calculatePadding(paddingSettings);\n\n    const paddingFlat = adjustPaddingFlat({\n      ...paddingSettings,\n      pad,\n    });\n\n    const baseLabelTranslateY =\n      -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n\n    const placeholderOpacity = hasActiveOutline\n      ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n      : parentState.labelLayout.measured\n      ? 1\n      : 0;\n\n    const minHeight =\n      height ||\n      (dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) : MIN_HEIGHT);\n\n    const flatHeight =\n      inputHeight +\n      (!height ? (dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP) : 0);\n\n    const iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n\n    const leftAffixTopPosition = leftLayout.height\n      ? calculateFlatAffixTopPosition({\n          height: flatHeight,\n          ...paddingFlat,\n          affixHeight: leftLayout.height,\n        })\n      : null;\n\n    const rightAffixTopPosition = rightLayout.height\n      ? calculateFlatAffixTopPosition({\n          height: flatHeight,\n          ...paddingFlat,\n          affixHeight: rightLayout.height,\n        })\n      : null;\n\n    const labelProps = {\n      label,\n      onLayoutAnimatedText,\n      placeholderOpacity,\n      error,\n      placeholderStyle: styles.placeholder,\n      baseLabelTranslateY,\n      baseLabelTranslateX,\n      font,\n      fontSize,\n      fontWeight,\n      labelScale,\n      wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n      topPosition,\n      paddingOffset: { paddingLeft, paddingRight },\n      hasActiveOutline,\n      activeColor,\n      placeholderColor,\n      errorColor,\n      roundness: theme.roundness,\n    };\n    const affixTopPosition = {\n      [AdornmentSide.Left]: leftAffixTopPosition,\n      [AdornmentSide.Right]: rightAffixTopPosition,\n    };\n    const onAffixChange = {\n      [AdornmentSide.Left]: onLeftAffixLayoutChange,\n      [AdornmentSide.Right]: onRightAffixLayoutChange,\n    };\n\n    let adornmentProps: TextInputAdornmentProps = {\n      paddingHorizontal,\n      adornmentConfig,\n      forceFocus,\n      topPosition: {\n        [AdornmentType.Affix]: affixTopPosition,\n        [AdornmentType.Icon]: iconTopPosition,\n      },\n      onAffixChange,\n      isTextInputFocused: this.props.parentState.focused,\n    };\n    if (adornmentConfig.length) {\n      adornmentProps = {\n        ...adornmentProps,\n        left,\n        right,\n        textStyle: { ...font, fontSize, fontWeight },\n        visible: this.props.parentState.labeled,\n      };\n    }\n\n    return (\n      <View style={[containerStyle, viewStyle]}>\n        <Underline\n          parentState={parentState}\n          underlineColorCustom={underlineColorCustom}\n          error={error}\n          colors={colors}\n          activeColor={activeColor}\n        />\n        <View\n          style={[\n            styles.labelContainer,\n            {\n              minHeight,\n            },\n          ]}\n        >\n          {!isAndroid && multiline && label && (\n            // Workaround for: https://github.com/callstack/react-native-paper/issues/2799\n            // Patch for a multiline TextInput with fixed height, which allow to avoid covering input label with its value.\n            <View\n              testID=\"patch-container\"\n              pointerEvents=\"none\"\n              style={[\n                StyleSheet.absoluteFill,\n                dense ? styles.densePatchContainer : styles.patchContainer,\n                {\n                  backgroundColor:\n                    viewStyle.backgroundColor || containerStyle.backgroundColor,\n                  left: paddingLeft,\n                  right: paddingRight,\n                },\n              ]}\n            />\n          )}\n          <InputLabel parentState={parentState} labelProps={labelProps} />\n          {render?.({\n            ...rest,\n            ref: innerRef,\n            onChangeText,\n            placeholder: label\n              ? parentState.placeholder\n              : this.props.placeholder,\n            placeholderTextColor: placeholderTextColor ?? placeholderColor,\n            editable: !disabled && editable,\n            selectionColor:\n              typeof selectionColor === 'undefined'\n                ? activeColor\n                : selectionColor,\n            onFocus,\n            onBlur,\n            underlineColorAndroid: 'transparent',\n            multiline,\n            style: [\n              styles.input,\n              { paddingLeft, paddingRight },\n              !multiline || (multiline && height) ? { height: flatHeight } : {},\n              paddingFlat,\n              {\n                ...font,\n                fontSize,\n                fontWeight,\n                color: inputTextColor,\n                textAlignVertical: multiline ? 'top' : 'center',\n                textAlign: textAlign\n                  ? textAlign\n                  : I18nManager.isRTL\n                  ? 'right'\n                  : 'left',\n              },\n              Platform.OS === 'web' && { outline: 'none' },\n              adornmentStyleAdjustmentForNativeInput,\n            ],\n          })}\n        </View>\n        <TextInputAdornment {...adornmentProps} />\n      </View>\n    );\n  }\n}\n\nexport default TextInputFlat;\n\ntype UnderlineProps = {\n  parentState: {\n    focused: boolean;\n  };\n  error?: boolean;\n  colors: {\n    error: string;\n  };\n  activeColor: string;\n  underlineColorCustom?: string;\n};\n\nconst Underline = ({\n  parentState,\n  error,\n  colors,\n  activeColor,\n  underlineColorCustom,\n}: UnderlineProps) => {\n  let backgroundColor = parentState.focused\n    ? activeColor\n    : underlineColorCustom;\n  if (error) backgroundColor = colors.error;\n  return (\n    <Animated.View\n      style={[\n        styles.underline,\n        {\n          backgroundColor,\n          // Underlines is thinner when input is not focused\n          transform: [{ scaleY: parentState.focused ? 1 : 0.5 }],\n        },\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n    zIndex: 1,\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0,\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4,\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2,\n  },\n  patchContainer: {\n    height: 24,\n    zIndex: 2,\n  },\n  densePatchContainer: {\n    height: 22,\n    zIndex: 2,\n  },\n});\n"]}