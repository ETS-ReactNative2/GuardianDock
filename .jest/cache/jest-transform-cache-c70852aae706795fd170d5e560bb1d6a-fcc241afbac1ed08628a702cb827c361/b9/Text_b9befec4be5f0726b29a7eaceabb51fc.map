{"version":3,"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,IAAMA,IAA6C,GAAG,SAAhDA,IAAgD,OAEpDC,GAFoD,EAGjD;AAAA,MAFDC,KAEC,QAFDA,KAEC;AAAA,MAFMC,KAEN,QAFMA,KAEN;AAAA,MAFgBC,IAEhB;AACH,MAAMC,IAAI,GAAGC,KAAK,CAACC,MAAND,CAAgC,IAAhCA,CAAb;AAEAA,OAAK,CAACE,mBAANF,CAA0BL,GAA1BK,EAA+B;AAAA,WAAO;AACpCG,oBAAc,EAAGC,4BAAD;AAAA;;AAAA,gCAAkBL,IAAI,CAACM,OAAvB,kDAAkBC,cAAcH,cAAd,CAA6BC,IAA7B,CAAlB;AAAA;AADoB,KAAP;AAAA,GAA/BJ;AAIA,SACEA,oBAACO,iBAAD,eACMT,IADN;AAEEH,OAAG,EAAEI,IAFP;AAGEH,SAAK,EAAE,4BAEAC,KAAK,CAACW,KAANX,CAAYY,OAFZ;AAGHC,WAAK,EAAEb,KAAK,CAACc,MAANd,CAAae;AAHjB,QAKLC,MAAM,CAACD,IALF,EAMLhB,KANK;AAHT,KADF;AAVF;;AA0BA,IAAMiB,MAAM,GAAGC,wBAAWC,MAAXD,CAAkB;AAC/BF,MAAI,EAAE;AACJI,aAAS,EAAE;AADP;AADyB,CAAlBF,CAAf;;eAMe,wBAAUd,KAAK,CAACiB,UAANjB,CAAiBN,IAAjBM,CAAV","names":["Text","ref","style","theme","rest","root","React","useRef","useImperativeHandle","setNativeProps","args","current","_root$current","_reactNative","fonts","regular","color","colors","text","styles","StyleSheet","create","textAlign","forwardRef"],"sources":["Text.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Text as NativeText,\n  TextStyle,\n  StyleProp,\n  StyleSheet,\n} from 'react-native';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentProps<typeof NativeText> & {\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n// @component-group Typography\n\n/**\n * Text component which follows styles from the theme.\n *\n * @extends Text props https://reactnative.dev/docs/text#props\n */\nconst Text: React.RefForwardingComponent<{}, Props> = (\n  { style, theme, ...rest }: Props,\n  ref\n) => {\n  const root = React.useRef<NativeText | null>(null);\n\n  React.useImperativeHandle(ref, () => ({\n    setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n  }));\n\n  return (\n    <NativeText\n      {...rest}\n      ref={root}\n      style={[\n        {\n          ...theme.fonts.regular,\n          color: theme.colors.text,\n        },\n        styles.text,\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport default withTheme(React.forwardRef(Text));\n"]}