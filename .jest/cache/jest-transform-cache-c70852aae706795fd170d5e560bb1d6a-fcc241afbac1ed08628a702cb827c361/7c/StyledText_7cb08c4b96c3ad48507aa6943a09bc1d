2f4431fbefb3530b41db07d050c1de96
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");

var _extends3 = _interopRequireDefault2(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));

var _excluded = ["theme", "alpha", "family", "style"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _color = _interopRequireDefault(require("color"));

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _Text = _interopRequireDefault(require("./Text"));

var _theming = require("../../core/theming");

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var StyledText = function StyledText(_ref) {
  var theme = _ref.theme,
      alpha = _ref.alpha,
      family = _ref.family,
      style = _ref.style,
      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var textColor = (0, _color.default)(theme.colors.text).alpha(alpha).rgb().string();
  var font = theme.fonts[family];
  var writingDirection = _reactNative.I18nManager.isRTL ? 'rtl' : 'ltr';
  return React.createElement(_Text.default, _extends({}, rest, {
    style: [styles.text, (0, _extends3.default)({
      color: textColor
    }, font, {
      writingDirection: writingDirection
    }), style]
  }));
};

var styles = _reactNative.StyleSheet.create({
  text: {
    textAlign: 'left'
  }
});

var _default = (0, _theming.withTheme)(StyledText);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBU0EsSUFBTUEsVUFBVSxHQUFHLFNBQWJBLFVBQWEsT0FBcUQ7QUFBQSxNQUFsREMsS0FBa0QsUUFBbERBLEtBQWtEO0FBQUEsTUFBM0NDLEtBQTJDLFFBQTNDQSxLQUEyQztBQUFBLE1BQXBDQyxNQUFvQyxRQUFwQ0EsTUFBb0M7QUFBQSxNQUE1QkMsS0FBNEIsUUFBNUJBLEtBQTRCO0FBQUEsTUFBbEJDLElBQWtCO0FBQ3RFLE1BQU1DLFNBQVMsR0FBRyxvQkFBTUwsS0FBSyxDQUFDTSxNQUFOTixDQUFhTyxJQUFuQixFQUF5Qk4sS0FBekIsQ0FBK0JBLEtBQS9CLEVBQXNDTyxHQUF0QyxHQUE0Q0MsTUFBNUMsRUFBbEI7QUFDQSxNQUFNQyxJQUFJLEdBQUdWLEtBQUssQ0FBQ1csS0FBTlgsQ0FBWUUsTUFBWkYsQ0FBYjtBQUNBLE1BQU1ZLGdCQUFnQixHQUFHQyx5QkFBWUMsS0FBWkQsR0FBb0IsS0FBcEJBLEdBQTRCLEtBQXJEO0FBRUEsU0FDRUUsb0JBQUNDLGFBQUQsZUFDTVosSUFETjtBQUVFRCxTQUFLLEVBQUUsQ0FDTGMsTUFBTSxDQUFDVixJQURGO0FBRUhXLFdBQUssRUFBRWI7QUFGSixPQUVrQkssSUFGbEI7QUFFd0JFO0FBRnhCLFFBR0xULEtBSEs7QUFGVCxLQURGO0FBTEY7O0FBaUJBLElBQU1jLE1BQU0sR0FBR0Usd0JBQVdDLE1BQVhELENBQWtCO0FBQy9CWixNQUFJLEVBQUU7QUFDSmMsYUFBUyxFQUFFO0FBRFA7QUFEeUIsQ0FBbEJGLENBQWY7O2VBTWUsd0JBQVVwQixVQUFWIiwibmFtZXMiOlsiU3R5bGVkVGV4dCIsInRoZW1lIiwiYWxwaGEiLCJmYW1pbHkiLCJzdHlsZSIsInJlc3QiLCJ0ZXh0Q29sb3IiLCJjb2xvcnMiLCJ0ZXh0IiwicmdiIiwic3RyaW5nIiwiZm9udCIsImZvbnRzIiwid3JpdGluZ0RpcmVjdGlvbiIsIkkxOG5NYW5hZ2VyIiwiaXNSVEwiLCJSZWFjdCIsIl9UZXh0Iiwic3R5bGVzIiwiY29sb3IiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwidGV4dEFsaWduIl0sInNvdXJjZXMiOlsiU3R5bGVkVGV4dC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNvbG9yIGZyb20gJ2NvbG9yJztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEkxOG5NYW5hZ2VyLCBTdHlsZVByb3AsIFRleHRTdHlsZSwgU3R5bGVTaGVldCB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5cbmltcG9ydCBUZXh0IGZyb20gJy4vVGV4dCc7XG5pbXBvcnQgeyB3aXRoVGhlbWUgfSBmcm9tICcuLi8uLi9jb3JlL3RoZW1pbmcnO1xuXG50eXBlIFByb3BzID0gUmVhY3QuQ29tcG9uZW50UHJvcHM8dHlwZW9mIFRleHQ+ICYge1xuICBhbHBoYTogbnVtYmVyO1xuICBmYW1pbHk6ICdyZWd1bGFyJyB8ICdtZWRpdW0nIHwgJ2xpZ2h0JyB8ICd0aGluJztcbiAgc3R5bGU/OiBTdHlsZVByb3A8VGV4dFN0eWxlPjtcbiAgdGhlbWU6IFJlYWN0TmF0aXZlUGFwZXIuVGhlbWU7XG59O1xuXG5jb25zdCBTdHlsZWRUZXh0ID0gKHsgdGhlbWUsIGFscGhhLCBmYW1pbHksIHN0eWxlLCAuLi5yZXN0IH06IFByb3BzKSA9PiB7XG4gIGNvbnN0IHRleHRDb2xvciA9IGNvbG9yKHRoZW1lLmNvbG9ycy50ZXh0KS5hbHBoYShhbHBoYSkucmdiKCkuc3RyaW5nKCk7XG4gIGNvbnN0IGZvbnQgPSB0aGVtZS5mb250c1tmYW1pbHldO1xuICBjb25zdCB3cml0aW5nRGlyZWN0aW9uID0gSTE4bk1hbmFnZXIuaXNSVEwgPyAncnRsJyA6ICdsdHInO1xuXG4gIHJldHVybiAoXG4gICAgPFRleHRcbiAgICAgIHsuLi5yZXN0fVxuICAgICAgc3R5bGU9e1tcbiAgICAgICAgc3R5bGVzLnRleHQsXG4gICAgICAgIHsgY29sb3I6IHRleHRDb2xvciwgLi4uZm9udCwgd3JpdGluZ0RpcmVjdGlvbiB9LFxuICAgICAgICBzdHlsZSxcbiAgICAgIF19XG4gICAgLz5cbiAgKTtcbn07XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgdGV4dDoge1xuICAgIHRleHRBbGlnbjogJ2xlZnQnLFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhUaGVtZShTdHlsZWRUZXh0KTtcbiJdfQ==