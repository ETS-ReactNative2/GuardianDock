{"version":3,"mappings":";;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,IAAMA,iBAAiB,GAAGC,sBAASC,uBAATD,CAAiCE,sBAAjCF,CAA1B;;AAEA,IAAMG,wBAAwB,GAAG,EAAjC;AACA,IAAMC,uBAAuB,GAC3BC,sBAASC,EAATD,KAAgB,SAAhBA,IAA6BA,sBAASE,OAATF,IAAoBF,wBADnD;;AAMe,SAASK,iBAAT,OAQL;AAAA,MAPRC,SAOQ,QAPRA,SAOQ;AAAA,MANRC,UAMQ,QANRA,UAMQ;AAAA,MALRC,cAKQ,QALRA,cAKQ;AAAA,MAJRC,UAIQ,QAJRA,UAIQ;AAAA,+BAHRC,YAGQ;AAAA,MAHRA,YAGQ,kCAHO,GAGP;AAAA,MAFRC,KAEQ,QAFRA,KAEQ;AAAA,MADLC,IACK;;AACR,cAAiB,uBAAjB;AAAA,MAAQC,IAAR,SAAQA,IAAR;;AACA,wBAAkBC,KAAK,CAACC,QAAND,CAAe;AAAA,WAAM,IAAIjB,sBAASmB,KAAb,CAAmB,CAAnB,CAAN;AAAA,GAAfF,CAAlB;AAAA;AAAA,MAAOG,OAAP;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD,EAAkBC,QAAlB,EAAuC;AACvD,QAAInB,uBAAJ,EAA6B;AAC3B;AACD;;AAEDJ,0BAASwB,MAATxB,CAAgBoB,OAAhBpB,EAAyB;AACvBsB,aADuB,EACvBA,OADuB;AAEvBC,cAFuB,EAEvBA,QAFuB;AAGvBE,YAAM,EAAEC,oBAAOC,KAAPD,CAAaA,oBAAOE,IAApBF,CAHe;AAIvBG,qBAAe,EAAE;AAJM,KAAzB7B,EAKG8B,KALH9B;AALF;;AAaA,MAAM+B,aAAa,GAAIC,SAAjBD,aAAiBC,EAAD,EAA8B;AAClDX,aAAS,CAACR,YAAD,EAAe,CAAf,CAATQ;AACAZ,aAAS,SAATA,aAAS,WAATA,qBAAS,CAAGuB,CAAH,CAATvB;AAFF;;AAKA,MAAMwB,cAAc,GAAID,SAAlBC,cAAkBD,EAAD,EAA8B;AACnDX,aAAS,CAAC,CAAD,EAAI,GAAJ,CAATA;AACAX,cAAU,SAAVA,cAAU,WAAVA,sBAAU,CAAGsB,CAAH,CAAVtB;AAFF;;AAKA,SACEO,oBAAClB,iBAAD;AACEU,aAAS,EAAEsB,aADb;AAEErB,cAAU,EAAEuB,cAFd;AAGEtB,kBAAc,EACZP,uBAAuB;AAEjB8B,WAAK,EACHtB,UAAU,KAAKuB,SAAfvB,GACIA,UADJA,GAEII,IAAI,GACJ,0BADI,GAEJ;AAPW,OAQdL,cARc,IAUnBwB,SAdR;AAgBErB,SAAK,EAAE,CAAC;AAAEM,aAAO,EAAE,CAAChB,uBAAD,GAA2BgB,OAA3B,GAAqC;AAAhD,KAAD,EAAsDN,KAAtD;AAhBT,KAiBMC,IAjBN,EADF;AAqBD","names":["AnimatedPressable","Animated","createAnimatedComponent","Pressable","ANDROID_VERSION_LOLLIPOP","ANDROID_SUPPORTS_RIPPLE","Platform","OS","Version","PlatformPressable","onPressIn","onPressOut","android_ripple","pressColor","pressOpacity","style","rest","dark","React","useState","Value","opacity","animateTo","toValue","duration","timing","easing","Easing","inOut","quad","useNativeDriver","start","handlePressIn","e","handlePressOut","color","undefined"],"sources":["PlatformPressable.tsx"],"sourcesContent":["import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  Platform,\n  Pressable,\n  PressableProps,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nexport type Props = Omit<PressableProps, 'style'> & {\n  pressColor?: string;\n  pressOpacity?: number;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  children: React.ReactNode;\n};\n\nconst AnimatedPressable = Animated.createAnimatedComponent(Pressable);\n\nconst ANDROID_VERSION_LOLLIPOP = 21;\nconst ANDROID_SUPPORTS_RIPPLE =\n  Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP;\n\n/**\n * PlatformPressable provides an abstraction on top of Pressable to handle platform differences.\n */\nexport default function PlatformPressable({\n  onPressIn,\n  onPressOut,\n  android_ripple,\n  pressColor,\n  pressOpacity = 0.3,\n  style,\n  ...rest\n}: Props) {\n  const { dark } = useTheme();\n  const [opacity] = React.useState(() => new Animated.Value(1));\n\n  const animateTo = (toValue: number, duration: number) => {\n    if (ANDROID_SUPPORTS_RIPPLE) {\n      return;\n    }\n\n    Animated.timing(opacity, {\n      toValue,\n      duration,\n      easing: Easing.inOut(Easing.quad),\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const handlePressIn = (e: GestureResponderEvent) => {\n    animateTo(pressOpacity, 0);\n    onPressIn?.(e);\n  };\n\n  const handlePressOut = (e: GestureResponderEvent) => {\n    animateTo(1, 200);\n    onPressOut?.(e);\n  };\n\n  return (\n    <AnimatedPressable\n      onPressIn={handlePressIn}\n      onPressOut={handlePressOut}\n      android_ripple={\n        ANDROID_SUPPORTS_RIPPLE\n          ? {\n              color:\n                pressColor !== undefined\n                  ? pressColor\n                  : dark\n                  ? 'rgba(255, 255, 255, .32)'\n                  : 'rgba(0, 0, 0, .32)',\n              ...android_ripple,\n            }\n          : undefined\n      }\n      style={[{ opacity: !ANDROID_SUPPORTS_RIPPLE ? opacity : 1 }, style]}\n      {...rest}\n    />\n  );\n}\n"]}