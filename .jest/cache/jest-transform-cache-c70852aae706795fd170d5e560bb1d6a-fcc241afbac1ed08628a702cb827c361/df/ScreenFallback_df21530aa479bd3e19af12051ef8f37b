c6ea8081b130536fff969910f8e4fa3c
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _excluded = ["enabled"],
    _excluded2 = ["visible", "children"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MaybeScreen = MaybeScreen;
exports.MaybeScreenContainer = void 0;

var _elements = require("@react-navigation/elements");

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}

function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache(nodeInterop);

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var Screens;

try {
  Screens = require('react-native-screens');
} catch (e) {}

var MaybeScreenContainer = function MaybeScreenContainer(_ref) {
  var _Screens, _Screens$screensEnabl;

  var enabled = _ref.enabled,
      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);

  if ((_Screens = Screens) !== null && _Screens !== void 0 && (_Screens$screensEnabl = _Screens.screensEnabled) !== null && _Screens$screensEnabl !== void 0 && _Screens$screensEnabl.call(_Screens)) {
    return React.createElement(Screens.ScreenContainer, _extends({
      enabled: enabled
    }, rest));
  }

  return React.createElement(_reactNative.View, rest);
};

exports.MaybeScreenContainer = MaybeScreenContainer;

function MaybeScreen(_ref2) {
  var _Screens2, _Screens2$screensEnab;

  var visible = _ref2.visible,
      children = _ref2.children,
      rest = (0, _objectWithoutProperties2.default)(_ref2, _excluded2);

  if ((_Screens2 = Screens) !== null && _Screens2 !== void 0 && (_Screens2$screensEnab = _Screens2.screensEnabled) !== null && _Screens2$screensEnab !== void 0 && _Screens2$screensEnab.call(_Screens2)) {
    return React.createElement(Screens.Screen, _extends({
      activityState: visible ? 2 : 0
    }, rest), children);
  }

  return React.createElement(_elements.ResourceSavingView, _extends({
    visible: visible
  }, rest), children);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVNBLElBQUlBLE9BQUo7O0FBRUEsSUFBSTtBQUNGQSxTQUFPLEdBQUdDLE9BQU8sQ0FBQyxzQkFBRCxDQUFqQkQ7QUFERixFQUVFLE9BQU9FLENBQVAsRUFBVSxDQUVYOztBQUVNLElBQU1DLG9CQUFvQixHQUFHLFNBQXZCQSxvQkFBdUIsT0FPOUI7QUFBQTs7QUFBQSxNQU5KQyxPQU1JLFFBTkpBLE9BTUk7QUFBQSxNQUxEQyxJQUtDOztBQUNKLGtCQUFJTCxPQUFKLDhEQUFJTSxTQUFTQyxjQUFiLGtEQUFJQyxvQ0FBSixFQUFpQztBQUMvQixXQUFPQyxvQkFBQ1QsT0FBRCxDQUFTVSxlQUFUO0FBQXlCTixhQUFPLEVBQUVBO0FBQWxDLE9BQStDQyxJQUEvQyxFQUFQO0FBQ0Q7O0FBRUQsU0FBT0ksb0JBQUNFLGlCQUFELEVBQVVOLElBQVYsQ0FBUDtBQVpLOzs7O0FBZUEsU0FBU08sV0FBVCxRQUE0RDtBQUFBOztBQUFBLE1BQXJDQyxPQUFxQyxTQUFyQ0EsT0FBcUM7QUFBQSxNQUE1QkMsUUFBNEIsU0FBNUJBLFFBQTRCO0FBQUEsTUFBZlQsSUFBZTs7QUFDakUsbUJBQUlMLE9BQUosK0RBQUllLFVBQVNSLGNBQWIsa0RBQUlTLHFDQUFKLEVBQWlDO0FBQy9CLFdBQ0VQLG9CQUFDVCxPQUFELENBQVNpQixNQUFUO0FBQWdCQyxtQkFBYSxFQUFFTCxPQUFPLEdBQUcsQ0FBSCxHQUFPO0FBQTdDLE9BQW9EUixJQUFwRCxHQUNHUyxRQURILENBREY7QUFLRDs7QUFFRCxTQUNFTCxvQkFBQ1UsNEJBQUQ7QUFBb0JOLFdBQU8sRUFBRUE7QUFBN0IsS0FBMENSLElBQTFDLEdBQ0dTLFFBREgsQ0FERjtBQUtEIiwibmFtZXMiOlsiU2NyZWVucyIsInJlcXVpcmUiLCJlIiwiTWF5YmVTY3JlZW5Db250YWluZXIiLCJlbmFibGVkIiwicmVzdCIsIl9TY3JlZW5zIiwic2NyZWVuc0VuYWJsZWQiLCJfU2NyZWVucyRzY3JlZW5zRW5hYmwiLCJSZWFjdCIsIlNjcmVlbkNvbnRhaW5lciIsIl9yZWFjdE5hdGl2ZSIsIk1heWJlU2NyZWVuIiwidmlzaWJsZSIsImNoaWxkcmVuIiwiX1NjcmVlbnMyIiwiX1NjcmVlbnMyJHNjcmVlbnNFbmFiIiwiU2NyZWVuIiwiYWN0aXZpdHlTdGF0ZSIsIl9lbGVtZW50cyJdLCJzb3VyY2VzIjpbIlNjcmVlbkZhbGxiYWNrLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZXNvdXJjZVNhdmluZ1ZpZXcgfSBmcm9tICdAcmVhY3QtbmF2aWdhdGlvbi9lbGVtZW50cyc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBTdHlsZVByb3AsIFZpZXcsIFZpZXdQcm9wcywgVmlld1N0eWxlIH0gZnJvbSAncmVhY3QtbmF0aXZlJztcblxudHlwZSBQcm9wcyA9IHtcbiAgdmlzaWJsZTogYm9vbGVhbjtcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcbiAgZW5hYmxlZDogYm9vbGVhbjtcbiAgc3R5bGU/OiBTdHlsZVByb3A8Vmlld1N0eWxlPjtcbn07XG5cbmxldCBTY3JlZW5zOiB0eXBlb2YgaW1wb3J0KCdyZWFjdC1uYXRpdmUtc2NyZWVucycpIHwgdW5kZWZpbmVkO1xuXG50cnkge1xuICBTY3JlZW5zID0gcmVxdWlyZSgncmVhY3QtbmF0aXZlLXNjcmVlbnMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgLy8gSWdub3JlXG59XG5cbmV4cG9ydCBjb25zdCBNYXliZVNjcmVlbkNvbnRhaW5lciA9ICh7XG4gIGVuYWJsZWQsXG4gIC4uLnJlc3Rcbn06IFZpZXdQcm9wcyAmIHtcbiAgZW5hYmxlZDogYm9vbGVhbjtcbiAgaGFzVHdvU3RhdGVzOiBib29sZWFuO1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xufSkgPT4ge1xuICBpZiAoU2NyZWVucz8uc2NyZWVuc0VuYWJsZWQ/LigpKSB7XG4gICAgcmV0dXJuIDxTY3JlZW5zLlNjcmVlbkNvbnRhaW5lciBlbmFibGVkPXtlbmFibGVkfSB7Li4ucmVzdH0gLz47XG4gIH1cblxuICByZXR1cm4gPFZpZXcgey4uLnJlc3R9IC8+O1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIE1heWJlU2NyZWVuKHsgdmlzaWJsZSwgY2hpbGRyZW4sIC4uLnJlc3QgfTogUHJvcHMpIHtcbiAgaWYgKFNjcmVlbnM/LnNjcmVlbnNFbmFibGVkPy4oKSkge1xuICAgIHJldHVybiAoXG4gICAgICA8U2NyZWVucy5TY3JlZW4gYWN0aXZpdHlTdGF0ZT17dmlzaWJsZSA/IDIgOiAwfSB7Li4ucmVzdH0+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvU2NyZWVucy5TY3JlZW4+XG4gICAgKTtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPFJlc291cmNlU2F2aW5nVmlldyB2aXNpYmxlPXt2aXNpYmxlfSB7Li4ucmVzdH0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9SZXNvdXJjZVNhdmluZ1ZpZXc+XG4gICk7XG59XG4iXX0=