{"version":3,"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,IAAIA,OAAJ;;AAEA,IAAI;AACFA,SAAO,GAAGC,OAAO,CAAC,sBAAD,CAAjBD;AADF,EAEE,OAAOE,CAAP,EAAU,CAEX;;AAEM,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAO9B;AAAA;;AAAA,MANJC,OAMI,QANJA,OAMI;AAAA,MALDC,IAKC;;AACJ,kBAAIL,OAAJ,8DAAIM,SAASC,cAAb,kDAAIC,oCAAJ,EAAiC;AAC/B,WAAOC,oBAACT,OAAD,CAASU,eAAT;AAAyBN,aAAO,EAAEA;AAAlC,OAA+CC,IAA/C,EAAP;AACD;;AAED,SAAOI,oBAACE,iBAAD,EAAUN,IAAV,CAAP;AAZK;;;;AAeA,SAASO,WAAT,QAA4D;AAAA;;AAAA,MAArCC,OAAqC,SAArCA,OAAqC;AAAA,MAA5BC,QAA4B,SAA5BA,QAA4B;AAAA,MAAfT,IAAe;;AACjE,mBAAIL,OAAJ,+DAAIe,UAASR,cAAb,kDAAIS,qCAAJ,EAAiC;AAC/B,WACEP,oBAACT,OAAD,CAASiB,MAAT;AAAgBC,mBAAa,EAAEL,OAAO,GAAG,CAAH,GAAO;AAA7C,OAAoDR,IAApD,GACGS,QADH,CADF;AAKD;;AAED,SACEL,oBAACU,4BAAD;AAAoBN,WAAO,EAAEA;AAA7B,KAA0CR,IAA1C,GACGS,QADH,CADF;AAKD","names":["Screens","require","e","MaybeScreenContainer","enabled","rest","_Screens","screensEnabled","_Screens$screensEnabl","React","ScreenContainer","_reactNative","MaybeScreen","visible","children","_Screens2","_Screens2$screensEnab","Screen","activityState","_elements"],"sources":["ScreenFallback.tsx"],"sourcesContent":["import { ResourceSavingView } from '@react-navigation/elements';\nimport * as React from 'react';\nimport { StyleProp, View, ViewProps, ViewStyle } from 'react-native';\n\ntype Props = {\n  visible: boolean;\n  children: React.ReactNode;\n  enabled: boolean;\n  style?: StyleProp<ViewStyle>;\n};\n\nlet Screens: typeof import('react-native-screens') | undefined;\n\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {\n  // Ignore\n}\n\nexport const MaybeScreenContainer = ({\n  enabled,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  hasTwoStates: boolean;\n  children: React.ReactNode;\n}) => {\n  if (Screens?.screensEnabled?.()) {\n    return <Screens.ScreenContainer enabled={enabled} {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nexport function MaybeScreen({ visible, children, ...rest }: Props) {\n  if (Screens?.screensEnabled?.()) {\n    return (\n      <Screens.Screen activityState={visible ? 2 : 0} {...rest}>\n        {children}\n      </Screens.Screen>\n    );\n  }\n\n  return (\n    <ResourceSavingView visible={visible} {...rest}>\n      {children}\n    </ResourceSavingView>\n  );\n}\n"]}