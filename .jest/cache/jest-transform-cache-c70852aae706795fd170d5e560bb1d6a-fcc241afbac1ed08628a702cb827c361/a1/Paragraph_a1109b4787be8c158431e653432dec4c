c1faee245970210ead291098ff89b580
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _StyledText = _interopRequireDefault(require("./StyledText"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var Paragraph = function Paragraph(props) {
  return React.createElement(_StyledText.default, _extends({}, props, {
    alpha: 0.87,
    family: "regular",
    style: [styles.text, props.style]
  }));
};

var _default = Paragraph;
exports.default = _default;

var styles = _reactNative.StyleSheet.create({
  text: {
    fontSize: 14,
    lineHeight: 20,
    marginVertical: 2,
    letterSpacing: 0.25
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEyQkEsSUFBTUEsU0FBUyxHQUFJQyxTQUFiRCxTQUFhQyxNQUFEO0FBQUEsU0FDaEJDLG9CQUFDQyxtQkFBRCxlQUNNRixLQUROO0FBRUVHLFNBQUssRUFBRSxJQUZUO0FBR0VDLFVBQU0sRUFBQyxTQUhUO0FBSUVDLFNBQUssRUFBRSxDQUFDQyxNQUFNLENBQUNDLElBQVIsRUFBY1AsS0FBSyxDQUFDSyxLQUFwQjtBQUpULEtBRGdCO0FBQUEsQ0FBbEI7O2VBU2VOOzs7QUFFZixJQUFNTyxNQUFNLEdBQUdFLHdCQUFXQyxNQUFYRCxDQUFrQjtBQUMvQkQsTUFBSSxFQUFFO0FBQ0pHLFlBQVEsRUFBRSxFQUROO0FBRUpDLGNBQVUsRUFBRSxFQUZSO0FBR0pDLGtCQUFjLEVBQUUsQ0FIWjtBQUlKQyxpQkFBYSxFQUFFO0FBSlg7QUFEeUIsQ0FBbEJMLENBQWYiLCJuYW1lcyI6WyJQYXJhZ3JhcGgiLCJwcm9wcyIsIlJlYWN0IiwiX1N0eWxlZFRleHQiLCJhbHBoYSIsImZhbWlseSIsInN0eWxlIiwic3R5bGVzIiwidGV4dCIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJmb250U2l6ZSIsImxpbmVIZWlnaHQiLCJtYXJnaW5WZXJ0aWNhbCIsImxldHRlclNwYWNpbmciXSwic291cmNlcyI6WyJQYXJhZ3JhcGgudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFRleHRQcm9wcywgU3R5bGVTaGVldCB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgU3R5bGVkVGV4dCBmcm9tICcuL1N0eWxlZFRleHQnO1xuXG50eXBlIFByb3BzID0gVGV4dFByb3BzICYge1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xufTtcblxuLy8gQGNvbXBvbmVudC1ncm91cCBUeXBvZ3JhcGh5XG5cbi8qKlxuICogVHlwb2dyYXBoeSBjb21wb25lbnQgZm9yIHNob3dpbmcgYSBwYXJhZ3JhcGguXG4gKlxuICogPGRpdiBjbGFzcz1cInNjcmVlbnNob3RzXCI+XG4gKiAgIDxpbWcgc3JjPVwic2NyZWVuc2hvdHMvcGFyYWdyYXBoLnBuZ1wiIC8+XG4gKiA8L2Rpdj5cbiAqXG4gKiAjIyBVc2FnZVxuICogYGBganNcbiAqIGltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbiAqIGltcG9ydCB7IFBhcmFncmFwaCB9IGZyb20gJ3JlYWN0LW5hdGl2ZS1wYXBlcic7XG4gKlxuICogY29uc3QgTXlDb21wb25lbnQgPSAoKSA9PiAoXG4gKiAgIDxQYXJhZ3JhcGg+UGFyYWdyYXBoPC9QYXJhZ3JhcGg+XG4gKiApO1xuICpcbiAqIGV4cG9ydCBkZWZhdWx0IE15Q29tcG9uZW50O1xuICogYGBgXG4gKi9cbmNvbnN0IFBhcmFncmFwaCA9IChwcm9wczogUHJvcHMpID0+IChcbiAgPFN0eWxlZFRleHRcbiAgICB7Li4ucHJvcHN9XG4gICAgYWxwaGE9ezAuODd9XG4gICAgZmFtaWx5PVwicmVndWxhclwiXG4gICAgc3R5bGU9e1tzdHlsZXMudGV4dCwgcHJvcHMuc3R5bGVdfVxuICAvPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgUGFyYWdyYXBoO1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIHRleHQ6IHtcbiAgICBmb250U2l6ZTogMTQsXG4gICAgbGluZUhlaWdodDogMjAsXG4gICAgbWFyZ2luVmVydGljYWw6IDIsXG4gICAgbGV0dGVyU3BhY2luZzogMC4yNSxcbiAgfSxcbn0pO1xuIl19