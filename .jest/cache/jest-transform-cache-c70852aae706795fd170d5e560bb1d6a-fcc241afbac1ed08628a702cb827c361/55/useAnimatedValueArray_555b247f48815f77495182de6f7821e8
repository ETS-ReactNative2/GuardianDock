4651356bbdb64636c11d4516e36dbe42
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useAnimatedValueArray;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function useAnimatedValueArray(initialValues) {
  var refs = React.useRef([]);
  refs.current.length = initialValues.length;
  initialValues.forEach(function (initialValue, i) {
    var _refs$current$i;

    refs.current[i] = (_refs$current$i = refs.current[i]) !== null && _refs$current$i !== void 0 ? _refs$current$i : new _reactNative.Animated.Value(initialValue);
  });
  return refs.current;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFZSxTQUFTQSxxQkFBVCxDQUErQkMsYUFBL0IsRUFBd0Q7QUFDckUsTUFBTUMsSUFBSSxHQUFHQyxLQUFLLENBQUNDLE1BQU5ELENBQStCLEVBQS9CQSxDQUFiO0FBRUFELE1BQUksQ0FBQ0csT0FBTEgsQ0FBYUksTUFBYkosR0FBc0JELGFBQWEsQ0FBQ0ssTUFBcENKO0FBQ0FELGVBQWEsQ0FBQ00sT0FBZE4sQ0FBc0IsVUFBQ08sWUFBRCxFQUFlQyxDQUFmLEVBQXFCO0FBQUE7O0FBQ3pDUCxRQUFJLENBQUNHLE9BQUxILENBQWFPLENBQWJQLHVCQUFrQkEsSUFBSSxDQUFDRyxPQUFMSCxDQUFhTyxDQUFiUCxDQUFsQiw2REFBcUMsSUFBSVEsc0JBQVNDLEtBQWIsQ0FBbUJILFlBQW5CLENBQXJDTjtBQURGO0FBSUEsU0FBT0EsSUFBSSxDQUFDRyxPQUFaO0FBQ0QiLCJuYW1lcyI6WyJ1c2VBbmltYXRlZFZhbHVlQXJyYXkiLCJpbml0aWFsVmFsdWVzIiwicmVmcyIsIlJlYWN0IiwidXNlUmVmIiwiY3VycmVudCIsImxlbmd0aCIsImZvckVhY2giLCJpbml0aWFsVmFsdWUiLCJpIiwiQW5pbWF0ZWQiLCJWYWx1ZSJdLCJzb3VyY2VzIjpbInVzZUFuaW1hdGVkVmFsdWVBcnJheS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQW5pbWF0ZWQgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VBbmltYXRlZFZhbHVlQXJyYXkoaW5pdGlhbFZhbHVlczogbnVtYmVyW10pIHtcbiAgY29uc3QgcmVmcyA9IFJlYWN0LnVzZVJlZjxBbmltYXRlZC5WYWx1ZVtdPihbXSk7XG5cbiAgcmVmcy5jdXJyZW50Lmxlbmd0aCA9IGluaXRpYWxWYWx1ZXMubGVuZ3RoO1xuICBpbml0aWFsVmFsdWVzLmZvckVhY2goKGluaXRpYWxWYWx1ZSwgaSkgPT4ge1xuICAgIHJlZnMuY3VycmVudFtpXSA9IHJlZnMuY3VycmVudFtpXSA/PyBuZXcgQW5pbWF0ZWQuVmFsdWUoaW5pdGlhbFZhbHVlKTtcbiAgfSk7XG5cbiAgcmV0dXJuIHJlZnMuY3VycmVudDtcbn1cbiJdfQ==