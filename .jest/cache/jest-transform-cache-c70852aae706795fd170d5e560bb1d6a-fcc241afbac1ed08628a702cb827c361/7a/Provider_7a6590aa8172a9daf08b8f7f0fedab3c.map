{"version":3,"mappings":"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","names":["Provider","props","colorSchemeName","theme","Appearance","getColorScheme","React","useState","reduceMotionEnabled","setReduceMotionEnabled","colorScheme","setColorScheme","handleAppearanceChange","preferences","useEffect","subscription","AccessibilityInfo","addEventListener","_subscription","remove","removeEventListener","appearanceSubscription","addChangeListener","removeChangeListener","getTheme","providedTheme","DarkTheme","DefaultTheme","animation","scale","children","settings","_PortalHost","_settings","value","icon","MaterialCommunityIcon","_theming"],"sources":["Provider.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityInfo,\n  Appearance,\n  ColorSchemeName,\n  NativeEventSubscription,\n} from 'react-native';\nimport { ThemeProvider } from './theming';\nimport { Provider as SettingsProvider, Settings } from './settings';\nimport MaterialCommunityIcon from '../components/MaterialCommunityIcon';\nimport PortalHost from '../components/Portal/PortalHost';\nimport DefaultTheme from '../styles/DefaultTheme';\nimport DarkTheme from '../styles/DarkTheme';\n\ntype Props = {\n  children: React.ReactNode;\n  theme?: ReactNativePaper.Theme;\n  settings?: Settings;\n};\n\nconst Provider = ({ ...props }: Props) => {\n  const colorSchemeName =\n    (!props.theme && Appearance?.getColorScheme()) || 'light';\n\n  const [reduceMotionEnabled, setReduceMotionEnabled] = React.useState<boolean>(\n    false\n  );\n  const [colorScheme, setColorScheme] = React.useState<ColorSchemeName>(\n    colorSchemeName\n  );\n\n  const handleAppearanceChange = (\n    preferences: Appearance.AppearancePreferences\n  ) => {\n    const { colorScheme } = preferences;\n    setColorScheme(colorScheme);\n  };\n\n  React.useEffect(() => {\n    let subscription: NativeEventSubscription | undefined;\n\n    if (!props.theme) {\n      subscription = AccessibilityInfo.addEventListener(\n        'reduceMotionChanged',\n        setReduceMotionEnabled\n      );\n    }\n    return () => {\n      if (!props.theme) {\n        if (subscription?.remove) {\n          subscription.remove();\n        } else {\n          AccessibilityInfo.removeEventListener(\n            'reduceMotionChanged',\n            setReduceMotionEnabled\n          );\n        }\n      }\n    };\n  }, [props.theme]);\n\n  React.useEffect(() => {\n    let appearanceSubscription: NativeEventSubscription | undefined;\n    if (!props.theme) {\n      appearanceSubscription = Appearance?.addChangeListener(\n        handleAppearanceChange\n      ) as NativeEventSubscription | undefined;\n    }\n    return () => {\n      if (!props.theme) {\n        if (appearanceSubscription) {\n          appearanceSubscription.remove();\n        } else {\n          Appearance?.removeChangeListener(handleAppearanceChange);\n        }\n      }\n    };\n  }, [props.theme]);\n\n  const getTheme = () => {\n    const { theme: providedTheme } = props;\n\n    if (providedTheme) {\n      return providedTheme;\n    } else {\n      const theme = (colorScheme === 'dark'\n        ? DarkTheme\n        : DefaultTheme) as ReactNativePaper.Theme;\n\n      return {\n        ...theme,\n        animation: {\n          ...theme.animation,\n          scale: reduceMotionEnabled ? 0 : 1,\n        },\n      };\n    }\n  };\n\n  const { children, settings } = props;\n  return (\n    <PortalHost>\n      <SettingsProvider value={settings || { icon: MaterialCommunityIcon }}>\n        <ThemeProvider theme={getTheme()}>{children}</ThemeProvider>\n      </SettingsProvider>\n    </PortalHost>\n  );\n};\n\nexport default Provider;\n"]}