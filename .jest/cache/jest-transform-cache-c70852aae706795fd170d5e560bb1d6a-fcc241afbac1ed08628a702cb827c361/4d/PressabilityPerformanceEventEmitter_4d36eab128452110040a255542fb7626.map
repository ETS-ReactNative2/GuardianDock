{"version":3,"sources":["PressabilityPerformanceEventEmitter.js"],"names":["PressabilityPerformanceEventEmitter","_listeners","listener","push","index","indexOf","splice","constructEvent","length","event","forEach","PressabilityPerformanceEventEmitterSingleton"],"mappings":";;;;;;;;;;;IAkBMA,mC;AAGJ,iDAAc;AAAA;AAAA,SAFdC,UAEc,GAF4C,EAE5C;AAAE;;;;WAEhB,qBAAYC,QAAZ,EAAkE;AAChE,WAAKD,UAAL,CAAgBE,IAAhB,CAAqBD,QAArB;AACD;;;WAED,wBAAeA,QAAf,EAAqE;AACnE,UAAME,KAAK,GAAG,KAAKH,UAAL,CAAgBI,OAAhB,CAAwBH,QAAxB,CAAd;;AACA,UAAIE,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,aAAKH,UAAL,CAAgBK,MAAhB,CAAuBF,KAAvB,EAA8B,CAA9B;AACD;AACF;;;WAED,mBAAUG,cAAV,EAAoE;AAClE,UAAI,KAAKN,UAAL,CAAgBO,MAAhB,KAA2B,CAA/B,EAAkC;AAChC;AACD;;AAED,UAAMC,KAAK,GAAGF,cAAc,EAA5B;;AACA,WAAKN,UAAL,CAAgBS,OAAhB,CAAwB,UAAAR,QAAQ;AAAA,eAAIA,QAAQ,CAACO,KAAD,CAAZ;AAAA,OAAhC;AACD;;;;;AAGH,IAAME,4CAAiF,GAAG,IAAIX,mCAAJ,EAA1F;eAEeW,4C","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport {type PressabilityTouchSignal as TouchSignal} from './PressabilityTypes.js';\n\nexport type PressabilityPerformanceEvent = $ReadOnly<{|\n  signal: TouchSignal,\n  nativeTimestamp: number,\n|}>;\nexport type PressabilityPerformanceEventListener = PressabilityPerformanceEvent => void;\n\nclass PressabilityPerformanceEventEmitter {\n  _listeners: Array<PressabilityPerformanceEventListener> = [];\n\n  constructor() {}\n\n  addListener(listener: PressabilityPerformanceEventListener): void {\n    this._listeners.push(listener);\n  }\n\n  removeListener(listener: PressabilityPerformanceEventListener): void {\n    const index = this._listeners.indexOf(listener);\n    if (index > -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  emitEvent(constructEvent: () => PressabilityPerformanceEvent): void {\n    if (this._listeners.length === 0) {\n      return;\n    }\n\n    const event = constructEvent();\n    this._listeners.forEach(listener => listener(event));\n  }\n}\n\nconst PressabilityPerformanceEventEmitterSingleton: PressabilityPerformanceEventEmitter = new PressabilityPerformanceEventEmitter();\n\nexport default PressabilityPerformanceEventEmitterSingleton;\n"]}