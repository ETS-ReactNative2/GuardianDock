0df657198bb04bc5f7ce89b6249709d6
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactNative = require("react-native");

var _State = require("./State");

var _Directions = require("./Directions");

var NOOP = function NOOP() {};

var PanGestureHandler = _reactNative.View;
var attachGestureHandler = NOOP;
var createGestureHandler = NOOP;
var dropGestureHandler = NOOP;
var updateGestureHandler = NOOP;
var NativeViewGestureHandler = _reactNative.View;
var TapGestureHandler = _reactNative.View;
var ForceTouchGestureHandler = _reactNative.View;
var LongPressGestureHandler = _reactNative.View;
var PinchGestureHandler = _reactNative.View;
var RotationGestureHandler = _reactNative.View;
var FlingGestureHandler = _reactNative.View;
var RawButton = _reactNative.TouchableNativeFeedback;
var BaseButton = _reactNative.TouchableNativeFeedback;
var RectButton = _reactNative.TouchableNativeFeedback;
var BorderlessButton = _reactNative.TouchableNativeFeedback;
var _default = {
  TouchableHighlight: _reactNative.TouchableHighlight,
  TouchableNativeFeedback: _reactNative.TouchableNativeFeedback,
  TouchableOpacity: _reactNative.TouchableOpacity,
  TouchableWithoutFeedback: _reactNative.TouchableWithoutFeedback,
  ScrollView: _reactNative.ScrollView,
  FlatList: _reactNative.FlatList,
  Switch: _reactNative.Switch,
  TextInput: _reactNative.TextInput,
  DrawerLayoutAndroid: _reactNative.DrawerLayoutAndroid,
  NativeViewGestureHandler: NativeViewGestureHandler,
  TapGestureHandler: TapGestureHandler,
  ForceTouchGestureHandler: ForceTouchGestureHandler,
  LongPressGestureHandler: LongPressGestureHandler,
  PinchGestureHandler: PinchGestureHandler,
  RotationGestureHandler: RotationGestureHandler,
  FlingGestureHandler: FlingGestureHandler,
  RawButton: RawButton,
  BaseButton: BaseButton,
  RectButton: RectButton,
  BorderlessButton: BorderlessButton,
  PanGestureHandler: PanGestureHandler,
  attachGestureHandler: attachGestureHandler,
  createGestureHandler: createGestureHandler,
  dropGestureHandler: dropGestureHandler,
  updateGestureHandler: updateGestureHandler,
  Directions: _Directions.Directions,
  State: _State.State
};
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQVlBOztBQUNBOztBQUVBLElBQU1BLElBQUksR0FBRyxTQUFQQSxJQUFPLEdBQU0sQ0FBbkI7O0FBR0EsSUFBTUMsaUJBQWlCLEdBQUdDLGlCQUExQjtBQUNBLElBQU1DLG9CQUFvQixHQUFHSCxJQUE3QjtBQUNBLElBQU1JLG9CQUFvQixHQUFHSixJQUE3QjtBQUNBLElBQU1LLGtCQUFrQixHQUFHTCxJQUEzQjtBQUNBLElBQU1NLG9CQUFvQixHQUFHTixJQUE3QjtBQUNBLElBQU1PLHdCQUF3QixHQUFHTCxpQkFBakM7QUFDQSxJQUFNTSxpQkFBaUIsR0FBR04saUJBQTFCO0FBQ0EsSUFBTU8sd0JBQXdCLEdBQUdQLGlCQUFqQztBQUNBLElBQU1RLHVCQUF1QixHQUFHUixpQkFBaEM7QUFDQSxJQUFNUyxtQkFBbUIsR0FBR1QsaUJBQTVCO0FBQ0EsSUFBTVUsc0JBQXNCLEdBQUdWLGlCQUEvQjtBQUNBLElBQU1XLG1CQUFtQixHQUFHWCxpQkFBNUI7QUFDQSxJQUFNWSxTQUFTLEdBQUdDLG9DQUFsQjtBQUNBLElBQU1DLFVBQVUsR0FBR0Qsb0NBQW5CO0FBQ0EsSUFBTUUsVUFBVSxHQUFHRixvQ0FBbkI7QUFDQSxJQUFNRyxnQkFBZ0IsR0FBR0gsb0NBQXpCO2VBRWU7QUFDYkksb0JBQWtCLEVBQWxCQSwrQkFEYTtBQUViSix5QkFBdUIsRUFBdkJBLG9DQUZhO0FBR2JLLGtCQUFnQixFQUFoQkEsNkJBSGE7QUFJYkMsMEJBQXdCLEVBQXhCQSxxQ0FKYTtBQUtiQyxZQUFVLEVBQVZBLHVCQUxhO0FBTWJDLFVBQVEsRUFBUkEscUJBTmE7QUFPYkMsUUFBTSxFQUFOQSxtQkFQYTtBQVFiQyxXQUFTLEVBQVRBLHNCQVJhO0FBU2JDLHFCQUFtQixFQUFuQkEsZ0NBVGE7QUFVYm5CLDBCQVZhLEVBVWJBLHdCQVZhO0FBV2JDLG1CQVhhLEVBV2JBLGlCQVhhO0FBWWJDLDBCQVphLEVBWWJBLHdCQVphO0FBYWJDLHlCQWJhLEVBYWJBLHVCQWJhO0FBY2JDLHFCQWRhLEVBY2JBLG1CQWRhO0FBZWJDLHdCQWZhLEVBZWJBLHNCQWZhO0FBZ0JiQyxxQkFoQmEsRUFnQmJBLG1CQWhCYTtBQWlCYkMsV0FqQmEsRUFpQmJBLFNBakJhO0FBa0JiRSxZQWxCYSxFQWtCYkEsVUFsQmE7QUFtQmJDLFlBbkJhLEVBbUJiQSxVQW5CYTtBQW9CYkMsa0JBcEJhLEVBb0JiQSxnQkFwQmE7QUFxQmJqQixtQkFyQmEsRUFxQmJBLGlCQXJCYTtBQXNCYkUsc0JBdEJhLEVBc0JiQSxvQkF0QmE7QUF1QmJDLHNCQXZCYSxFQXVCYkEsb0JBdkJhO0FBd0JiQyxvQkF4QmEsRUF3QmJBLGtCQXhCYTtBQXlCYkMsc0JBekJhLEVBeUJiQSxvQkF6QmE7QUEyQmJxQixZQUFVLEVBQVZBLHNCQTNCYTtBQTRCYkMsT0FBSyxFQUFMQTtBQTVCYSIsIm5hbWVzIjpbIk5PT1AiLCJQYW5HZXN0dXJlSGFuZGxlciIsIlZpZXciLCJhdHRhY2hHZXN0dXJlSGFuZGxlciIsImNyZWF0ZUdlc3R1cmVIYW5kbGVyIiwiZHJvcEdlc3R1cmVIYW5kbGVyIiwidXBkYXRlR2VzdHVyZUhhbmRsZXIiLCJOYXRpdmVWaWV3R2VzdHVyZUhhbmRsZXIiLCJUYXBHZXN0dXJlSGFuZGxlciIsIkZvcmNlVG91Y2hHZXN0dXJlSGFuZGxlciIsIkxvbmdQcmVzc0dlc3R1cmVIYW5kbGVyIiwiUGluY2hHZXN0dXJlSGFuZGxlciIsIlJvdGF0aW9uR2VzdHVyZUhhbmRsZXIiLCJGbGluZ0dlc3R1cmVIYW5kbGVyIiwiUmF3QnV0dG9uIiwiVG91Y2hhYmxlTmF0aXZlRmVlZGJhY2siLCJCYXNlQnV0dG9uIiwiUmVjdEJ1dHRvbiIsIkJvcmRlcmxlc3NCdXR0b24iLCJUb3VjaGFibGVIaWdobGlnaHQiLCJUb3VjaGFibGVPcGFjaXR5IiwiVG91Y2hhYmxlV2l0aG91dEZlZWRiYWNrIiwiU2Nyb2xsVmlldyIsIkZsYXRMaXN0IiwiU3dpdGNoIiwiVGV4dElucHV0IiwiRHJhd2VyTGF5b3V0QW5kcm9pZCIsIkRpcmVjdGlvbnMiLCJTdGF0ZSJdLCJzb3VyY2VzIjpbIm1vY2tzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIFRvdWNoYWJsZUhpZ2hsaWdodCxcbiAgVG91Y2hhYmxlTmF0aXZlRmVlZGJhY2ssXG4gIFRvdWNoYWJsZU9wYWNpdHksXG4gIFRvdWNoYWJsZVdpdGhvdXRGZWVkYmFjayxcbiAgU2Nyb2xsVmlldyxcbiAgRmxhdExpc3QsXG4gIFN3aXRjaCxcbiAgVGV4dElucHV0LFxuICBEcmF3ZXJMYXlvdXRBbmRyb2lkLFxuICBWaWV3LFxufSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IHsgU3RhdGUgfSBmcm9tICcuL1N0YXRlJztcbmltcG9ydCB7IERpcmVjdGlvbnMgfSBmcm9tICcuL0RpcmVjdGlvbnMnO1xuXG5jb25zdCBOT09QID0gKCkgPT4ge1xuICAvLyBkbyBub3RoaW5nXG59O1xuY29uc3QgUGFuR2VzdHVyZUhhbmRsZXIgPSBWaWV3O1xuY29uc3QgYXR0YWNoR2VzdHVyZUhhbmRsZXIgPSBOT09QO1xuY29uc3QgY3JlYXRlR2VzdHVyZUhhbmRsZXIgPSBOT09QO1xuY29uc3QgZHJvcEdlc3R1cmVIYW5kbGVyID0gTk9PUDtcbmNvbnN0IHVwZGF0ZUdlc3R1cmVIYW5kbGVyID0gTk9PUDtcbmNvbnN0IE5hdGl2ZVZpZXdHZXN0dXJlSGFuZGxlciA9IFZpZXc7XG5jb25zdCBUYXBHZXN0dXJlSGFuZGxlciA9IFZpZXc7XG5jb25zdCBGb3JjZVRvdWNoR2VzdHVyZUhhbmRsZXIgPSBWaWV3O1xuY29uc3QgTG9uZ1ByZXNzR2VzdHVyZUhhbmRsZXIgPSBWaWV3O1xuY29uc3QgUGluY2hHZXN0dXJlSGFuZGxlciA9IFZpZXc7XG5jb25zdCBSb3RhdGlvbkdlc3R1cmVIYW5kbGVyID0gVmlldztcbmNvbnN0IEZsaW5nR2VzdHVyZUhhbmRsZXIgPSBWaWV3O1xuY29uc3QgUmF3QnV0dG9uID0gVG91Y2hhYmxlTmF0aXZlRmVlZGJhY2s7XG5jb25zdCBCYXNlQnV0dG9uID0gVG91Y2hhYmxlTmF0aXZlRmVlZGJhY2s7XG5jb25zdCBSZWN0QnV0dG9uID0gVG91Y2hhYmxlTmF0aXZlRmVlZGJhY2s7XG5jb25zdCBCb3JkZXJsZXNzQnV0dG9uID0gVG91Y2hhYmxlTmF0aXZlRmVlZGJhY2s7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgVG91Y2hhYmxlSGlnaGxpZ2h0LFxuICBUb3VjaGFibGVOYXRpdmVGZWVkYmFjayxcbiAgVG91Y2hhYmxlT3BhY2l0eSxcbiAgVG91Y2hhYmxlV2l0aG91dEZlZWRiYWNrLFxuICBTY3JvbGxWaWV3LFxuICBGbGF0TGlzdCxcbiAgU3dpdGNoLFxuICBUZXh0SW5wdXQsXG4gIERyYXdlckxheW91dEFuZHJvaWQsXG4gIE5hdGl2ZVZpZXdHZXN0dXJlSGFuZGxlcixcbiAgVGFwR2VzdHVyZUhhbmRsZXIsXG4gIEZvcmNlVG91Y2hHZXN0dXJlSGFuZGxlcixcbiAgTG9uZ1ByZXNzR2VzdHVyZUhhbmRsZXIsXG4gIFBpbmNoR2VzdHVyZUhhbmRsZXIsXG4gIFJvdGF0aW9uR2VzdHVyZUhhbmRsZXIsXG4gIEZsaW5nR2VzdHVyZUhhbmRsZXIsXG4gIFJhd0J1dHRvbixcbiAgQmFzZUJ1dHRvbixcbiAgUmVjdEJ1dHRvbixcbiAgQm9yZGVybGVzc0J1dHRvbixcbiAgUGFuR2VzdHVyZUhhbmRsZXIsXG4gIGF0dGFjaEdlc3R1cmVIYW5kbGVyLFxuICBjcmVhdGVHZXN0dXJlSGFuZGxlcixcbiAgZHJvcEdlc3R1cmVIYW5kbGVyLFxuICB1cGRhdGVHZXN0dXJlSGFuZGxlcixcbiAgLy8gcHJvYmFibHkgY2FuIGJlIHJlbW92ZWRcbiAgRGlyZWN0aW9ucyxcbiAgU3RhdGUsXG59IGFzIGNvbnN0O1xuIl19