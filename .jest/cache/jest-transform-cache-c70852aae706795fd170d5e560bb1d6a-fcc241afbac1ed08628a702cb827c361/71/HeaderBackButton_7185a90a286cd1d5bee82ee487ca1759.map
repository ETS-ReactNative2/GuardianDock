{"version":3,"mappings":"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","names":["HeaderBackButton","disabled","allowFontScaling","backImage","label","labelStyle","labelVisible","onLabelLayout","onPress","pressColor","pressOpacity","screenLayout","customTintColor","tintColor","titleLayout","truncatedLabel","accessibilityLabel","testID","style","colors","React","useState","undefined","initialLabelWidth","setInitialLabelWidth","Platform","select","ios","primary","default","text","handleLabelLayout","e","nativeEvent","layout","x","width","shouldTruncateLabel","renderBackImage","_reactNative","styles","icon","Boolean","iconWithLabel","source","require","fadeDuration","renderLabel","leftLabelText","labelElement","labelWrapper","minWidth","Text","accessible","onLayout","color","numberOfLines","OS","_MaskedView","maskElement","iconMaskContainer","iconMask","iconMaskFillerRect","handlePress","requestAnimationFrame","_PlatformPressable","accessibilityRole","android_ripple","borderless","container","hitSlop","top","right","bottom","left","Fragment","StyleSheet","create","alignItems","flexDirection","hairlineWidth","marginVertical","marginHorizontal","opacity","fontSize","letterSpacing","height","marginLeft","marginRight","resizeMode","transform","scaleX","I18nManager","isRTL","margin","flex","justifyContent","backgroundColor","alignSelf"],"sources":["HeaderBackButton.tsx"],"sourcesContent":["import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  I18nManager,\n  Image,\n  LayoutChangeEvent,\n  Platform,\n  StyleSheet,\n  View,\n} from 'react-native';\n\nimport MaskedView from '../MaskedView';\nimport PlatformPressable from '../PlatformPressable';\nimport type { HeaderBackButtonProps } from '../types';\n\nexport default function HeaderBackButton({\n  disabled,\n  allowFontScaling,\n  backImage,\n  label,\n  labelStyle,\n  labelVisible,\n  onLabelLayout,\n  onPress,\n  pressColor,\n  pressOpacity,\n  screenLayout,\n  tintColor: customTintColor,\n  titleLayout,\n  truncatedLabel = 'Back',\n  accessibilityLabel = label && label !== 'Back' ? `${label}, back` : 'Go back',\n  testID,\n  style,\n}: HeaderBackButtonProps) {\n  const { colors } = useTheme();\n\n  const [initialLabelWidth, setInitialLabelWidth] = React.useState<\n    undefined | number\n  >(undefined);\n\n  const tintColor =\n    customTintColor !== undefined\n      ? customTintColor\n      : Platform.select({\n          ios: colors.primary,\n          default: colors.text,\n        });\n\n  const handleLabelLayout = (e: LayoutChangeEvent) => {\n    onLabelLayout?.(e);\n\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n\n  const shouldTruncateLabel = () => {\n    return (\n      !label ||\n      (initialLabelWidth &&\n        titleLayout &&\n        screenLayout &&\n        (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26)\n    );\n  };\n\n  const renderBackImage = () => {\n    if (backImage) {\n      return backImage({ tintColor });\n    } else {\n      return (\n        <Image\n          style={[\n            styles.icon,\n            Boolean(labelVisible) && styles.iconWithLabel,\n            Boolean(tintColor) && { tintColor },\n          ]}\n          source={require('../assets/back-icon.png')}\n          fadeDuration={0}\n        />\n      );\n    }\n  };\n\n  const renderLabel = () => {\n    const leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    const labelElement = (\n      <View\n        style={\n          screenLayout\n            ? // We make the button extend till the middle of the screen\n              // Otherwise it appears to cut off when translating\n              [styles.labelWrapper, { minWidth: screenLayout.width / 2 - 27 }]\n            : null\n        }\n      >\n        <Animated.Text\n          accessible={false}\n          onLayout={\n            // This measurement is used to determine if we should truncate the label when it doesn't fit\n            // Only measure it when label is not truncated because we want the measurement of full label\n            leftLabelText === label ? handleLabelLayout : undefined\n          }\n          style={[\n            styles.label,\n            tintColor ? { color: tintColor } : null,\n            labelStyle,\n          ]}\n          numberOfLines={1}\n          allowFontScaling={!!allowFontScaling}\n        >\n          {leftLabelText}\n        </Animated.Text>\n      </View>\n    );\n\n    if (backImage || Platform.OS !== 'ios') {\n      // When a custom backimage is specified, we can't mask the label\n      // Otherwise there might be weird effect due to our mask not being the same as the image\n      return labelElement;\n    }\n\n    return (\n      <MaskedView\n        maskElement={\n          <View style={styles.iconMaskContainer}>\n            <Image\n              source={require('../assets/back-icon-mask.png')}\n              style={styles.iconMask}\n            />\n            <View style={styles.iconMaskFillerRect} />\n          </View>\n        }\n      >\n        {labelElement}\n      </MaskedView>\n    );\n  };\n\n  const handlePress = () => onPress && requestAnimationFrame(onPress);\n\n  return (\n    <PlatformPressable\n      disabled={disabled}\n      accessible\n      accessibilityRole=\"button\"\n      accessibilityLabel={accessibilityLabel}\n      testID={testID}\n      onPress={disabled ? undefined : handlePress}\n      pressColor={pressColor}\n      pressOpacity={pressOpacity}\n      android_ripple={{ borderless: true }}\n      style={[styles.container, disabled && styles.disabled, style]}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n    >\n      <React.Fragment>\n        {renderBackImage()}\n        {renderLabel()}\n      </React.Fragment>\n    </PlatformPressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    minWidth: StyleSheet.hairlineWidth, // Avoid collapsing when title is long\n    ...Platform.select({\n      ios: null,\n      default: {\n        marginVertical: 3,\n        marginHorizontal: 11,\n      },\n    }),\n  },\n  disabled: {\n    opacity: 0.5,\n  },\n  label: {\n    fontSize: 17,\n    // Title and back label are a bit different width due to title being bold\n    // Adjusting the letterSpacing makes them coincide better\n    letterSpacing: 0.35,\n  },\n  labelWrapper: {\n    // These styles will make sure that the label doesn't fill the available space\n    // Otherwise it messes with the measurement of the label\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n  }),\n  iconWithLabel:\n    Platform.OS === 'ios'\n      ? {\n          marginRight: 6,\n        }\n      : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n  },\n});\n"]}