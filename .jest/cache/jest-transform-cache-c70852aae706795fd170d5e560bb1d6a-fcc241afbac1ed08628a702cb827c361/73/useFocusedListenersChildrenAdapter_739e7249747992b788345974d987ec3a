c45a059dd1b7db3306408d218955f8d4
"use strict";

function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useFocusedListenersChildrenAdapter;

var React = _interopRequireWildcard(require("react"));

var _NavigationBuilderContext = _interopRequireDefault(require("./NavigationBuilderContext"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}

function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache(nodeInterop);

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function useFocusedListenersChildrenAdapter(_ref) {
  var navigation = _ref.navigation,
      focusedListeners = _ref.focusedListeners;

  var _React$useContext = React.useContext(_NavigationBuilderContext.default),
      addListener = _React$useContext.addListener;

  var listener = React.useCallback(function (callback) {
    if (navigation.isFocused()) {
      for (var _iterator = _createForOfIteratorHelperLoose(focusedListeners), _step; !(_step = _iterator()).done;) {
        var _listener = _step.value;

        var _listener2 = _listener(callback),
            handled = _listener2.handled,
            result = _listener2.result;

        if (handled) {
          return {
            handled: handled,
            result: result
          };
        }
      }

      return {
        handled: true,
        result: callback(navigation)
      };
    } else {
      return {
        handled: false,
        result: null
      };
    }
  }, [focusedListeners, navigation]);
  React.useEffect(function () {
    return addListener === null || addListener === void 0 ? void 0 : addListener('focus', listener);
  }, [addListener, listener]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBY2UsU0FBU0Esa0NBQVQsT0FHSDtBQUFBLE1BRlZDLFVBRVUsUUFGVkEsVUFFVTtBQUFBLE1BRFZDLGdCQUNVLFFBRFZBLGdCQUNVOztBQUNWLDBCQUF3QkMsS0FBSyxDQUFDQyxVQUFORCxDQUFpQkUsaUNBQWpCRixDQUF4QjtBQUFBLE1BQVFHLFdBQVIscUJBQVFBLFdBQVI7O0FBRUEsTUFBTUMsUUFBUSxHQUFHSixLQUFLLENBQUNLLFdBQU5MLENBQ2RNLGtCQUFELEVBQThDO0FBQzVDLFFBQUlSLFVBQVUsQ0FBQ1MsU0FBWFQsRUFBSixFQUE0QjtBQUMxQiwyREFBdUJDLGdCQUF2Qix3Q0FBeUM7QUFBQSxZQUE5QkssU0FBOEI7O0FBQ3ZDLHlCQUE0QkEsU0FBUSxDQUFDRSxRQUFELENBQXBDO0FBQUEsWUFBUUUsT0FBUixjQUFRQSxPQUFSO0FBQUEsWUFBaUJDLE1BQWpCLGNBQWlCQSxNQUFqQjs7QUFFQSxZQUFJRCxPQUFKLEVBQWE7QUFDWCxpQkFBTztBQUFFQSxtQkFBRixFQUFFQSxPQUFGO0FBQVdDO0FBQVgsV0FBUDtBQUNEO0FBQ0Y7O0FBRUQsYUFBTztBQUFFRCxlQUFPLEVBQUUsSUFBWDtBQUFpQkMsY0FBTSxFQUFFSCxRQUFRLENBQUNSLFVBQUQ7QUFBakMsT0FBUDtBQVRGLFdBVU87QUFDTCxhQUFPO0FBQUVVLGVBQU8sRUFBRSxLQUFYO0FBQWtCQyxjQUFNLEVBQUU7QUFBMUIsT0FBUDtBQUNEO0FBZFksS0FnQmYsQ0FBQ1YsZ0JBQUQsRUFBbUJELFVBQW5CLENBaEJlRSxDQUFqQjtBQW1CQUEsT0FBSyxDQUFDVSxTQUFOVixDQUNFO0FBQUEsV0FBTUcsV0FBTixTQUFNQSxlQUFOLFdBQU1BLEdBQU4sTUFBTUEsY0FBVyxDQUFHLE9BQUgsRUFBWUMsUUFBWixDQUFqQjtBQUFBLEdBREZKLEVBRUUsQ0FBQ0csV0FBRCxFQUFjQyxRQUFkLENBRkZKO0FBSUQiLCJuYW1lcyI6WyJ1c2VGb2N1c2VkTGlzdGVuZXJzQ2hpbGRyZW5BZGFwdGVyIiwibmF2aWdhdGlvbiIsImZvY3VzZWRMaXN0ZW5lcnMiLCJSZWFjdCIsInVzZUNvbnRleHQiLCJOYXZpZ2F0aW9uQnVpbGRlckNvbnRleHQiLCJhZGRMaXN0ZW5lciIsImxpc3RlbmVyIiwidXNlQ2FsbGJhY2siLCJjYWxsYmFjayIsImlzRm9jdXNlZCIsImhhbmRsZWQiLCJyZXN1bHQiLCJ1c2VFZmZlY3QiXSwic291cmNlcyI6WyJ1c2VGb2N1c2VkTGlzdGVuZXJzQ2hpbGRyZW5BZGFwdGVyLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IFBhcmFtTGlzdEJhc2UgfSBmcm9tICdAcmVhY3QtbmF2aWdhdGlvbi9yb3V0ZXJzJztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IE5hdmlnYXRpb25CdWlsZGVyQ29udGV4dCwge1xuICBGb2N1c2VkTmF2aWdhdGlvbkNhbGxiYWNrLFxuICBGb2N1c2VkTmF2aWdhdGlvbkxpc3RlbmVyLFxufSBmcm9tICcuL05hdmlnYXRpb25CdWlsZGVyQ29udGV4dCc7XG5pbXBvcnQgdHlwZSB7IE5hdmlnYXRpb25IZWxwZXJzIH0gZnJvbSAnLi90eXBlcyc7XG5cbnR5cGUgT3B0aW9ucyA9IHtcbiAgbmF2aWdhdGlvbjogTmF2aWdhdGlvbkhlbHBlcnM8UGFyYW1MaXN0QmFzZT47XG4gIGZvY3VzZWRMaXN0ZW5lcnM6IEZvY3VzZWROYXZpZ2F0aW9uTGlzdGVuZXJbXTtcbn07XG5cbi8qKlxuICogSG9vayBmb3IgcGFzc2luZyBmb2N1cyBjYWxsYmFjayB0byBjaGlsZHJlblxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VGb2N1c2VkTGlzdGVuZXJzQ2hpbGRyZW5BZGFwdGVyKHtcbiAgbmF2aWdhdGlvbixcbiAgZm9jdXNlZExpc3RlbmVycyxcbn06IE9wdGlvbnMpIHtcbiAgY29uc3QgeyBhZGRMaXN0ZW5lciB9ID0gUmVhY3QudXNlQ29udGV4dChOYXZpZ2F0aW9uQnVpbGRlckNvbnRleHQpO1xuXG4gIGNvbnN0IGxpc3RlbmVyID0gUmVhY3QudXNlQ2FsbGJhY2soXG4gICAgKGNhbGxiYWNrOiBGb2N1c2VkTmF2aWdhdGlvbkNhbGxiYWNrPGFueT4pID0+IHtcbiAgICAgIGlmIChuYXZpZ2F0aW9uLmlzRm9jdXNlZCgpKSB7XG4gICAgICAgIGZvciAoY29uc3QgbGlzdGVuZXIgb2YgZm9jdXNlZExpc3RlbmVycykge1xuICAgICAgICAgIGNvbnN0IHsgaGFuZGxlZCwgcmVzdWx0IH0gPSBsaXN0ZW5lcihjYWxsYmFjayk7XG5cbiAgICAgICAgICBpZiAoaGFuZGxlZCkge1xuICAgICAgICAgICAgcmV0dXJuIHsgaGFuZGxlZCwgcmVzdWx0IH07XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHsgaGFuZGxlZDogdHJ1ZSwgcmVzdWx0OiBjYWxsYmFjayhuYXZpZ2F0aW9uKSB9O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHsgaGFuZGxlZDogZmFsc2UsIHJlc3VsdDogbnVsbCB9O1xuICAgICAgfVxuICAgIH0sXG4gICAgW2ZvY3VzZWRMaXN0ZW5lcnMsIG5hdmlnYXRpb25dXG4gICk7XG5cbiAgUmVhY3QudXNlRWZmZWN0KFxuICAgICgpID0+IGFkZExpc3RlbmVyPy4oJ2ZvY3VzJywgbGlzdGVuZXIpLFxuICAgIFthZGRMaXN0ZW5lciwgbGlzdGVuZXJdXG4gICk7XG59XG4iXX0=