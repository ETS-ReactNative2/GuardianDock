7901676e1f0df9ace5c6ed3bca1ea43b
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");

var _extends3 = _interopRequireDefault2(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));

var _excluded = ["children", "size", "style", "theme", "visible"],
    _excluded2 = ["backgroundColor"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _colors = require("../styles/colors");

var _theming = require("../core/theming");

var _getContrastingColor = _interopRequireDefault(require("../utils/getContrastingColor"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var defaultSize = 20;

var Badge = function Badge(_ref) {
  var children = _ref.children,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? defaultSize : _ref$size,
      style = _ref.style,
      theme = _ref.theme,
      _ref$visible = _ref.visible,
      visible = _ref$visible === void 0 ? true : _ref$visible,
      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);

  var _React$useRef = React.useRef(new _reactNative.Animated.Value(visible ? 1 : 0)),
      opacity = _React$useRef.current;

  var isFirstRendering = React.useRef(true);
  var scale = theme.animation.scale;
  React.useEffect(function () {
    if (isFirstRendering.current) {
      isFirstRendering.current = false;
      return;
    }

    _reactNative.Animated.timing(opacity, {
      toValue: visible ? 1 : 0,
      duration: 150 * scale,
      useNativeDriver: true
    }).start();
  }, [visible, opacity, scale]);

  var _ref2 = _reactNative.StyleSheet.flatten(style) || {},
      _ref2$backgroundColor = _ref2.backgroundColor,
      backgroundColor = _ref2$backgroundColor === void 0 ? theme.colors.notification : _ref2$backgroundColor,
      restStyle = (0, _objectWithoutProperties2.default)(_ref2, _excluded2);

  var textColor = (0, _getContrastingColor.default)(backgroundColor, _colors.white, _colors.black);
  var borderRadius = size / 2;
  return React.createElement(_reactNative.Animated.Text, _extends({
    numberOfLines: 1,
    style: [(0, _extends3.default)({
      opacity: opacity,
      backgroundColor: backgroundColor,
      color: textColor,
      fontSize: size * 0.5
    }, theme.fonts.regular, {
      lineHeight: size,
      height: size,
      minWidth: size,
      borderRadius: borderRadius
    }), styles.container, restStyle]
  }, rest), children);
};

var _default = (0, _theming.withTheme)(Badge);

exports.default = _default;

var styles = _reactNative.StyleSheet.create({
  container: {
    alignSelf: 'flex-end',
    textAlign: 'center',
    textAlignVertical: 'center',
    paddingHorizontal: 4,
    overflow: 'hidden'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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bWVzIjpbImRlZmF1bHRTaXplIiwiQmFkZ2UiLCJjaGlsZHJlbiIsInNpemUiLCJzdHlsZSIsInRoZW1lIiwidmlzaWJsZSIsInJlc3QiLCJSZWFjdCIsInVzZVJlZiIsIkFuaW1hdGVkIiwiVmFsdWUiLCJvcGFjaXR5IiwiY3VycmVudCIsImlzRmlyc3RSZW5kZXJpbmciLCJzY2FsZSIsImFuaW1hdGlvbiIsInVzZUVmZmVjdCIsInRpbWluZyIsInRvVmFsdWUiLCJkdXJhdGlvbiIsInVzZU5hdGl2ZURyaXZlciIsInN0YXJ0IiwiU3R5bGVTaGVldCIsImZsYXR0ZW4iLCJiYWNrZ3JvdW5kQ29sb3IiLCJjb2xvcnMiLCJub3RpZmljYXRpb24iLCJyZXN0U3R5bGUiLCJ0ZXh0Q29sb3IiLCJ3aGl0ZSIsImJsYWNrIiwiYm9yZGVyUmFkaXVzIiwiX3JlYWN0TmF0aXZlIiwiVGV4dCIsIm51bWJlck9mTGluZXMiLCJjb2xvciIsImZvbnRTaXplIiwiZm9udHMiLCJyZWd1bGFyIiwibGluZUhlaWdodCIsImhlaWdodCIsIm1pbldpZHRoIiwic3R5bGVzIiwiY29udGFpbmVyIiwiY3JlYXRlIiwiYWxpZ25TZWxmIiwidGV4dEFsaWduIiwidGV4dEFsaWduVmVydGljYWwiLCJwYWRkaW5nSG9yaXpvbnRhbCIsIm92ZXJmbG93Il0sInNvdXJjZXMiOlsiQmFkZ2UudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEFuaW1hdGVkLCBTdHlsZVNoZWV0LCBTdHlsZVByb3AsIFRleHRTdHlsZSB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgeyB3aGl0ZSwgYmxhY2sgfSBmcm9tICcuLi9zdHlsZXMvY29sb3JzJztcbmltcG9ydCB7IHdpdGhUaGVtZSB9IGZyb20gJy4uL2NvcmUvdGhlbWluZyc7XG5pbXBvcnQgZ2V0Q29udHJhc3RpbmdDb2xvciBmcm9tICcuLi91dGlscy9nZXRDb250cmFzdGluZ0NvbG9yJztcblxuY29uc3QgZGVmYXVsdFNpemUgPSAyMDtcblxudHlwZSBQcm9wcyA9IFJlYWN0LkNvbXBvbmVudFByb3BzPHR5cGVvZiBBbmltYXRlZC5UZXh0PiAmIHtcbiAgLyoqXG4gICAqIFdoZXRoZXIgdGhlIGJhZGdlIGlzIHZpc2libGVcbiAgICovXG4gIHZpc2libGU/OiBib29sZWFuO1xuICAvKipcbiAgICogQ29udGVudCBvZiB0aGUgYEJhZGdlYC5cbiAgICovXG4gIGNoaWxkcmVuPzogc3RyaW5nIHwgbnVtYmVyO1xuICAvKipcbiAgICogU2l6ZSBvZiB0aGUgYEJhZGdlYC5cbiAgICovXG4gIHNpemU/OiBudW1iZXI7XG4gIHN0eWxlPzogU3R5bGVQcm9wPFRleHRTdHlsZT47XG4gIHJlZj86IFJlYWN0LlJlZk9iamVjdDx0eXBlb2YgQW5pbWF0ZWQuVGV4dD47XG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICovXG4gIHRoZW1lOiBSZWFjdE5hdGl2ZVBhcGVyLlRoZW1lO1xufTtcblxuLyoqXG4gKiBCYWRnZXMgYXJlIHNtYWxsIHN0YXR1cyBkZXNjcmlwdG9ycyBmb3IgVUkgZWxlbWVudHMuXG4gKiBBIGJhZGdlIGNvbnNpc3RzIG9mIGEgc21hbGwgY2lyY2xlLCB0eXBpY2FsbHkgY29udGFpbmluZyBhIG51bWJlciBvciBvdGhlciBzaG9ydCBzZXQgb2YgY2hhcmFjdGVycywgdGhhdCBhcHBlYXJzIGluIHByb3hpbWl0eSB0byBhbm90aGVyIG9iamVjdC5cbiAqXG4gKiA8ZGl2IGNsYXNzPVwic2NyZWVuc2hvdHNcIj5cbiAqICAgPGZpZ3VyZT5cbiAqICAgICA8aW1nIGNsYXNzPVwic21hbGxcIiBzcmM9XCJzY3JlZW5zaG90cy9iYWRnZS0xLnBuZ1wiIC8+XG4gKiAgICAgPGZpZ2NhcHRpb24+QmFkZ2Ugd2l0aCBjb250ZW50PC9maWdjYXB0aW9uPlxuICogICA8L2ZpZ3VyZT5cbiAqICAgPGZpZ3VyZT5cbiAqICAgICA8aW1nIGNsYXNzPVwic21hbGxcIiBzcmM9XCJzY3JlZW5zaG90cy9iYWRnZS0yLnBuZ1wiIC8+XG4gKiAgICAgPGZpZ2NhcHRpb24+QmFkZ2Ugd2l0aG91dCBjb250ZW50PC9maWdjYXB0aW9uPlxuICogICA8L2ZpZ3VyZT5cbiAqIDwvZGl2PlxuICpcbiAqICMjIFVzYWdlXG4gKiBgYGBqc1xuICogaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuICogaW1wb3J0IHsgQmFkZ2UgfSBmcm9tICdyZWFjdC1uYXRpdmUtcGFwZXInO1xuICpcbiAqIGNvbnN0IE15Q29tcG9uZW50ID0gKCkgPT4gKFxuICogICA8QmFkZ2U+MzwvQmFkZ2U+XG4gKiApO1xuICpcbiAqIGV4cG9ydCBkZWZhdWx0IE15Q29tcG9uZW50O1xuICogYGBgXG4gKi9cbmNvbnN0IEJhZGdlID0gKHtcbiAgY2hpbGRyZW4sXG4gIHNpemUgPSBkZWZhdWx0U2l6ZSxcbiAgc3R5bGUsXG4gIHRoZW1lLFxuICB2aXNpYmxlID0gdHJ1ZSxcbiAgLi4ucmVzdFxufTogUHJvcHMpID0+IHtcbiAgY29uc3QgeyBjdXJyZW50OiBvcGFjaXR5IH0gPSBSZWFjdC51c2VSZWY8QW5pbWF0ZWQuVmFsdWU+KFxuICAgIG5ldyBBbmltYXRlZC5WYWx1ZSh2aXNpYmxlID8gMSA6IDApXG4gICk7XG4gIGNvbnN0IGlzRmlyc3RSZW5kZXJpbmcgPSBSZWFjdC51c2VSZWY8Ym9vbGVhbj4odHJ1ZSk7XG5cbiAgY29uc3Qge1xuICAgIGFuaW1hdGlvbjogeyBzY2FsZSB9LFxuICB9ID0gdGhlbWU7XG5cbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBEbyBub3QgcnVuIGFuaW1hdGlvbiBvbiB2ZXJ5IGZpcnN0IHJlbmRlcmluZ1xuICAgIGlmIChpc0ZpcnN0UmVuZGVyaW5nLmN1cnJlbnQpIHtcbiAgICAgIGlzRmlyc3RSZW5kZXJpbmcuY3VycmVudCA9IGZhbHNlO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIEFuaW1hdGVkLnRpbWluZyhvcGFjaXR5LCB7XG4gICAgICB0b1ZhbHVlOiB2aXNpYmxlID8gMSA6IDAsXG4gICAgICBkdXJhdGlvbjogMTUwICogc2NhbGUsXG4gICAgICB1c2VOYXRpdmVEcml2ZXI6IHRydWUsXG4gICAgfSkuc3RhcnQoKTtcbiAgfSwgW3Zpc2libGUsIG9wYWNpdHksIHNjYWxlXSk7XG5cbiAgY29uc3Qge1xuICAgIGJhY2tncm91bmRDb2xvciA9IHRoZW1lLmNvbG9ycy5ub3RpZmljYXRpb24sXG4gICAgLi4ucmVzdFN0eWxlXG4gIH0gPSAoU3R5bGVTaGVldC5mbGF0dGVuKHN0eWxlKSB8fCB7fSkgYXMgVGV4dFN0eWxlO1xuXG4gIGNvbnN0IHRleHRDb2xvciA9IGdldENvbnRyYXN0aW5nQ29sb3IoYmFja2dyb3VuZENvbG9yLCB3aGl0ZSwgYmxhY2spO1xuXG4gIGNvbnN0IGJvcmRlclJhZGl1cyA9IHNpemUgLyAyO1xuXG4gIHJldHVybiAoXG4gICAgPEFuaW1hdGVkLlRleHRcbiAgICAgIG51bWJlck9mTGluZXM9ezF9XG4gICAgICBzdHlsZT17W1xuICAgICAgICB7XG4gICAgICAgICAgb3BhY2l0eSxcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3IsXG4gICAgICAgICAgY29sb3I6IHRleHRDb2xvcixcbiAgICAgICAgICBmb250U2l6ZTogc2l6ZSAqIDAuNSxcbiAgICAgICAgICAuLi50aGVtZS5mb250cy5yZWd1bGFyLFxuICAgICAgICAgIGxpbmVIZWlnaHQ6IHNpemUsXG4gICAgICAgICAgaGVpZ2h0OiBzaXplLFxuICAgICAgICAgIG1pbldpZHRoOiBzaXplLFxuICAgICAgICAgIGJvcmRlclJhZGl1cyxcbiAgICAgICAgfSxcbiAgICAgICAgc3R5bGVzLmNvbnRhaW5lcixcbiAgICAgICAgcmVzdFN0eWxlLFxuICAgICAgXX1cbiAgICAgIHsuLi5yZXN0fVxuICAgID5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L0FuaW1hdGVkLlRleHQ+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCB3aXRoVGhlbWUoQmFkZ2UpO1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIGNvbnRhaW5lcjoge1xuICAgIGFsaWduU2VsZjogJ2ZsZXgtZW5kJyxcbiAgICB0ZXh0QWxpZ246ICdjZW50ZXInLFxuICAgIHRleHRBbGlnblZlcnRpY2FsOiAnY2VudGVyJyxcbiAgICBwYWRkaW5nSG9yaXpvbnRhbDogNCxcbiAgICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gIH0sXG59KTtcbiJdfQ==