{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA,4BAAkCA,wBAAWC,GAAXD,CAAe,QAAfA,CAAlC;AAAA,mDAAQE,KAAR;AAAA,IAAQA,KAAR,uCAAgB,CAAhB;AAAA,mDAAmBC,MAAnB;AAAA,IAAmBA,MAAnB,uCAA4B,CAA5B;;AAKA,IAAMC,cAAc,GAClBC,sBAASC,EAATD,KAAgB,KAAhBA,IAAyBE,oDAAwB,IAAjDF,GACI;AACEG,OAAK,EAAE;AAAEC,KAAC,EAAE,CAAL;AAAQC,KAAC,EAAE,CAAX;AAAcR,SAAd,EAAcA,KAAd;AAAqBC;AAArB,GADT;AAEEQ,QAAM,EAAE;AAAEC,OAAG,EAAE,CAAP;AAAUC,QAAI,EAAE,CAAhB;AAAmBC,SAAK,EAAE,CAA1B;AAA6BC,UAAM,EAAE;AAArC;AAFV,CADJV,GAKIE,gDANN;;AAQe,SAASS,sBAAT,OAA4D;AAAA,MAA1BC,QAA0B,QAA1BA,QAA0B;AAAA,MAAhBC,KAAgB,QAAhBA,KAAgB;AACzE,SACEC,oBAACC,kDAAsBC,QAAvB,QACIV,gBAAD,EAAY;AACX,QAAIA,MAAJ,EAAY;AAIV,aAAOQ,oBAACG,iBAAD;AAAMJ,aAAK,EAAE,CAACK,MAAM,CAACC,SAAR,EAAmBN,KAAnB;AAAb,SAAyCD,QAAzC,CAAP;AACD;;AAED,WACEE,oBAACC,4CAAD;AAAkBhB,oBAAc,EAAEA,cAAlC;AAAkDc,WAAK,EAAEA;AAAzD,OACGD,QADH,CADF;AATJ,IADF;AAkBD;;AAEDD,sBAAsB,CAACZ,cAAvBY,GAAwCZ,cAAxCY;;AAEA,IAAMO,MAAM,GAAGE,wBAAWC,MAAXD,CAAkB;AAC/BD,WAAS,EAAE;AACTG,QAAI,EAAE;AADG;AADoB,CAAlBF,CAAf","names":["Dimensions","get","width","height","initialMetrics","Platform","OS","initialWindowMetrics","frame","x","y","insets","top","left","right","bottom","SafeAreaProviderCompat","children","style","React","_reactNativeSafeAreaContext","Consumer","_reactNative","styles","container","StyleSheet","create","flex"],"sources":["SafeAreaProviderCompat.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Dimensions,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport {\n  initialWindowMetrics,\n  SafeAreaInsetsContext,\n  SafeAreaProvider,\n} from 'react-native-safe-area-context';\n\ntype Props = {\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst { width = 0, height = 0 } = Dimensions.get('window');\n\n// To support SSR on web, we need to have empty insets for initial values\n// Otherwise there can be mismatch between SSR and client output\n// We also need to specify empty values to support tests environments\nconst initialMetrics =\n  Platform.OS === 'web' || initialWindowMetrics == null\n    ? {\n        frame: { x: 0, y: 0, width, height },\n        insets: { top: 0, left: 0, right: 0, bottom: 0 },\n      }\n    : initialWindowMetrics;\n\nexport default function SafeAreaProviderCompat({ children, style }: Props) {\n  return (\n    <SafeAreaInsetsContext.Consumer>\n      {(insets) => {\n        if (insets) {\n          // If we already have insets, don't wrap the stack in another safe area provider\n          // This avoids an issue with updates at the cost of potentially incorrect values\n          // https://github.com/react-navigation/react-navigation/issues/174\n          return <View style={[styles.container, style]}>{children}</View>;\n        }\n\n        return (\n          <SafeAreaProvider initialMetrics={initialMetrics} style={style}>\n            {children}\n          </SafeAreaProvider>\n        );\n      }}\n    </SafeAreaInsetsContext.Consumer>\n  );\n}\n\nSafeAreaProviderCompat.initialMetrics = initialMetrics;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]}