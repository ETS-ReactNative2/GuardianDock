4450cdc05d4645d58bd87bf1bae8f921
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = overlay;

var _color = _interopRequireDefault(require("color"));

var _reactNative = require("react-native");

var _DarkTheme = _interopRequireDefault(require("./DarkTheme"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var isAnimatedValue = function isAnimatedValue(it) {
  return it instanceof _reactNative.Animated.Value;
};

function overlay(elevation) {
  var surfaceColor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _DarkTheme.default.colors.surface;

  if (isAnimatedValue(elevation)) {
    var inputRange = [0, 1, 2, 3, 8, 24];
    return elevation.interpolate({
      inputRange: inputRange,
      outputRange: inputRange.map(function (elevation) {
        return calculateColor(surfaceColor, elevation);
      })
    });
  }

  return calculateColor(surfaceColor, elevation);
}

function calculateColor(surfaceColor) {
  var elevation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
  var overlayTransparency;

  if (elevation >= 1 && elevation <= 24) {
    overlayTransparency = elevationOverlayTransparency[elevation];
  } else if (elevation > 24) {
    overlayTransparency = elevationOverlayTransparency[24];
  } else {
    overlayTransparency = elevationOverlayTransparency[1];
  }

  return (0, _color.default)(surfaceColor).mix((0, _color.default)('white'), overlayTransparency * 0.01).hex();
}

var elevationOverlayTransparency = {
  1: 5,
  2: 7,
  3: 8,
  4: 9,
  5: 10,
  6: 11,
  7: 11.5,
  8: 12,
  9: 12.5,
  10: 13,
  11: 13.5,
  12: 14,
  13: 14.25,
  14: 14.5,
  15: 14.75,
  16: 15,
  17: 15.12,
  18: 15.24,
  19: 15.36,
  20: 15.48,
  21: 15.6,
  22: 15.72,
  23: 15.84,
  24: 16
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7Ozs7OztBQUVBLElBQU1BLGVBQWUsR0FDbkJDLFNBRElELGVBQ0pDLEdBRHNCO0FBQUEsU0FFR0EsRUFBRSxZQUFZQyxzQkFBU0MsS0FGMUI7QUFBQSxDQUF4Qjs7QUFJZSxTQUFTQyxPQUFULENBQ2JDLFNBRGEsRUFHK0M7QUFBQSxNQUQ1REMsWUFDNEQsdUVBRHJDQyxtQkFBVUMsTUFBVkQsQ0FBaUJFLE9BQ29COztBQUM1RCxNQUFJVCxlQUFlLENBQUNLLFNBQUQsQ0FBbkIsRUFBZ0M7QUFDOUIsUUFBTUssVUFBVSxHQUFHLENBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxDQUFQLEVBQVUsQ0FBVixFQUFhLENBQWIsRUFBZ0IsRUFBaEIsQ0FBbkI7QUFHQSxXQUFPTCxTQUFTLENBQUNNLFdBQVZOLENBQXNCO0FBQzNCSyxnQkFEMkIsRUFDM0JBLFVBRDJCO0FBRTNCRSxpQkFBVyxFQUFFRixVQUFVLENBQUNHLEdBQVhILENBQWdCTCxtQkFBRCxFQUFlO0FBQ3pDLGVBQU9TLGNBQWMsQ0FBQ1IsWUFBRCxFQUFlRCxTQUFmLENBQXJCO0FBRFc7QUFGYyxLQUF0QkEsQ0FBUDtBQUwwRDs7QUFjNUQsU0FBT1MsY0FBYyxDQUFDUixZQUFELEVBQWVELFNBQWYsQ0FBckI7QUFDRDs7QUFFRCxTQUFTUyxjQUFULENBQXdCUixZQUF4QixFQUFxRTtBQUFBLE1BQXZCRCxTQUF1Qix1RUFBSCxDQUFHO0FBQ25FLE1BQUlVLG1CQUFKOztBQUNBLE1BQUlWLFNBQVMsSUFBSSxDQUFiQSxJQUFrQkEsU0FBUyxJQUFJLEVBQW5DLEVBQXVDO0FBQ3JDVSx1QkFBbUIsR0FBR0MsNEJBQTRCLENBQUNYLFNBQUQsQ0FBbERVO0FBREYsU0FFTyxJQUFJVixTQUFTLEdBQUcsRUFBaEIsRUFBb0I7QUFDekJVLHVCQUFtQixHQUFHQyw0QkFBNEIsQ0FBQyxFQUFELENBQWxERDtBQURLLFNBRUE7QUFDTEEsdUJBQW1CLEdBQUdDLDRCQUE0QixDQUFDLENBQUQsQ0FBbEREO0FBQ0Q7O0FBQ0QsU0FBTyxvQkFBTVQsWUFBTixFQUNKVyxHQURJLENBQ0Esb0JBQU0sT0FBTixDQURBLEVBQ2dCRixtQkFBbUIsR0FBRyxJQUR0QyxFQUVKRyxHQUZJLEVBQVA7QUFHRDs7QUFFRCxJQUFNRiw0QkFBb0QsR0FBRztBQUMzRCxLQUFHLENBRHdEO0FBRTNELEtBQUcsQ0FGd0Q7QUFHM0QsS0FBRyxDQUh3RDtBQUkzRCxLQUFHLENBSndEO0FBSzNELEtBQUcsRUFMd0Q7QUFNM0QsS0FBRyxFQU53RDtBQU8zRCxLQUFHLElBUHdEO0FBUTNELEtBQUcsRUFSd0Q7QUFTM0QsS0FBRyxJQVR3RDtBQVUzRCxNQUFJLEVBVnVEO0FBVzNELE1BQUksSUFYdUQ7QUFZM0QsTUFBSSxFQVp1RDtBQWEzRCxNQUFJLEtBYnVEO0FBYzNELE1BQUksSUFkdUQ7QUFlM0QsTUFBSSxLQWZ1RDtBQWdCM0QsTUFBSSxFQWhCdUQ7QUFpQjNELE1BQUksS0FqQnVEO0FBa0IzRCxNQUFJLEtBbEJ1RDtBQW1CM0QsTUFBSSxLQW5CdUQ7QUFvQjNELE1BQUksS0FwQnVEO0FBcUIzRCxNQUFJLElBckJ1RDtBQXNCM0QsTUFBSSxLQXRCdUQ7QUF1QjNELE1BQUksS0F2QnVEO0FBd0IzRCxNQUFJO0FBeEJ1RCxDQUE3RCIsIm5hbWVzIjpbImlzQW5pbWF0ZWRWYWx1ZSIsIml0IiwiQW5pbWF0ZWQiLCJWYWx1ZSIsIm92ZXJsYXkiLCJlbGV2YXRpb24iLCJzdXJmYWNlQ29sb3IiLCJEYXJrVGhlbWUiLCJjb2xvcnMiLCJzdXJmYWNlIiwiaW5wdXRSYW5nZSIsImludGVycG9sYXRlIiwib3V0cHV0UmFuZ2UiLCJtYXAiLCJjYWxjdWxhdGVDb2xvciIsIm92ZXJsYXlUcmFuc3BhcmVuY3kiLCJlbGV2YXRpb25PdmVybGF5VHJhbnNwYXJlbmN5IiwibWl4IiwiaGV4Il0sInNvdXJjZXMiOlsib3ZlcmxheS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNvbG9yIGZyb20gJ2NvbG9yJztcbmltcG9ydCB7IEFuaW1hdGVkIH0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCBEYXJrVGhlbWUgZnJvbSAnLi9EYXJrVGhlbWUnO1xuXG5jb25zdCBpc0FuaW1hdGVkVmFsdWUgPSAoXG4gIGl0OiBudW1iZXIgfCBBbmltYXRlZC5BbmltYXRlZEludGVycG9sYXRpb25cbik6IGl0IGlzIEFuaW1hdGVkLlZhbHVlID0+IGl0IGluc3RhbmNlb2YgQW5pbWF0ZWQuVmFsdWU7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG92ZXJsYXk8VCBleHRlbmRzIEFuaW1hdGVkLlZhbHVlIHwgbnVtYmVyPihcbiAgZWxldmF0aW9uOiBULFxuICBzdXJmYWNlQ29sb3I6IHN0cmluZyA9IERhcmtUaGVtZS5jb2xvcnMuc3VyZmFjZVxuKTogVCBleHRlbmRzIG51bWJlciA/IHN0cmluZyA6IEFuaW1hdGVkLkFuaW1hdGVkSW50ZXJwb2xhdGlvbiB7XG4gIGlmIChpc0FuaW1hdGVkVmFsdWUoZWxldmF0aW9uKSkge1xuICAgIGNvbnN0IGlucHV0UmFuZ2UgPSBbMCwgMSwgMiwgMywgOCwgMjRdO1xuXG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvcjogVFMgZG9lc24ndCBzZWVtIHRvIHJlZmluZSB0aGUgdHlwZSBjb3JyZWN0bHlcbiAgICByZXR1cm4gZWxldmF0aW9uLmludGVycG9sYXRlKHtcbiAgICAgIGlucHV0UmFuZ2UsXG4gICAgICBvdXRwdXRSYW5nZTogaW5wdXRSYW5nZS5tYXAoKGVsZXZhdGlvbikgPT4ge1xuICAgICAgICByZXR1cm4gY2FsY3VsYXRlQ29sb3Ioc3VyZmFjZUNvbG9yLCBlbGV2YXRpb24pO1xuICAgICAgfSksXG4gICAgfSk7XG4gIH1cblxuICAvLyBAdHMtZXhwZWN0LWVycm9yOiBUUyBkb2Vzbid0IHNlZW0gdG8gcmVmaW5lIHRoZSB0eXBlIGNvcnJlY3RseVxuICByZXR1cm4gY2FsY3VsYXRlQ29sb3Ioc3VyZmFjZUNvbG9yLCBlbGV2YXRpb24pO1xufVxuXG5mdW5jdGlvbiBjYWxjdWxhdGVDb2xvcihzdXJmYWNlQ29sb3I6IHN0cmluZywgZWxldmF0aW9uOiBudW1iZXIgPSAxKSB7XG4gIGxldCBvdmVybGF5VHJhbnNwYXJlbmN5OiBudW1iZXI7XG4gIGlmIChlbGV2YXRpb24gPj0gMSAmJiBlbGV2YXRpb24gPD0gMjQpIHtcbiAgICBvdmVybGF5VHJhbnNwYXJlbmN5ID0gZWxldmF0aW9uT3ZlcmxheVRyYW5zcGFyZW5jeVtlbGV2YXRpb25dO1xuICB9IGVsc2UgaWYgKGVsZXZhdGlvbiA+IDI0KSB7XG4gICAgb3ZlcmxheVRyYW5zcGFyZW5jeSA9IGVsZXZhdGlvbk92ZXJsYXlUcmFuc3BhcmVuY3lbMjRdO1xuICB9IGVsc2Uge1xuICAgIG92ZXJsYXlUcmFuc3BhcmVuY3kgPSBlbGV2YXRpb25PdmVybGF5VHJhbnNwYXJlbmN5WzFdO1xuICB9XG4gIHJldHVybiBjb2xvcihzdXJmYWNlQ29sb3IpXG4gICAgLm1peChjb2xvcignd2hpdGUnKSwgb3ZlcmxheVRyYW5zcGFyZW5jeSAqIDAuMDEpXG4gICAgLmhleCgpO1xufVxuXG5jb25zdCBlbGV2YXRpb25PdmVybGF5VHJhbnNwYXJlbmN5OiBSZWNvcmQ8c3RyaW5nLCBudW1iZXI+ID0ge1xuICAxOiA1LFxuICAyOiA3LFxuICAzOiA4LFxuICA0OiA5LFxuICA1OiAxMCxcbiAgNjogMTEsXG4gIDc6IDExLjUsXG4gIDg6IDEyLFxuICA5OiAxMi41LFxuICAxMDogMTMsXG4gIDExOiAxMy41LFxuICAxMjogMTQsXG4gIDEzOiAxNC4yNSxcbiAgMTQ6IDE0LjUsXG4gIDE1OiAxNC43NSxcbiAgMTY6IDE1LFxuICAxNzogMTUuMTIsXG4gIDE4OiAxNS4yNCxcbiAgMTk6IDE1LjM2LFxuICAyMDogMTUuNDgsXG4gIDIxOiAxNS42LFxuICAyMjogMTUuNzIsXG4gIDIzOiAxNS44NCxcbiAgMjQ6IDE2LFxufTtcbiJdfQ==