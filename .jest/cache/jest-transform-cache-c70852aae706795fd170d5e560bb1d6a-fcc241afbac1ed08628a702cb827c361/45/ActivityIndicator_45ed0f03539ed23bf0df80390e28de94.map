{"version":3,"mappings":"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","names":["DURATION","ActivityIndicator","animating","indicatorColor","color","hidesWhenStopped","size","indicatorSize","style","theme","rest","React","useRef","Animated","Value","timer","current","fade","rotation","undefined","scale","animation","startRotation","useCallback","timing","duration","toValue","isInteraction","useNativeDriver","start","setValue","loop","stopRotation","stop","useEffect","easing","Easing","linear","Platform","OS","colors","primary","frames","bezier","containerStyle","width","height","overflow","_reactNative","styles","container","accessible","accessibilityRole","accessibilityState","busy","View","opacity","collapsable","map","index","inputRange","Array","from","_","frameIndex","outputRange","progress","direction","layerStyle","transform","rotate","interpolate","viewportStyle","translateY","offsetStyle","top","lineStyle","borderColor","borderWidth","borderRadius","key","layer","StyleSheet","create","justifyContent","alignItems","absoluteFillObject"],"sources":["ActivityIndicator.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport { withTheme } from '../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Whether to show the indicator or hide it.\n   */\n  animating?: boolean;\n  /**\n   * The color of the spinner.\n   */\n  color?: string;\n  /**\n   * Size of the indicator.\n   */\n  size?: 'small' | 'large' | number;\n  /**\n   * Whether the indicator should hide when not animating.\n   */\n  hidesWhenStopped?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst DURATION = 2400;\n\n/**\n * Activity indicator is used to present progress of some activity in the app.\n * It can be used as a drop-in for the ActivityIndicator shipped with React Native.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/activity-indicator.gif\" style=\"width: 100px;\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ActivityIndicator, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ActivityIndicator animating={true} color={Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ActivityIndicator = ({\n  animating = true,\n  color: indicatorColor,\n  hidesWhenStopped = true,\n  size: indicatorSize = 'small',\n  style,\n  theme,\n  ...rest\n}: Props) => {\n  const { current: timer } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { current: fade } = React.useRef<Animated.Value>(\n    new Animated.Value(!animating && hidesWhenStopped ? 0 : 1)\n  );\n\n  const rotation = React.useRef<Animated.CompositeAnimation | undefined>(\n    undefined\n  );\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  const startRotation = React.useCallback(() => {\n    // Show indicator\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      isInteraction: false,\n      useNativeDriver: true,\n    }).start();\n\n    // Circular animation in loop\n    if (rotation.current) {\n      timer.setValue(0);\n      // $FlowFixMe\n      Animated.loop(rotation.current).start();\n    }\n  }, [scale, fade, timer]);\n\n  const stopRotation = () => {\n    if (rotation.current) {\n      rotation.current.stop();\n    }\n  };\n\n  React.useEffect(() => {\n    if (rotation.current === undefined) {\n      // Circular animation in loop\n      rotation.current = Animated.timing(timer, {\n        duration: DURATION,\n        easing: Easing.linear,\n        // Animated.loop does not work if useNativeDriver is true on web\n        useNativeDriver: Platform.OS !== 'web',\n        toValue: 1,\n        isInteraction: false,\n      });\n    }\n\n    if (animating) {\n      startRotation();\n    } else if (hidesWhenStopped) {\n      // Hide indicator first and then stop rotation\n      Animated.timing(fade, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: true,\n        isInteraction: false,\n      }).start(stopRotation);\n    } else {\n      stopRotation();\n    }\n  }, [animating, fade, hidesWhenStopped, startRotation, scale, timer]);\n\n  const color = indicatorColor || theme.colors.primary;\n  const size =\n    typeof indicatorSize === 'string'\n      ? indicatorSize === 'small'\n        ? 24\n        : 48\n      : indicatorSize\n      ? indicatorSize\n      : 24;\n\n  const frames = (60 * DURATION) / 1000;\n  const easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n  const containerStyle = {\n    width: size,\n    height: size / 2,\n    overflow: 'hidden' as const,\n  };\n\n  return (\n    <View\n      style={[styles.container, style]}\n      {...rest}\n      accessible\n      accessibilityRole=\"progressbar\"\n      accessibilityState={{ busy: animating }}\n    >\n      <Animated.View\n        style={[{ width: size, height: size, opacity: fade }]}\n        collapsable={false}\n      >\n        {[0, 1].map((index) => {\n          // Thanks to https://github.com/n4kz/react-native-indicators for the great work\n          const inputRange = Array.from(\n            new Array(frames),\n            (_, frameIndex) => frameIndex / (frames - 1)\n          );\n          const outputRange = Array.from(new Array(frames), (_, frameIndex) => {\n            let progress = (2 * frameIndex) / (frames - 1);\n            const rotation = index ? +(360 - 15) : -(180 - 15);\n\n            if (progress > 1.0) {\n              progress = 2.0 - progress;\n            }\n\n            const direction = index ? -1 : +1;\n\n            return `${direction * (180 - 30) * easing(progress) + rotation}deg`;\n          });\n\n          const layerStyle = {\n            width: size,\n            height: size,\n            transform: [\n              {\n                rotate: timer.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [`${0 + 30 + 15}deg`, `${2 * 360 + 30 + 15}deg`],\n                }),\n              },\n            ],\n          };\n\n          const viewportStyle = {\n            width: size,\n            height: size,\n            transform: [\n              {\n                translateY: index ? -size / 2 : 0,\n              },\n              {\n                rotate: timer.interpolate({ inputRange, outputRange }),\n              },\n            ],\n          };\n\n          const offsetStyle = index ? { top: size / 2 } : null;\n\n          const lineStyle = {\n            width: size,\n            height: size,\n            borderColor: color,\n            borderWidth: size / 10,\n            borderRadius: size / 2,\n          };\n\n          return (\n            <Animated.View key={index} style={[styles.layer]}>\n              <Animated.View style={layerStyle}>\n                <Animated.View\n                  style={[containerStyle, offsetStyle]}\n                  collapsable={false}\n                >\n                  <Animated.View style={viewportStyle}>\n                    <Animated.View style={containerStyle} collapsable={false}>\n                      <Animated.View style={lineStyle} />\n                    </Animated.View>\n                  </Animated.View>\n                </Animated.View>\n              </Animated.View>\n            </Animated.View>\n          );\n        })}\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  layer: {\n    ...StyleSheet.absoluteFillObject,\n\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withTheme(ActivityIndicator);\n"]}