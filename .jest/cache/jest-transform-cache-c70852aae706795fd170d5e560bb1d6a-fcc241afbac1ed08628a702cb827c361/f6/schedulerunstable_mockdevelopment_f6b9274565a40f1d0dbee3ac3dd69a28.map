{"version":3,"sources":["scheduler-unstable_mock.development.js"],"names":["process","env","NODE_ENV","enableSchedulerDebugging","enableProfiling","currentTime","scheduledCallback","scheduledTimeout","timeoutTime","yieldedValues","expectedNumberOfYields","didStop","isFlushing","needsPaint","shouldYieldForPaint","requestHostCallback","callback","requestHostTimeout","ms","cancelHostTimeout","shouldYieldToHost","length","getCurrentTime","forceFrameRate","unstable_flushNumberOfYields","count","Error","cb","hasMoreWork","unstable_flushUntilNextPaint","unstable_flushExpired","unstable_flushAllWithoutAsserting","unstable_clearYields","values","unstable_flushAll","unstable_yieldValue","value","console","log","name","push","unstable_advanceTime","requestPaint","heap","node","index","siftUp","peek","first","undefined","pop","last","siftDown","i","parentIndex","parent","compare","leftIndex","left","rightIndex","right","a","b","diff","sortIndex","id","ImmediatePriority","UserBlockingPriority","NormalPriority","LowPriority","IdlePriority","markTaskErrored","task","maxSigned31BitInt","IMMEDIATE_PRIORITY_TIMEOUT","USER_BLOCKING_PRIORITY_TIMEOUT","NORMAL_PRIORITY_TIMEOUT","LOW_PRIORITY_TIMEOUT","IDLE_PRIORITY_TIMEOUT","taskQueue","timerQueue","taskIdCounter","currentTask","currentPriorityLevel","isPerformingWork","isHostCallbackScheduled","isHostTimeoutScheduled","advanceTimers","timer","startTime","expirationTime","handleTimeout","flushWork","firstTimer","hasTimeRemaining","initialTime","previousPriorityLevel","workLoop","error","isQueued","priorityLevel","didUserCallbackTimeout","continuationCallback","unstable_runWithPriority","eventHandler","unstable_next","unstable_wrapCallback","parentPriorityLevel","apply","arguments","unstable_scheduleCallback","options","delay","timeout","newTask","unstable_pauseExecution","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_cancelCallback","unstable_getCurrentPriorityLevel","unstable_requestPaint","unstable_Profiling","exports","unstable_IdlePriority","unstable_ImmediatePriority","unstable_LowPriority","unstable_NormalPriority","unstable_UserBlockingPriority","unstable_forceFrameRate","unstable_now","unstable_shouldYield"],"mappings":"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","sourcesContent":["/** @license React v0.20.2\n * scheduler-unstable_mock.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar enableSchedulerDebugging = false;\nvar enableProfiling = false;\n\nvar currentTime = 0;\nvar scheduledCallback = null;\nvar scheduledTimeout = null;\nvar timeoutTime = -1;\nvar yieldedValues = null;\nvar expectedNumberOfYields = -1;\nvar didStop = false;\nvar isFlushing = false;\nvar needsPaint = false;\nvar shouldYieldForPaint = false;\nfunction requestHostCallback(callback) {\n  scheduledCallback = callback;\n}\nfunction requestHostTimeout(callback, ms) {\n  scheduledTimeout = callback;\n  timeoutTime = currentTime + ms;\n}\nfunction cancelHostTimeout() {\n  scheduledTimeout = null;\n  timeoutTime = -1;\n}\nfunction shouldYieldToHost() {\n  if (expectedNumberOfYields !== -1 && yieldedValues !== null && yieldedValues.length >= expectedNumberOfYields || shouldYieldForPaint && needsPaint) {\n    // We yielded at least as many values as expected. Stop flushing.\n    didStop = true;\n    return true;\n  }\n\n  return false;\n}\nfunction getCurrentTime() {\n  return currentTime;\n}\nfunction forceFrameRate() {// No-op\n}\n\nfunction unstable_flushNumberOfYields(count) {\n  if (isFlushing) {\n    throw new Error('Already flushing work.');\n  }\n\n  if (scheduledCallback !== null) {\n    var cb = scheduledCallback;\n    expectedNumberOfYields = count;\n    isFlushing = true;\n\n    try {\n      var hasMoreWork = true;\n\n      do {\n        hasMoreWork = cb(true, currentTime);\n      } while (hasMoreWork && !didStop);\n\n      if (!hasMoreWork) {\n        scheduledCallback = null;\n      }\n    } finally {\n      expectedNumberOfYields = -1;\n      didStop = false;\n      isFlushing = false;\n    }\n  }\n}\nfunction unstable_flushUntilNextPaint() {\n  if (isFlushing) {\n    throw new Error('Already flushing work.');\n  }\n\n  if (scheduledCallback !== null) {\n    var cb = scheduledCallback;\n    shouldYieldForPaint = true;\n    needsPaint = false;\n    isFlushing = true;\n\n    try {\n      var hasMoreWork = true;\n\n      do {\n        hasMoreWork = cb(true, currentTime);\n      } while (hasMoreWork && !didStop);\n\n      if (!hasMoreWork) {\n        scheduledCallback = null;\n      }\n    } finally {\n      shouldYieldForPaint = false;\n      didStop = false;\n      isFlushing = false;\n    }\n  }\n}\nfunction unstable_flushExpired() {\n  if (isFlushing) {\n    throw new Error('Already flushing work.');\n  }\n\n  if (scheduledCallback !== null) {\n    isFlushing = true;\n\n    try {\n      var hasMoreWork = scheduledCallback(false, currentTime);\n\n      if (!hasMoreWork) {\n        scheduledCallback = null;\n      }\n    } finally {\n      isFlushing = false;\n    }\n  }\n}\nfunction unstable_flushAllWithoutAsserting() {\n  // Returns false if no work was flushed.\n  if (isFlushing) {\n    throw new Error('Already flushing work.');\n  }\n\n  if (scheduledCallback !== null) {\n    var cb = scheduledCallback;\n    isFlushing = true;\n\n    try {\n      var hasMoreWork = true;\n\n      do {\n        hasMoreWork = cb(true, currentTime);\n      } while (hasMoreWork);\n\n      if (!hasMoreWork) {\n        scheduledCallback = null;\n      }\n\n      return true;\n    } finally {\n      isFlushing = false;\n    }\n  } else {\n    return false;\n  }\n}\nfunction unstable_clearYields() {\n  if (yieldedValues === null) {\n    return [];\n  }\n\n  var values = yieldedValues;\n  yieldedValues = null;\n  return values;\n}\nfunction unstable_flushAll() {\n  if (yieldedValues !== null) {\n    throw new Error('Log is not empty. Assert on the log of yielded values before ' + 'flushing additional work.');\n  }\n\n  unstable_flushAllWithoutAsserting();\n\n  if (yieldedValues !== null) {\n    throw new Error('While flushing work, something yielded a value. Use an ' + 'assertion helper to assert on the log of yielded values, e.g. ' + 'expect(Scheduler).toFlushAndYield([...])');\n  }\n}\nfunction unstable_yieldValue(value) {\n  // eslint-disable-next-line react-internal/no-production-logging\n  if (console.log.name === 'disabledLog') {\n    // If console.log has been patched, we assume we're in render\n    // replaying and we ignore any values yielding in the second pass.\n    return;\n  }\n\n  if (yieldedValues === null) {\n    yieldedValues = [value];\n  } else {\n    yieldedValues.push(value);\n  }\n}\nfunction unstable_advanceTime(ms) {\n  // eslint-disable-next-line react-internal/no-production-logging\n  if (console.log.name === 'disabledLog') {\n    // If console.log has been patched, we assume we're in render\n    // replaying and we ignore any time advancing in the second pass.\n    return;\n  }\n\n  currentTime += ms;\n\n  if (scheduledTimeout !== null && timeoutTime <= currentTime) {\n    scheduledTimeout(currentTime);\n    timeoutTime = -1;\n    scheduledTimeout = null;\n  }\n}\nfunction requestPaint() {\n  needsPaint = true;\n}\n\nfunction push(heap, node) {\n  var index = heap.length;\n  heap.push(node);\n  siftUp(heap, node, index);\n}\nfunction peek(heap) {\n  var first = heap[0];\n  return first === undefined ? null : first;\n}\nfunction pop(heap) {\n  var first = heap[0];\n\n  if (first !== undefined) {\n    var last = heap.pop();\n\n    if (last !== first) {\n      heap[0] = last;\n      siftDown(heap, last, 0);\n    }\n\n    return first;\n  } else {\n    return null;\n  }\n}\n\nfunction siftUp(heap, node, i) {\n  var index = i;\n\n  while (true) {\n    var parentIndex = index - 1 >>> 1;\n    var parent = heap[parentIndex];\n\n    if (parent !== undefined && compare(parent, node) > 0) {\n      // The parent is larger. Swap positions.\n      heap[parentIndex] = node;\n      heap[index] = parent;\n      index = parentIndex;\n    } else {\n      // The parent is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction siftDown(heap, node, i) {\n  var index = i;\n  var length = heap.length;\n\n  while (index < length) {\n    var leftIndex = (index + 1) * 2 - 1;\n    var left = heap[leftIndex];\n    var rightIndex = leftIndex + 1;\n    var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.\n\n    if (left !== undefined && compare(left, node) < 0) {\n      if (right !== undefined && compare(right, left) < 0) {\n        heap[index] = right;\n        heap[rightIndex] = node;\n        index = rightIndex;\n      } else {\n        heap[index] = left;\n        heap[leftIndex] = node;\n        index = leftIndex;\n      }\n    } else if (right !== undefined && compare(right, node) < 0) {\n      heap[index] = right;\n      heap[rightIndex] = node;\n      index = rightIndex;\n    } else {\n      // Neither child is smaller. Exit.\n      return;\n    }\n  }\n}\n\nfunction compare(a, b) {\n  // Compare sort index first, then task id.\n  var diff = a.sortIndex - b.sortIndex;\n  return diff !== 0 ? diff : a.id - b.id;\n}\n\n// TODO: Use symbols?\nvar ImmediatePriority = 1;\nvar UserBlockingPriority = 2;\nvar NormalPriority = 3;\nvar LowPriority = 4;\nvar IdlePriority = 5;\n\nfunction markTaskErrored(task, ms) {\n}\n\n/* eslint-disable no-var */\n// Math.pow(2, 30) - 1\n// 0b111111111111111111111111111111\n\nvar maxSigned31BitInt = 1073741823; // Times out immediately\n\nvar IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out\n\nvar USER_BLOCKING_PRIORITY_TIMEOUT = 250;\nvar NORMAL_PRIORITY_TIMEOUT = 5000;\nvar LOW_PRIORITY_TIMEOUT = 10000; // Never times out\n\nvar IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt; // Tasks are stored on a min heap\n\nvar taskQueue = [];\nvar timerQueue = []; // Incrementing id counter. Used to maintain insertion order.\n\nvar taskIdCounter = 1; // Pausing the scheduler is useful for debugging.\nvar currentTask = null;\nvar currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrancy.\n\nvar isPerformingWork = false;\nvar isHostCallbackScheduled = false;\nvar isHostTimeoutScheduled = false;\n\nfunction advanceTimers(currentTime) {\n  // Check for tasks that are no longer delayed and add them to the queue.\n  var timer = peek(timerQueue);\n\n  while (timer !== null) {\n    if (timer.callback === null) {\n      // Timer was cancelled.\n      pop(timerQueue);\n    } else if (timer.startTime <= currentTime) {\n      // Timer fired. Transfer to the task queue.\n      pop(timerQueue);\n      timer.sortIndex = timer.expirationTime;\n      push(taskQueue, timer);\n    } else {\n      // Remaining timers are pending.\n      return;\n    }\n\n    timer = peek(timerQueue);\n  }\n}\n\nfunction handleTimeout(currentTime) {\n  isHostTimeoutScheduled = false;\n  advanceTimers(currentTime);\n\n  if (!isHostCallbackScheduled) {\n    if (peek(taskQueue) !== null) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    } else {\n      var firstTimer = peek(timerQueue);\n\n      if (firstTimer !== null) {\n        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n      }\n    }\n  }\n}\n\nfunction flushWork(hasTimeRemaining, initialTime) {\n\n\n  isHostCallbackScheduled = false;\n\n  if (isHostTimeoutScheduled) {\n    // We scheduled a timeout but it's no longer needed. Cancel it.\n    isHostTimeoutScheduled = false;\n    cancelHostTimeout();\n  }\n\n  isPerformingWork = true;\n  var previousPriorityLevel = currentPriorityLevel;\n\n  try {\n    if (enableProfiling) {\n      try {\n        return workLoop(hasTimeRemaining, initialTime);\n      } catch (error) {\n        if (currentTask !== null) {\n          var currentTime = getCurrentTime();\n          markTaskErrored(currentTask, currentTime);\n          currentTask.isQueued = false;\n        }\n\n        throw error;\n      }\n    } else {\n      // No catch in prod code path.\n      return workLoop(hasTimeRemaining, initialTime);\n    }\n  } finally {\n    currentTask = null;\n    currentPriorityLevel = previousPriorityLevel;\n    isPerformingWork = false;\n  }\n}\n\nfunction workLoop(hasTimeRemaining, initialTime) {\n  var currentTime = initialTime;\n  advanceTimers(currentTime);\n  currentTask = peek(taskQueue);\n\n  while (currentTask !== null && !(enableSchedulerDebugging )) {\n    if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {\n      // This currentTask hasn't expired, and we've reached the deadline.\n      break;\n    }\n\n    var callback = currentTask.callback;\n\n    if (typeof callback === 'function') {\n      currentTask.callback = null;\n      currentPriorityLevel = currentTask.priorityLevel;\n      var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;\n\n      var continuationCallback = callback(didUserCallbackTimeout);\n      currentTime = getCurrentTime();\n\n      if (typeof continuationCallback === 'function') {\n        currentTask.callback = continuationCallback;\n      } else {\n\n        if (currentTask === peek(taskQueue)) {\n          pop(taskQueue);\n        }\n      }\n\n      advanceTimers(currentTime);\n    } else {\n      pop(taskQueue);\n    }\n\n    currentTask = peek(taskQueue);\n  } // Return whether there's additional work\n\n\n  if (currentTask !== null) {\n    return true;\n  } else {\n    var firstTimer = peek(timerQueue);\n\n    if (firstTimer !== null) {\n      requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);\n    }\n\n    return false;\n  }\n}\n\nfunction unstable_runWithPriority(priorityLevel, eventHandler) {\n  switch (priorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n    case LowPriority:\n    case IdlePriority:\n      break;\n\n    default:\n      priorityLevel = NormalPriority;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_next(eventHandler) {\n  var priorityLevel;\n\n  switch (currentPriorityLevel) {\n    case ImmediatePriority:\n    case UserBlockingPriority:\n    case NormalPriority:\n      // Shift down to normal priority\n      priorityLevel = NormalPriority;\n      break;\n\n    default:\n      // Anything lower than normal priority should remain at the current level.\n      priorityLevel = currentPriorityLevel;\n      break;\n  }\n\n  var previousPriorityLevel = currentPriorityLevel;\n  currentPriorityLevel = priorityLevel;\n\n  try {\n    return eventHandler();\n  } finally {\n    currentPriorityLevel = previousPriorityLevel;\n  }\n}\n\nfunction unstable_wrapCallback(callback) {\n  var parentPriorityLevel = currentPriorityLevel;\n  return function () {\n    // This is a fork of runWithPriority, inlined for performance.\n    var previousPriorityLevel = currentPriorityLevel;\n    currentPriorityLevel = parentPriorityLevel;\n\n    try {\n      return callback.apply(this, arguments);\n    } finally {\n      currentPriorityLevel = previousPriorityLevel;\n    }\n  };\n}\n\nfunction unstable_scheduleCallback(priorityLevel, callback, options) {\n  var currentTime = getCurrentTime();\n  var startTime;\n\n  if (typeof options === 'object' && options !== null) {\n    var delay = options.delay;\n\n    if (typeof delay === 'number' && delay > 0) {\n      startTime = currentTime + delay;\n    } else {\n      startTime = currentTime;\n    }\n  } else {\n    startTime = currentTime;\n  }\n\n  var timeout;\n\n  switch (priorityLevel) {\n    case ImmediatePriority:\n      timeout = IMMEDIATE_PRIORITY_TIMEOUT;\n      break;\n\n    case UserBlockingPriority:\n      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;\n      break;\n\n    case IdlePriority:\n      timeout = IDLE_PRIORITY_TIMEOUT;\n      break;\n\n    case LowPriority:\n      timeout = LOW_PRIORITY_TIMEOUT;\n      break;\n\n    case NormalPriority:\n    default:\n      timeout = NORMAL_PRIORITY_TIMEOUT;\n      break;\n  }\n\n  var expirationTime = startTime + timeout;\n  var newTask = {\n    id: taskIdCounter++,\n    callback: callback,\n    priorityLevel: priorityLevel,\n    startTime: startTime,\n    expirationTime: expirationTime,\n    sortIndex: -1\n  };\n\n  if (startTime > currentTime) {\n    // This is a delayed task.\n    newTask.sortIndex = startTime;\n    push(timerQueue, newTask);\n\n    if (peek(taskQueue) === null && newTask === peek(timerQueue)) {\n      // All tasks are delayed, and this is the task with the earliest delay.\n      if (isHostTimeoutScheduled) {\n        // Cancel an existing timeout.\n        cancelHostTimeout();\n      } else {\n        isHostTimeoutScheduled = true;\n      } // Schedule a timeout.\n\n\n      requestHostTimeout(handleTimeout, startTime - currentTime);\n    }\n  } else {\n    newTask.sortIndex = expirationTime;\n    push(taskQueue, newTask);\n    // wait until the next time we yield.\n\n\n    if (!isHostCallbackScheduled && !isPerformingWork) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    }\n  }\n\n  return newTask;\n}\n\nfunction unstable_pauseExecution() {\n}\n\nfunction unstable_continueExecution() {\n\n  if (!isHostCallbackScheduled && !isPerformingWork) {\n    isHostCallbackScheduled = true;\n    requestHostCallback(flushWork);\n  }\n}\n\nfunction unstable_getFirstCallbackNode() {\n  return peek(taskQueue);\n}\n\nfunction unstable_cancelCallback(task) {\n  // remove from the queue because you can't remove arbitrary nodes from an\n  // array based heap, only the first one.)\n\n\n  task.callback = null;\n}\n\nfunction unstable_getCurrentPriorityLevel() {\n  return currentPriorityLevel;\n}\n\nvar unstable_requestPaint = requestPaint;\nvar unstable_Profiling =  null;\n\nexports.unstable_IdlePriority = IdlePriority;\nexports.unstable_ImmediatePriority = ImmediatePriority;\nexports.unstable_LowPriority = LowPriority;\nexports.unstable_NormalPriority = NormalPriority;\nexports.unstable_Profiling = unstable_Profiling;\nexports.unstable_UserBlockingPriority = UserBlockingPriority;\nexports.unstable_advanceTime = unstable_advanceTime;\nexports.unstable_cancelCallback = unstable_cancelCallback;\nexports.unstable_clearYields = unstable_clearYields;\nexports.unstable_continueExecution = unstable_continueExecution;\nexports.unstable_flushAll = unstable_flushAll;\nexports.unstable_flushAllWithoutAsserting = unstable_flushAllWithoutAsserting;\nexports.unstable_flushExpired = unstable_flushExpired;\nexports.unstable_flushNumberOfYields = unstable_flushNumberOfYields;\nexports.unstable_flushUntilNextPaint = unstable_flushUntilNextPaint;\nexports.unstable_forceFrameRate = forceFrameRate;\nexports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;\nexports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;\nexports.unstable_next = unstable_next;\nexports.unstable_now = getCurrentTime;\nexports.unstable_pauseExecution = unstable_pauseExecution;\nexports.unstable_requestPaint = unstable_requestPaint;\nexports.unstable_runWithPriority = unstable_runWithPriority;\nexports.unstable_scheduleCallback = unstable_scheduleCallback;\nexports.unstable_shouldYield = shouldYieldToHost;\nexports.unstable_wrapCallback = unstable_wrapCallback;\nexports.unstable_yieldValue = unstable_yieldValue;\n  })();\n}\n"]}