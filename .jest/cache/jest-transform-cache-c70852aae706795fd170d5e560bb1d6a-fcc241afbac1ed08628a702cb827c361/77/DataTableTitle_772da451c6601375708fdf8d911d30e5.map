{"version":3,"mappings":"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","names":["DataTableTitle","numeric","children","onPress","sortDirection","theme","style","numberOfLines","rest","React","useRef","Animated","Value","spinAnim","current","useEffect","timing","toValue","duration","useNativeDriver","start","textColor","colors","text","alpha","rgb","string","spin","interpolate","inputRange","outputRange","icon","_reactNative","View","styles","transform","rotate","_MaterialCommunityIcon","name","size","color","direction","I18nManager","isRTL","disabled","container","right","_Text","cell","sorted","displayName","StyleSheet","create","flex","flexDirection","alignContent","paddingVertical","justifyContent","height","lineHeight","fontSize","fontWeight","alignItems","marginLeft"],"sources":["DataTableTitle.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof TouchableWithoutFeedback> & {\n  /**\n   * Text content of the `DataTableTitle`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Direction of sorting. An arrow indicating the direction is displayed when this is given.\n   */\n  sortDirection?: 'ascending' | 'descending';\n  /**\n   * The number of lines to show.\n   */\n  numberOfLines?: number;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to display title in table header.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-header.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title\n *             sortDirection='descending'\n *           >\n *             Dessert\n *           </DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\n *         </DataTable.Header>\n *       </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableTitle = ({\n  numeric,\n  children,\n  onPress,\n  sortDirection,\n  theme,\n  style,\n  numberOfLines = 1,\n  ...rest\n}: Props) => {\n  const { current: spinAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(sortDirection === 'ascending' ? 0 : 1)\n  );\n\n  React.useEffect(() => {\n    Animated.timing(spinAnim, {\n      toValue: sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true,\n    }).start();\n  }, [sortDirection, spinAnim]);\n\n  const textColor = color(theme.colors.text).alpha(0.6).rgb().string();\n\n  const spin = spinAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '180deg'],\n  });\n\n  const icon = sortDirection ? (\n    <Animated.View style={[styles.icon, { transform: [{ rotate: spin }] }]}>\n      <MaterialCommunityIcon\n        name=\"arrow-up\"\n        size={16}\n        color={theme.colors.text}\n        direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n      />\n    </Animated.View>\n  ) : null;\n\n  return (\n    <TouchableWithoutFeedback disabled={!onPress} onPress={onPress} {...rest}>\n      <View style={[styles.container, numeric && styles.right, style]}>\n        {icon}\n\n        <Text\n          style={[\n            styles.cell,\n            sortDirection ? styles.sorted : { color: textColor },\n          ]}\n          numberOfLines={numberOfLines}\n        >\n          {children}\n        </Text>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nDataTableTitle.displayName = 'DataTable.Title';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12,\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n\n  cell: {\n    height: 24,\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center',\n  },\n\n  sorted: {\n    marginLeft: 8,\n  },\n\n  icon: {\n    height: 24,\n    justifyContent: 'center',\n  },\n});\n\nexport default withTheme(DataTableTitle);\n\n// @component-docs ignore-next-line\nexport { DataTableTitle };\n"]}