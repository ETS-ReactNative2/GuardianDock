{"version":3,"mappings":";;;;;;;AAEe,SAASA,wBAAT,CAAkCC,KAAlC,EAA0D;AACvE,MAAMC,UAAsB,GAAG,EAA/B;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CACpBC,QADoB,EAEpBH,KAFoB,EAGjB;AACHA,SAAK,CAACI,MAANJ,CAAaK,OAAbL,CAAsBM,eAAD,EAAmC;AAAA;;AACtD,UAAMC,eAAe,GAAGJ,QAAQ,GACzBA,QADyB,WACXG,KAAK,CAACE,IADK,GAE5BF,KAAK,CAACE,IAFV;AAIA,2BAAK,CAACR,KAAN,uFAAaS,UAAb,gFAAyBJ,OAAzB,CAAkCK,mBAAD,EAAe;AAC9C,YAAIA,SAAS,KAAKJ,KAAK,CAACE,IAAxB,EAA8B;AAC5BP,oBAAU,CAACU,IAAXV,CAAgB,CACdM,eADc,EAEXA,eAFW,WAEUD,KAAK,CAACE,IAFhB,CAAhBP;AAID;AANH;;AASA,UAAIK,KAAK,CAACN,KAAV,EAAiB;AACfE,qBAAa,CAACK,eAAD,EAAkBD,KAAK,CAACN,KAAxB,CAAbE;AACD;AAhBH;AAJF;;AAwBAA,eAAa,CAAC,EAAD,EAAKF,KAAL,CAAbE;AAEA,SAAOD,UAAP;AACD","names":["checkDuplicateRouteNames","state","duplicates","getRouteNames","location","routes","forEach","route","currentLocation","name","routeNames","routeName","push"],"sources":["checkDuplicateRouteNames.tsx"],"sourcesContent":["import type { NavigationState, PartialState } from '@react-navigation/routers';\n\nexport default function checkDuplicateRouteNames(state: NavigationState) {\n  const duplicates: string[][] = [];\n\n  const getRouteNames = (\n    location: string,\n    state: NavigationState | PartialState<NavigationState>\n  ) => {\n    state.routes.forEach((route: typeof state.routes[0]) => {\n      const currentLocation = location\n        ? `${location} > ${route.name}`\n        : route.name;\n\n      route.state?.routeNames?.forEach((routeName) => {\n        if (routeName === route.name) {\n          duplicates.push([\n            currentLocation,\n            `${currentLocation} > ${route.name}`,\n          ]);\n        }\n      });\n\n      if (route.state) {\n        getRouteNames(currentLocation, route.state);\n      }\n    });\n  };\n\n  getRouteNames('', state);\n\n  return duplicates;\n}\n"]}