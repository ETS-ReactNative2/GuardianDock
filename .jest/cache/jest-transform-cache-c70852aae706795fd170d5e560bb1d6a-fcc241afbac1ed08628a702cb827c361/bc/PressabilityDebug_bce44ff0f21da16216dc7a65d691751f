878b3ef57a23e2638c0f56c2776510f5
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PressabilityDebugView = PressabilityDebugView;
exports.isEnabled = isEnabled;
exports.setEnabled = setEnabled;

var _normalizeColor = _interopRequireDefault(require("../StyleSheet/normalizeColor"));

var _View = _interopRequireDefault(require("../Components/View/View"));

var React = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function PressabilityDebugView(_ref) {
  var color = _ref.color,
      hitSlop = _ref.hitSlop;

  if (__DEV__) {
    if (isEnabled()) {
      var _hitSlop$bottom, _hitSlop$left, _hitSlop$right, _hitSlop$top;

      var normalizedColor = (0, _normalizeColor.default)(color);

      if (typeof normalizedColor !== 'number') {
        return null;
      }

      var baseColor = '#' + (normalizedColor != null ? normalizedColor : 0).toString(16).padStart(8, '0');
      return React.createElement(_View.default, {
        pointerEvents: "none",
        style: {
          backgroundColor: baseColor.slice(0, -2) + '0F',
          borderColor: baseColor.slice(0, -2) + '55',
          borderStyle: 'dashed',
          borderWidth: 1,
          bottom: -((_hitSlop$bottom = hitSlop == null ? void 0 : hitSlop.bottom) != null ? _hitSlop$bottom : 0),
          left: -((_hitSlop$left = hitSlop == null ? void 0 : hitSlop.left) != null ? _hitSlop$left : 0),
          position: 'absolute',
          right: -((_hitSlop$right = hitSlop == null ? void 0 : hitSlop.right) != null ? _hitSlop$right : 0),
          top: -((_hitSlop$top = hitSlop == null ? void 0 : hitSlop.top) != null ? _hitSlop$top : 0)
        }
      });
    }
  }

  return null;
}

var isDebugEnabled = false;

function isEnabled() {
  if (__DEV__) {
    return isDebugEnabled;
  }

  return false;
}

function setEnabled(value) {
  if (__DEV__) {
    isDebugEnabled = value;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlByZXNzYWJpbGl0eURlYnVnLmpzIl0sIm5hbWVzIjpbIlByZXNzYWJpbGl0eURlYnVnVmlldyIsImNvbG9yIiwiaGl0U2xvcCIsIl9fREVWX18iLCJpc0VuYWJsZWQiLCJub3JtYWxpemVkQ29sb3IiLCJiYXNlQ29sb3IiLCJ0b1N0cmluZyIsInBhZFN0YXJ0IiwiYmFja2dyb3VuZENvbG9yIiwic2xpY2UiLCJib3JkZXJDb2xvciIsImJvcmRlclN0eWxlIiwiYm9yZGVyV2lkdGgiLCJib3R0b20iLCJsZWZ0IiwicG9zaXRpb24iLCJyaWdodCIsInRvcCIsImlzRGVidWdFbmFibGVkIiwic2V0RW5hYmxlZCIsInZhbHVlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFVQTs7QUFHQTs7QUFDQTs7Ozs7O0FBMkJPLFNBQVNBLHFCQUFULE9BQW9FO0FBQUEsTUFBcENDLEtBQW9DLFFBQXBDQSxLQUFvQztBQUFBLE1BQTdCQyxPQUE2QixRQUE3QkEsT0FBNkI7O0FBQ3pFLE1BQUlDLE9BQUosRUFBYTtBQUNYLFFBQUlDLFNBQVMsRUFBYixFQUFpQjtBQUFBOztBQUNmLFVBQU1DLGVBQWUsR0FBRyw2QkFBZUosS0FBZixDQUF4Qjs7QUFDQSxVQUFJLE9BQU9JLGVBQVAsS0FBMkIsUUFBL0IsRUFBeUM7QUFDdkMsZUFBTyxJQUFQO0FBQ0Q7O0FBQ0QsVUFBTUMsU0FBUyxHQUNiLE1BQU0sQ0FBQ0QsZUFBRCxXQUFDQSxlQUFELEdBQW9CLENBQXBCLEVBQXVCRSxRQUF2QixDQUFnQyxFQUFoQyxFQUFvQ0MsUUFBcEMsQ0FBNkMsQ0FBN0MsRUFBZ0QsR0FBaEQsQ0FEUjtBQUdBLGFBQ0Usb0JBQUMsYUFBRDtBQUNFLFFBQUEsYUFBYSxFQUFDLE1BRGhCO0FBRUUsUUFBQSxLQUFLLEVBQUU7QUFDTEMsVUFBQUEsZUFBZSxFQUFFSCxTQUFTLENBQUNJLEtBQVYsQ0FBZ0IsQ0FBaEIsRUFBbUIsQ0FBQyxDQUFwQixJQUF5QixJQURyQztBQUVMQyxVQUFBQSxXQUFXLEVBQUVMLFNBQVMsQ0FBQ0ksS0FBVixDQUFnQixDQUFoQixFQUFtQixDQUFDLENBQXBCLElBQXlCLElBRmpDO0FBR0xFLFVBQUFBLFdBQVcsRUFBRSxRQUhSO0FBSUxDLFVBQUFBLFdBQVcsRUFBRSxDQUpSO0FBS0xDLFVBQUFBLE1BQU0sRUFBRSxxQkFBRVosT0FBRixvQkFBRUEsT0FBTyxDQUFFWSxNQUFYLDhCQUFxQixDQUFyQixDQUxIO0FBTUxDLFVBQUFBLElBQUksRUFBRSxtQkFBRWIsT0FBRixvQkFBRUEsT0FBTyxDQUFFYSxJQUFYLDRCQUFtQixDQUFuQixDQU5EO0FBT0xDLFVBQUFBLFFBQVEsRUFBRSxVQVBMO0FBUUxDLFVBQUFBLEtBQUssRUFBRSxvQkFBRWYsT0FBRixvQkFBRUEsT0FBTyxDQUFFZSxLQUFYLDZCQUFvQixDQUFwQixDQVJGO0FBU0xDLFVBQUFBLEdBQUcsRUFBRSxrQkFBRWhCLE9BQUYsb0JBQUVBLE9BQU8sQ0FBRWdCLEdBQVgsMkJBQWtCLENBQWxCO0FBVEE7QUFGVCxRQURGO0FBZ0JEO0FBQ0Y7O0FBQ0QsU0FBTyxJQUFQO0FBQ0Q7O0FBRUQsSUFBSUMsY0FBYyxHQUFHLEtBQXJCOztBQUVPLFNBQVNmLFNBQVQsR0FBOEI7QUFDbkMsTUFBSUQsT0FBSixFQUFhO0FBQ1gsV0FBT2dCLGNBQVA7QUFDRDs7QUFDRCxTQUFPLEtBQVA7QUFDRDs7QUFFTSxTQUFTQyxVQUFULENBQW9CQyxLQUFwQixFQUEwQztBQUMvQyxNQUFJbEIsT0FBSixFQUFhO0FBQ1hnQixJQUFBQSxjQUFjLEdBQUdFLEtBQWpCO0FBQ0Q7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3cgc3RyaWN0LWxvY2FsXG4gKiBAZm9ybWF0XG4gKi9cblxuaW1wb3J0IG5vcm1hbGl6ZUNvbG9yIGZyb20gJy4uL1N0eWxlU2hlZXQvbm9ybWFsaXplQ29sb3InO1xuaW1wb3J0IHR5cGUge0NvbG9yVmFsdWV9IGZyb20gJy4uL1N0eWxlU2hlZXQvU3R5bGVTaGVldCc7XG5cbmltcG9ydCBWaWV3IGZyb20gJy4uL0NvbXBvbmVudHMvVmlldy9WaWV3JztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcblxudHlwZSBQcm9wcyA9ICRSZWFkT25seTx7fFxuICBjb2xvcjogQ29sb3JWYWx1ZSxcbiAgaGl0U2xvcDogPyRSZWFkT25seTx7fFxuICAgIGJvdHRvbT86ID9udW1iZXIsXG4gICAgbGVmdD86ID9udW1iZXIsXG4gICAgcmlnaHQ/OiA/bnVtYmVyLFxuICAgIHRvcD86ID9udW1iZXIsXG4gIHx9Pixcbnx9PjtcblxuLyoqXG4gKiBEaXNwbGF5cyBhIGRlYnVnIG92ZXJsYXkgdG8gdmlzdWFsaXplIHByZXNzIHRhcmdldHMgd2hlbiBlbmFibGVkIHZpYSB0aGVcbiAqIFJlYWN0IE5hdGl2ZSBJbnNwZWN0b3IuIENhbGxzIHRvIHRoaXMgbW9kdWxlIHNob3VsZCBiZSBndWFyZGVkIGJ5IGBfX0RFVl9fYCxcbiAqIGZvciBleGFtcGxlOlxuICpcbiAqICAgcmV0dXJuIChcbiAqICAgICA8Vmlldz5cbiAqICAgICAgIHtjaGlsZHJlbn1cbiAqICAgICAgIHtfX0RFVl9fID8gKFxuICogICAgICAgICA8UHJlc3NhYmlsaXR5RGVidWdWaWV3IGNvbG9yPVwiLi4uXCIgaGl0U2xvcD17cHJvcHMuaGl0U2xvcH0gLz5cbiAqICAgICAgICkgOiBudWxsfVxuICogICAgIDwvVmlldz5cbiAqICAgKTtcbiAqXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBQcmVzc2FiaWxpdHlEZWJ1Z1ZpZXcoe2NvbG9yLCBoaXRTbG9wfTogUHJvcHMpOiBSZWFjdC5Ob2RlIHtcbiAgaWYgKF9fREVWX18pIHtcbiAgICBpZiAoaXNFbmFibGVkKCkpIHtcbiAgICAgIGNvbnN0IG5vcm1hbGl6ZWRDb2xvciA9IG5vcm1hbGl6ZUNvbG9yKGNvbG9yKTtcbiAgICAgIGlmICh0eXBlb2Ygbm9ybWFsaXplZENvbG9yICE9PSAnbnVtYmVyJykge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cbiAgICAgIGNvbnN0IGJhc2VDb2xvciA9XG4gICAgICAgICcjJyArIChub3JtYWxpemVkQ29sb3IgPz8gMCkudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDgsICcwJyk7XG5cbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxWaWV3XG4gICAgICAgICAgcG9pbnRlckV2ZW50cz1cIm5vbmVcIlxuICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGJhc2VDb2xvci5zbGljZSgwLCAtMikgKyAnMEYnLCAvLyAxNSVcbiAgICAgICAgICAgIGJvcmRlckNvbG9yOiBiYXNlQ29sb3Iuc2xpY2UoMCwgLTIpICsgJzU1JywgLy8gODUlXG4gICAgICAgICAgICBib3JkZXJTdHlsZTogJ2Rhc2hlZCcsXG4gICAgICAgICAgICBib3JkZXJXaWR0aDogMSxcbiAgICAgICAgICAgIGJvdHRvbTogLShoaXRTbG9wPy5ib3R0b20gPz8gMCksXG4gICAgICAgICAgICBsZWZ0OiAtKGhpdFNsb3A/LmxlZnQgPz8gMCksXG4gICAgICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgICAgICAgIHJpZ2h0OiAtKGhpdFNsb3A/LnJpZ2h0ID8/IDApLFxuICAgICAgICAgICAgdG9wOiAtKGhpdFNsb3A/LnRvcCA/PyAwKSxcbiAgICAgICAgICB9fVxuICAgICAgICAvPlxuICAgICAgKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG51bGw7XG59XG5cbmxldCBpc0RlYnVnRW5hYmxlZCA9IGZhbHNlO1xuXG5leHBvcnQgZnVuY3Rpb24gaXNFbmFibGVkKCk6IGJvb2xlYW4ge1xuICBpZiAoX19ERVZfXykge1xuICAgIHJldHVybiBpc0RlYnVnRW5hYmxlZDtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXRFbmFibGVkKHZhbHVlOiBib29sZWFuKTogdm9pZCB7XG4gIGlmIChfX0RFVl9fKSB7XG4gICAgaXNEZWJ1Z0VuYWJsZWQgPSB2YWx1ZTtcbiAgfVxufVxuIl19