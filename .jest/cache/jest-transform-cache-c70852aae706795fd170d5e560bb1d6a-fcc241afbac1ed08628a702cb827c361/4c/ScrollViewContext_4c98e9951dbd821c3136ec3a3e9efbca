241c832f65575e594f592783c1416ced
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.VERTICAL = exports.HORIZONTAL = void 0;

var React = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var ScrollViewContext = React.createContext(null);

if (__DEV__) {
  ScrollViewContext.displayName = 'ScrollViewContext';
}

var _default = ScrollViewContext;
exports.default = _default;
var HORIZONTAL = Object.freeze({
  horizontal: true
});
exports.HORIZONTAL = HORIZONTAL;
var VERTICAL = Object.freeze({
  horizontal: false
});
exports.VERTICAL = VERTICAL;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNjcm9sbFZpZXdDb250ZXh0LmpzIl0sIm5hbWVzIjpbIlNjcm9sbFZpZXdDb250ZXh0IiwiUmVhY3QiLCJjcmVhdGVDb250ZXh0IiwiX19ERVZfXyIsImRpc3BsYXlOYW1lIiwiSE9SSVpPTlRBTCIsIk9iamVjdCIsImZyZWV6ZSIsImhvcml6b250YWwiLCJWRVJUSUNBTCJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFVQTs7Ozs7O0FBSUEsSUFBTUEsaUJBQXVDLEdBQUdDLEtBQUssQ0FBQ0MsYUFBTixDQUFvQixJQUFwQixDQUFoRDs7QUFDQSxJQUFJQyxPQUFKLEVBQWE7QUFDWEgsRUFBQUEsaUJBQWlCLENBQUNJLFdBQWxCLEdBQWdDLG1CQUFoQztBQUNEOztlQUNjSixpQjs7QUFFUixJQUFNSyxVQUFpQixHQUFHQyxNQUFNLENBQUNDLE1BQVAsQ0FBYztBQUFDQyxFQUFBQSxVQUFVLEVBQUU7QUFBYixDQUFkLENBQTFCOztBQUNBLElBQU1DLFFBQWUsR0FBR0gsTUFBTSxDQUFDQyxNQUFQLENBQWM7QUFBQ0MsRUFBQUEsVUFBVSxFQUFFO0FBQWIsQ0FBZCxDQUF4QiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3cgc3RyaWN0XG4gKiBAZm9ybWF0XG4gKi9cblxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG50eXBlIFZhbHVlID0ge2hvcml6b250YWw6IGJvb2xlYW59IHwgbnVsbDtcblxuY29uc3QgU2Nyb2xsVmlld0NvbnRleHQ6IFJlYWN0LkNvbnRleHQ8VmFsdWU+ID0gUmVhY3QuY3JlYXRlQ29udGV4dChudWxsKTtcbmlmIChfX0RFVl9fKSB7XG4gIFNjcm9sbFZpZXdDb250ZXh0LmRpc3BsYXlOYW1lID0gJ1Njcm9sbFZpZXdDb250ZXh0Jztcbn1cbmV4cG9ydCBkZWZhdWx0IFNjcm9sbFZpZXdDb250ZXh0O1xuXG5leHBvcnQgY29uc3QgSE9SSVpPTlRBTDogVmFsdWUgPSBPYmplY3QuZnJlZXplKHtob3Jpem9udGFsOiB0cnVlfSk7XG5leHBvcnQgY29uc3QgVkVSVElDQUw6IFZhbHVlID0gT2JqZWN0LmZyZWV6ZSh7aG9yaXpvbnRhbDogZmFsc2V9KTtcbiJdfQ==