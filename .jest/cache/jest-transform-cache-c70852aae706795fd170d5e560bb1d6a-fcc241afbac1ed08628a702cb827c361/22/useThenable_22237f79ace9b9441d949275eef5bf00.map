{"version":3,"mappings":";;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEe,SAASA,WAAT,CAAwBC,MAAxB,EAAsD;AACnE,wBAAkBC,KAAK,CAACC,QAAND,CAAeD,MAAfC,CAAlB;AAAA;AAAA,MAAOE,OAAP;;AAEA,MAAIC,YAAsC,GAAG,CAAC,KAAD,EAAQC,SAAR,CAA7C;AAGAF,SAAO,CAACG,IAARH,CAAcI,gBAAD,EAAY;AACvBH,gBAAY,GAAG,CAAC,IAAD,EAAOG,MAAP,CAAfH;AADF;;AAIA,yBAA0BH,KAAK,CAACC,QAAND,CAAeG,YAAfH,CAA1B;AAAA;AAAA,MAAOO,KAAP;AAAA,MAAcC,QAAd;;AACA,4CAAmBD,KAAnB;AAAA,MAAOE,QAAP;;AAEAT,OAAK,CAACU,SAANV,CAAgB,YAAM;AACpB,QAAIW,SAAS,GAAG,KAAhB;;AAEA,QAAMC,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAIGV,OAJH;;AAAA;AAIZI,oBAJY;;AAAA;AAAA;;AAMZ,kBAAI,CAACK,SAAL,EAAgB;AACdH,wBAAQ,CAAC,CAAC,IAAD,EAAOF,MAAP,CAAD,CAARE;AACD;;AARW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAYA,QAAI,CAACC,QAAL,EAAe;AACbG,aAAO;AACR;;AAED,WAAO,YAAM;AACXD,eAAS,GAAG,IAAZA;AADF;AAnBF,KAsBG,CAACT,OAAD,EAAUO,QAAV,CAtBHT;AAwBA,SAAOO,KAAP;AACD","names":["useThenable","create","React","useState","promise","initialState","undefined","then","result","state","setState","resolved","useEffect","cancelled","resolve"],"sources":["useThenable.tsx"],"sourcesContent":["import * as React from 'react';\n\nexport default function useThenable<T>(create: () => PromiseLike<T>) {\n  const [promise] = React.useState(create);\n\n  let initialState: [boolean, T | undefined] = [false, undefined];\n\n  // Check if our thenable is synchronous\n  promise.then((result) => {\n    initialState = [true, result];\n  });\n\n  const [state, setState] = React.useState(initialState);\n  const [resolved] = state;\n\n  React.useEffect(() => {\n    let cancelled = false;\n\n    const resolve = async () => {\n      let result;\n\n      try {\n        result = await promise;\n      } finally {\n        if (!cancelled) {\n          setState([true, result]);\n        }\n      }\n    };\n\n    if (!resolved) {\n      resolve();\n    }\n\n    return () => {\n      cancelled = true;\n    };\n  }, [promise, resolved]);\n\n  return state;\n}\n"]}