{"version":3,"sources":["RCTEventEmitter.js"],"names":["BatchedBridge","require","RCTEventEmitter","register","eventEmitter","global","RN$Bridgeless","RN$registerCallableModule","registerCallableModule","module","exports"],"mappings":"AAUA;;AAEA,IAAMA,aAAa,GAAGC,OAAO,CAAC,gCAAD,CAA7B;;AAEA,IAAMC,eAAe,GAAG;AACtBC,EAAAA,QADsB,oBACbC,YADa,EACM;AAC1B,QAAIC,MAAM,CAACC,aAAX,EAA0B;AACxBD,MAAAA,MAAM,CAACE,yBAAP,CAAiC,iBAAjC,EAAoD;AAAA,eAAMH,YAAN;AAAA,OAApD;AACD,KAFD,MAEO;AACLJ,MAAAA,aAAa,CAACQ,sBAAd,CAAqC,iBAArC,EAAwDJ,YAAxD;AACD;AACF;AAPqB,CAAxB;AAUAK,MAAM,CAACC,OAAP,GAAiBR,eAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst BatchedBridge = require('../BatchedBridge/BatchedBridge');\n\nconst RCTEventEmitter = {\n  register(eventEmitter: any) {\n    if (global.RN$Bridgeless) {\n      global.RN$registerCallableModule('RCTEventEmitter', () => eventEmitter);\n    } else {\n      BatchedBridge.registerCallableModule('RCTEventEmitter', eventEmitter);\n    }\n  },\n};\n\nmodule.exports = RCTEventEmitter;\n"]}