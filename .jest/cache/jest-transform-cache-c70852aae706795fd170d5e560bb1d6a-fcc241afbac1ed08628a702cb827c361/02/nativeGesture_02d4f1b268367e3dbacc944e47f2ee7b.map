{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;IAMaA,a;;;;;AAGXC,2BAAc;AAAA;;AAAA;AACZ;;AADYC,2EAF+C,EAE/C;;AAGZ,UAAKC,WAAL,GAAmB,0BAAnB;AAHY;AAIb;;;;WAEDC,+BAAsBC,KAAtBD,EAAsC;AACpC,WAAKE,MAAL,CAAYF,qBAAZ,GAAoCC,KAApC;AACA,aAAO,IAAP;AACD;;;WAEDE,8BAAqBF,KAArBE,EAAqC;AACnC,WAAKD,MAAL,CAAYC,oBAAZ,GAAmCF,KAAnC;AACA,aAAO,IAAP;AACD;;;EAjBgCG,oB","names":["NativeGesture","constructor","_defineProperty","handlerName","shouldActivateOnStart","value","config","disallowInterruption","BaseGesture"],"sources":["nativeGesture.ts"],"sourcesContent":["import { BaseGestureConfig, BaseGesture } from './gesture';\nimport {\n  NativeViewGestureConfig,\n  NativeViewGestureHandlerPayload,\n} from '../NativeViewGestureHandler';\n\nexport class NativeGesture extends BaseGesture<NativeViewGestureHandlerPayload> {\n  public config: BaseGestureConfig & NativeViewGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'NativeViewGestureHandler';\n  }\n\n  shouldActivateOnStart(value: boolean) {\n    this.config.shouldActivateOnStart = value;\n    return this;\n  }\n\n  disallowInterruption(value: boolean) {\n    this.config.disallowInterruption = value;\n    return this;\n  }\n}\n\nexport type NativeGestureType = InstanceType<typeof NativeGesture>;\n"]}