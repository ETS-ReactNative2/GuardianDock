abaad987c32265697325f26f635bd849
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = CustomDrawerContent;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _reactNativePaper = require("react-native-paper");

var _drawer = require("@react-navigation/drawer");

var _DrawerItems = require("../config/DrawerItems");

var _jsxRuntime = require("react/jsx-runtime");

function CustomDrawerContent(props) {
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: {
      flex: 1
    },
    children: [(0, _jsxRuntime.jsx)(_drawer.DrawerContentScrollView, (0, _extends2.default)({}, props, {
      children: (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: {
          flex: 1
        },
        children: [(0, _jsxRuntime.jsx)(_reactNative.View, {
          style: {
            paddingLeft: 20,
            backgroundColor: '#222222'
          },
          children: (0, _jsxRuntime.jsx)(_reactNative.View, {
            style: {
              flexDirection: 'row',
              marginTop: 15
            },
            children: (0, _jsxRuntime.jsx)(_reactNative.Image, {
              source: require("../../assets/logo-og-nbg.png"),
              style: {
                width: '100%',
                height: 162.5
              }
            })
          })
        }), _DrawerItems.DrawerContentItems.map(function (value, index) {
          return value.routes.length === 1 ? (0, _jsxRuntime.jsx)(_reactNativePaper.Drawer.Section, {
            style: {
              marginTop: 15
            },
            children: (0, _jsxRuntime.jsx)(_reactNativePaper.Drawer.Item, {
              label: value.title,
              onPress: function onPress() {
                props.navigation.navigate(value.routes[0].routerName);
              }
            }, "drawer_item-" + (index + 1))
          }) : (0, _jsxRuntime.jsx)(_reactNativePaper.Drawer.Section, {
            title: value.title,
            style: {
              marginTop: 15
            },
            children: value.routes.map(function (route, indexx) {
              return (0, _jsxRuntime.jsx)(_reactNativePaper.Drawer.Item, {
                label: route.title,
                onPress: function onPress() {
                  return props.navigation.navigate(route.routerName);
                }
              }, "drawer_item-" + (index + indexx + 2));
            })
          });
        })]
      })
    })), (0, _jsxRuntime.jsx)(_reactNativePaper.Drawer.Section, {
      style: {
        marginBottom: 15,
        borderTopColor: '#f4f4f4',
        borderTopWidth: 1,
        justifyContent: 'center',
        alignContent: 'center'
      },
      children: (0, _jsxRuntime.jsx)(_reactNativePaper.Subheading, {
        style: {
          textAlign: 'center'
        },
        children: "Version 0.0.1"
      })
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkN1c3RvbURyYXdlckNvbnRlbnQudHN4Il0sIm5hbWVzIjpbIkN1c3RvbURyYXdlckNvbnRlbnQiLCJwcm9wcyIsImZsZXgiLCJwYWRkaW5nTGVmdCIsImJhY2tncm91bmRDb2xvciIsImZsZXhEaXJlY3Rpb24iLCJtYXJnaW5Ub3AiLCJyZXF1aXJlIiwid2lkdGgiLCJoZWlnaHQiLCJEcmF3ZXJDb250ZW50SXRlbXMiLCJtYXAiLCJ2YWx1ZSIsImluZGV4Iiwicm91dGVzIiwibGVuZ3RoIiwidGl0bGUiLCJuYXZpZ2F0aW9uIiwibmF2aWdhdGUiLCJyb3V0ZXJOYW1lIiwicm91dGUiLCJpbmRleHgiLCJtYXJnaW5Cb3R0b20iLCJib3JkZXJUb3BDb2xvciIsImJvcmRlclRvcFdpZHRoIiwianVzdGlmeUNvbnRlbnQiLCJhbGlnbkNvbnRlbnQiLCJ0ZXh0QWxpZ24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUVBOztBQUNBOztBQUNBOztBQUVBOzs7O0FBSWUsU0FBU0EsbUJBQVQsQ0FBNkJDLEtBQTdCLEVBQWlFO0FBQzVFLFNBQ0ksc0JBQUMsaUJBQUQ7QUFBTSxJQUFBLEtBQUssRUFBRTtBQUFDQyxNQUFBQSxJQUFJLEVBQUU7QUFBUCxLQUFiO0FBQUEsZUFDSSxxQkFBQywrQkFBRCw2QkFBNkJELEtBQTdCO0FBQUEsZ0JBQ0ksc0JBQUMsaUJBQUQ7QUFBTSxRQUFBLEtBQUssRUFBRTtBQUFDQyxVQUFBQSxJQUFJLEVBQUU7QUFBUCxTQUFiO0FBQUEsbUJBQ0kscUJBQUMsaUJBQUQ7QUFBTSxVQUFBLEtBQUssRUFBRTtBQUFDQyxZQUFBQSxXQUFXLEVBQUUsRUFBZDtBQUFrQkMsWUFBQUEsZUFBZSxFQUFFO0FBQW5DLFdBQWI7QUFBQSxvQkFDSSxxQkFBQyxpQkFBRDtBQUFNLFlBQUEsS0FBSyxFQUFFO0FBQUNDLGNBQUFBLGFBQWEsRUFBRSxLQUFoQjtBQUF1QkMsY0FBQUEsU0FBUyxFQUFFO0FBQWxDLGFBQWI7QUFBQSxzQkFDSSxxQkFBQyxrQkFBRDtBQUFPLGNBQUEsTUFBTSxFQUFFQyxPQUFPLGdDQUF0QjtBQUF3RCxjQUFBLEtBQUssRUFBRTtBQUFDQyxnQkFBQUEsS0FBSyxFQUFFLE1BQVI7QUFBZ0JDLGdCQUFBQSxNQUFNLEVBQUU7QUFBeEI7QUFBL0Q7QUFESjtBQURKLFVBREosRUFNS0MsZ0NBQW1CQyxHQUFuQixDQUF1QixVQUFDQyxLQUFELEVBQVFDLEtBQVIsRUFBa0I7QUFDdEMsaUJBQU9ELEtBQUssQ0FBQ0UsTUFBTixDQUFhQyxNQUFiLEtBQXdCLENBQXhCLEdBQ0YscUJBQUMsd0JBQUQsQ0FBUSxPQUFSO0FBQWdCLFlBQUEsS0FBSyxFQUFFO0FBQUNULGNBQUFBLFNBQVMsRUFBRTtBQUFaLGFBQXZCO0FBQUEsc0JBQ0cscUJBQUMsd0JBQUQsQ0FBUSxJQUFSO0FBQThDLGNBQUEsS0FBSyxFQUFFTSxLQUFLLENBQUNJLEtBQTNEO0FBQWtFLGNBQUEsT0FBTyxFQUFFLG1CQUFNO0FBQzdFZixnQkFBQUEsS0FBSyxDQUFDZ0IsVUFBTixDQUFpQkMsUUFBakIsQ0FBMEJOLEtBQUssQ0FBQ0UsTUFBTixDQUFhLENBQWIsRUFBZ0JLLFVBQTFDO0FBQ0g7QUFGRCxpQ0FBaUNOLEtBQUssR0FBRyxDQUF6QztBQURILFlBREUsR0FNRixxQkFBQyx3QkFBRCxDQUFRLE9BQVI7QUFBZ0IsWUFBQSxLQUFLLEVBQUVELEtBQUssQ0FBQ0ksS0FBN0I7QUFBb0MsWUFBQSxLQUFLLEVBQUU7QUFBQ1YsY0FBQUEsU0FBUyxFQUFFO0FBQVosYUFBM0M7QUFBQSxzQkFDS00sS0FBSyxDQUFDRSxNQUFOLENBQWFILEdBQWIsQ0FBaUIsVUFBQ1MsS0FBRCxFQUFRQyxNQUFSLEVBQW1CO0FBQ2xDLHFCQUFRLHFCQUFDLHdCQUFELENBQVEsSUFBUjtBQUF1RCxnQkFBQSxLQUFLLEVBQUVELEtBQUssQ0FBQ0osS0FBcEU7QUFBMkUsZ0JBQUEsT0FBTyxFQUFFO0FBQUEseUJBQU1mLEtBQUssQ0FBQ2dCLFVBQU4sQ0FBaUJDLFFBQWpCLENBQTBCRSxLQUFLLENBQUNELFVBQWhDLENBQU47QUFBQTtBQUFwRixtQ0FBaUNOLEtBQUssR0FBR1EsTUFBUixHQUFpQixDQUFsRCxFQUFSO0FBQ0gsYUFGQztBQURMLFlBTkw7QUFXSCxTQVpBLENBTkw7QUFBQTtBQURKLE9BREosRUF1QkkscUJBQUMsd0JBQUQsQ0FBUSxPQUFSO0FBQWdCLE1BQUEsS0FBSyxFQUFFO0FBQUNDLFFBQUFBLFlBQVksRUFBRSxFQUFmO0FBQW1CQyxRQUFBQSxjQUFjLEVBQUUsU0FBbkM7QUFBOENDLFFBQUFBLGNBQWMsRUFBRSxDQUE5RDtBQUFpRUMsUUFBQUEsY0FBYyxFQUFFLFFBQWpGO0FBQTJGQyxRQUFBQSxZQUFZLEVBQUU7QUFBekcsT0FBdkI7QUFBQSxnQkFDSSxxQkFBQyw0QkFBRDtBQUFhLFFBQUEsS0FBSyxFQUFFO0FBQUNDLFVBQUFBLFNBQVMsRUFBRTtBQUFaLFNBQXBCO0FBQUE7QUFBQTtBQURKLE1BdkJKO0FBQUEsSUFESjtBQStCSCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwge3VzZVN0YXRlfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7SW1hZ2UsIFNhZmVBcmVhVmlldywgU2Nyb2xsVmlldywgVGV4dCwgVmlld30gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCB7RHJhd2VyLCBTdWJoZWFkaW5nfSBmcm9tICdyZWFjdC1uYXRpdmUtcGFwZXInO1xuaW1wb3J0IHtEcmF3ZXJDb250ZW50Q29tcG9uZW50UHJvcHMsIERyYXdlckNvbnRlbnRTY3JvbGxWaWV3LCBEcmF3ZXJJdGVtfSBmcm9tIFwiQHJlYWN0LW5hdmlnYXRpb24vZHJhd2VyXCI7XG5cbmltcG9ydCB7RHJhd2VyQ29udGVudEl0ZW1zLCBzY3JlZW5Sb3V0ZVByb3BzfSBmcm9tICcuLi9jb25maWcvRHJhd2VySXRlbXMnO1xuXG5pbXBvcnQgSWNvbiBmcm9tICdyZWFjdC1uYXRpdmUtdmVjdG9yLWljb25zL01hdGVyaWFsSWNvbnMnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDdXN0b21EcmF3ZXJDb250ZW50KHByb3BzOiBEcmF3ZXJDb250ZW50Q29tcG9uZW50UHJvcHMpIHtcbiAgICByZXR1cm4gKFxuICAgICAgICA8VmlldyBzdHlsZT17e2ZsZXg6IDF9fT5cbiAgICAgICAgICAgIDxEcmF3ZXJDb250ZW50U2Nyb2xsVmlldyB7Li4ucHJvcHN9PlxuICAgICAgICAgICAgICAgIDxWaWV3IHN0eWxlPXt7ZmxleDogMX19PlxuICAgICAgICAgICAgICAgICAgICA8VmlldyBzdHlsZT17e3BhZGRpbmdMZWZ0OiAyMCwgYmFja2dyb3VuZENvbG9yOiAnIzIyMjIyMid9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxWaWV3IHN0eWxlPXt7ZmxleERpcmVjdGlvbjogJ3JvdycsIG1hcmdpblRvcDogMTV9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SW1hZ2Ugc291cmNlPXtyZXF1aXJlKCcuLi8uLi9hc3NldHMvbG9nby1vZy1uYmcucG5nJyl9IHN0eWxlPXt7d2lkdGg6ICcxMDAlJywgaGVpZ2h0OiAxNjIuNX19Lz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvVmlldz5cbiAgICAgICAgICAgICAgICAgICAgPC9WaWV3PlxuICAgICAgICAgICAgICAgICAgICB7RHJhd2VyQ29udGVudEl0ZW1zLm1hcCgodmFsdWUsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWUucm91dGVzLmxlbmd0aCA9PT0gMSA/XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKDxEcmF3ZXIuU2VjdGlvbiBzdHlsZT17e21hcmdpblRvcDogMTV9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPERyYXdlci5JdGVtIGtleT17YGRyYXdlcl9pdGVtLSR7aW5kZXggKyAxfWB9IGxhYmVsPXt2YWx1ZS50aXRsZX0gb25QcmVzcz17KCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHMubmF2aWdhdGlvbi5uYXZpZ2F0ZSh2YWx1ZS5yb3V0ZXNbMF0ucm91dGVyTmFtZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX0vPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvRHJhd2VyLlNlY3Rpb24+KSA6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKDxEcmF3ZXIuU2VjdGlvbiB0aXRsZT17dmFsdWUudGl0bGV9IHN0eWxlPXt7bWFyZ2luVG9wOiAxNX19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7KHZhbHVlLnJvdXRlcy5tYXAoKHJvdXRlLCBpbmRleHgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoPERyYXdlci5JdGVtIGtleT17YGRyYXdlcl9pdGVtLSR7aW5kZXggKyBpbmRleHggKyAyfWB9IGxhYmVsPXtyb3V0ZS50aXRsZX0gb25QcmVzcz17KCkgPT4gcHJvcHMubmF2aWdhdGlvbi5uYXZpZ2F0ZShyb3V0ZS5yb3V0ZXJOYW1lKX0vPik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0RyYXdlci5TZWN0aW9uPilcbiAgICAgICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgICAgPC9WaWV3PlxuICAgICAgICAgICAgPC9EcmF3ZXJDb250ZW50U2Nyb2xsVmlldz5cbiAgICAgICAgICAgIDxEcmF3ZXIuU2VjdGlvbiBzdHlsZT17e21hcmdpbkJvdHRvbTogMTUsIGJvcmRlclRvcENvbG9yOiAnI2Y0ZjRmNCcsIGJvcmRlclRvcFdpZHRoOiAxLCBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsIGFsaWduQ29udGVudDogJ2NlbnRlcid9fT5cbiAgICAgICAgICAgICAgICA8U3ViaGVhZGluZyAgc3R5bGU9e3t0ZXh0QWxpZ246ICdjZW50ZXInfX0+XG4gICAgICAgICAgICAgICAgICAgIFZlcnNpb24gMC4wLjFcbiAgICAgICAgICAgICAgICA8L1N1YmhlYWRpbmc+XG4gICAgICAgICAgICA8L0RyYXdlci5TZWN0aW9uPlxuICAgICAgICA8L1ZpZXc+XG4gICAgKTtcbn1cbiJdfQ==