ee9303d9c1c95d75d30fb4cabef9a73e
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PanGesture = void 0;

var _gesture = require("./gesture");

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var changeEventCalculator = function () {
  var _f = function _f(current, previous) {
    var changePayload;

    if (previous === undefined) {
      changePayload = {
        changeX: current.translationX,
        changeY: current.translationY
      };
    } else {
      changePayload = {
        changeX: current.translationX - previous.translationX,
        changeY: current.translationY - previous.translationY
      };
    }

    return (0, _extends2.default)({}, current, changePayload);
  };

  _f._closure = {};
  _f.asString = "function changeEventCalculator(current,previous){let changePayload;if(previous===undefined){changePayload={changeX:current.translationX,changeY:current.translationY};}else{changePayload={changeX:current.translationX-previous.translationX,changeY:current.translationY-previous.translationY};}return{...current,...changePayload};}";
  _f.__workletHash = 7529687435058;
  _f.__location = "/home/nom4d/delivery/GuardianDock/node_modules/react-native-gesture-handler/lib/commonjs/handlers/gestures/panGesture.js (12:0)";

  global.__reanimatedWorkletInit(_f);

  return _f;
}();

var PanGesture = function (_gesture$ContinousBas) {
  (0, _inherits2.default)(PanGesture, _gesture$ContinousBas);

  var _super = _createSuper(PanGesture);

  function PanGesture() {
    var _this;

    (0, _classCallCheck2.default)(this, PanGesture);
    _this = _super.call(this);

    _defineProperty((0, _assertThisInitialized2.default)(_this), "config", {});

    _this.handlerName = 'PanGestureHandler';
    return _this;
  }

  (0, _createClass2.default)(PanGesture, [{
    key: "activeOffsetY",
    value: function activeOffsetY(offset) {
      if (Array.isArray(offset)) {
        this.config.activeOffsetYStart = offset[0];
        this.config.activeOffsetYEnd = offset[1];
      } else if (offset < 0) {
        this.config.activeOffsetYStart = offset;
      } else {
        this.config.activeOffsetYEnd = offset;
      }

      return this;
    }
  }, {
    key: "activeOffsetX",
    value: function activeOffsetX(offset) {
      if (Array.isArray(offset)) {
        this.config.activeOffsetXStart = offset[0];
        this.config.activeOffsetXEnd = offset[1];
      } else if (offset < 0) {
        this.config.activeOffsetXStart = offset;
      } else {
        this.config.activeOffsetXEnd = offset;
      }

      return this;
    }
  }, {
    key: "failOffsetY",
    value: function failOffsetY(offset) {
      if (Array.isArray(offset)) {
        this.config.failOffsetYStart = offset[0];
        this.config.failOffsetYEnd = offset[1];
      } else if (offset < 0) {
        this.config.failOffsetYStart = offset;
      } else {
        this.config.failOffsetYEnd = offset;
      }

      return this;
    }
  }, {
    key: "failOffsetX",
    value: function failOffsetX(offset) {
      if (Array.isArray(offset)) {
        this.config.failOffsetXStart = offset[0];
        this.config.failOffsetXEnd = offset[1];
      } else if (offset < 0) {
        this.config.failOffsetXStart = offset;
      } else {
        this.config.failOffsetXEnd = offset;
      }

      return this;
    }
  }, {
    key: "minPointers",
    value: function minPointers(_minPointers) {
      this.config.minPointers = _minPointers;
      return this;
    }
  }, {
    key: "maxPointers",
    value: function maxPointers(_maxPointers) {
      this.config.maxPointers = _maxPointers;
      return this;
    }
  }, {
    key: "minDistance",
    value: function minDistance(distance) {
      this.config.minDist = distance;
      return this;
    }
  }, {
    key: "minVelocity",
    value: function minVelocity(velocity) {
      this.config.minVelocity = velocity;
      return this;
    }
  }, {
    key: "minVelocityX",
    value: function minVelocityX(velocity) {
      this.config.minVelocityX = velocity;
      return this;
    }
  }, {
    key: "minVelocityY",
    value: function minVelocityY(velocity) {
      this.config.minVelocityY = velocity;
      return this;
    }
  }, {
    key: "averageTouches",
    value: function averageTouches(value) {
      this.config.avgTouches = value;
      return this;
    }
  }, {
    key: "enableTrackpadTwoFingerGesture",
    value: function enableTrackpadTwoFingerGesture(value) {
      this.config.enableTrackpadTwoFingerGesture = value;
      return this;
    }
  }, {
    key: "onChange",
    value: function onChange(callback) {
      this.handlers.changeEventCalculator = changeEventCalculator;
      return (0, _get2.default)((0, _getPrototypeOf2.default)(PanGesture.prototype), "onChange", this).call(this, callback);
    }
  }]);
  return PanGesture;
}(_gesture.ContinousBaseGesture);

exports.PanGesture = PanGesture;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFZU0EscUI7dUJBQ1BDLE8sRUFDQUMsUSxFQUNBO0FBRUEsUUFBSUMsYUFBSjs7QUFDQSxRQUFJRCxRQUFRLEtBQUtFLFNBQWpCLEVBQTRCO0FBQzFCRCxtQkFBYSxHQUFHO0FBQ2RFLGVBQU8sRUFBRUosT0FBTyxDQUFDSyxZQURIO0FBRWRDLGVBQU8sRUFBRU4sT0FBTyxDQUFDTztBQUZILE9BQWhCTDtBQURGLFdBS087QUFDTEEsbUJBQWEsR0FBRztBQUNkRSxlQUFPLEVBQUVKLE9BQU8sQ0FBQ0ssWUFBUkwsR0FBdUJDLFFBQVEsQ0FBQ0ksWUFEM0I7QUFFZEMsZUFBTyxFQUFFTixPQUFPLENBQUNPLFlBQVJQLEdBQXVCQyxRQUFRLENBQUNNO0FBRjNCLE9BQWhCTDtBQUlEOztBQUVELHNDQUFZRixPQUFaLEVBQXdCRSxhQUF4QjtBQUNELEc7Ozs7Ozs7Ozs7OztJQUVZTSxVOzs7OztBQU1YQyx3QkFBYztBQUFBOztBQUFBO0FBQ1o7O0FBRFlDLDJFQUZ3QyxFQUV4Qzs7QUFHWixVQUFLQyxXQUFMLEdBQW1CLG1CQUFuQjtBQUhZO0FBSWI7Ozs7V0FFREMsdUJBQWNDLE1BQWRELEVBQXlDO0FBQ3ZDLFVBQUlFLEtBQUssQ0FBQ0MsT0FBTkQsQ0FBY0QsTUFBZEMsQ0FBSixFQUEyQjtBQUN6QixhQUFLRSxNQUFMLENBQVlDLGtCQUFaLEdBQWlDSixNQUFNLENBQUMsQ0FBRCxDQUF2QztBQUNBLGFBQUtHLE1BQUwsQ0FBWUUsZ0JBQVosR0FBK0JMLE1BQU0sQ0FBQyxDQUFELENBQXJDO0FBRkYsYUFHTyxJQUFJQSxNQUFNLEdBQUcsQ0FBYixFQUFnQjtBQUNyQixhQUFLRyxNQUFMLENBQVlDLGtCQUFaLEdBQWlDSixNQUFqQztBQURLLGFBRUE7QUFDTCxhQUFLRyxNQUFMLENBQVlFLGdCQUFaLEdBQStCTCxNQUEvQjtBQUNEOztBQUNELGFBQU8sSUFBUDtBQUNEOzs7V0FFRE0sdUJBQWNOLE1BQWRNLEVBQXlDO0FBQ3ZDLFVBQUlMLEtBQUssQ0FBQ0MsT0FBTkQsQ0FBY0QsTUFBZEMsQ0FBSixFQUEyQjtBQUN6QixhQUFLRSxNQUFMLENBQVlJLGtCQUFaLEdBQWlDUCxNQUFNLENBQUMsQ0FBRCxDQUF2QztBQUNBLGFBQUtHLE1BQUwsQ0FBWUssZ0JBQVosR0FBK0JSLE1BQU0sQ0FBQyxDQUFELENBQXJDO0FBRkYsYUFHTyxJQUFJQSxNQUFNLEdBQUcsQ0FBYixFQUFnQjtBQUNyQixhQUFLRyxNQUFMLENBQVlJLGtCQUFaLEdBQWlDUCxNQUFqQztBQURLLGFBRUE7QUFDTCxhQUFLRyxNQUFMLENBQVlLLGdCQUFaLEdBQStCUixNQUEvQjtBQUNEOztBQUNELGFBQU8sSUFBUDtBQUNEOzs7V0FFRFMscUJBQVlULE1BQVpTLEVBQXVDO0FBQ3JDLFVBQUlSLEtBQUssQ0FBQ0MsT0FBTkQsQ0FBY0QsTUFBZEMsQ0FBSixFQUEyQjtBQUN6QixhQUFLRSxNQUFMLENBQVlPLGdCQUFaLEdBQStCVixNQUFNLENBQUMsQ0FBRCxDQUFyQztBQUNBLGFBQUtHLE1BQUwsQ0FBWVEsY0FBWixHQUE2QlgsTUFBTSxDQUFDLENBQUQsQ0FBbkM7QUFGRixhQUdPLElBQUlBLE1BQU0sR0FBRyxDQUFiLEVBQWdCO0FBQ3JCLGFBQUtHLE1BQUwsQ0FBWU8sZ0JBQVosR0FBK0JWLE1BQS9CO0FBREssYUFFQTtBQUNMLGFBQUtHLE1BQUwsQ0FBWVEsY0FBWixHQUE2QlgsTUFBN0I7QUFDRDs7QUFDRCxhQUFPLElBQVA7QUFDRDs7O1dBRURZLHFCQUFZWixNQUFaWSxFQUF1QztBQUNyQyxVQUFJWCxLQUFLLENBQUNDLE9BQU5ELENBQWNELE1BQWRDLENBQUosRUFBMkI7QUFDekIsYUFBS0UsTUFBTCxDQUFZVSxnQkFBWixHQUErQmIsTUFBTSxDQUFDLENBQUQsQ0FBckM7QUFDQSxhQUFLRyxNQUFMLENBQVlXLGNBQVosR0FBNkJkLE1BQU0sQ0FBQyxDQUFELENBQW5DO0FBRkYsYUFHTyxJQUFJQSxNQUFNLEdBQUcsQ0FBYixFQUFnQjtBQUNyQixhQUFLRyxNQUFMLENBQVlVLGdCQUFaLEdBQStCYixNQUEvQjtBQURLLGFBRUE7QUFDTCxhQUFLRyxNQUFMLENBQVlXLGNBQVosR0FBNkJkLE1BQTdCO0FBQ0Q7O0FBQ0QsYUFBTyxJQUFQO0FBQ0Q7OztXQUVEZSxxQkFBWUEsWUFBWkEsRUFBaUM7QUFDL0IsV0FBS1osTUFBTCxDQUFZWSxXQUFaLEdBQTBCQSxZQUExQjtBQUNBLGFBQU8sSUFBUDtBQUNEOzs7V0FFREMscUJBQVlBLFlBQVpBLEVBQWlDO0FBQy9CLFdBQUtiLE1BQUwsQ0FBWWEsV0FBWixHQUEwQkEsWUFBMUI7QUFDQSxhQUFPLElBQVA7QUFDRDs7O1dBRURDLHFCQUFZQyxRQUFaRCxFQUE4QjtBQUM1QixXQUFLZCxNQUFMLENBQVlnQixPQUFaLEdBQXNCRCxRQUF0QjtBQUNBLGFBQU8sSUFBUDtBQUNEOzs7V0FFREUscUJBQVlDLFFBQVpELEVBQThCO0FBQzVCLFdBQUtqQixNQUFMLENBQVlpQixXQUFaLEdBQTBCQyxRQUExQjtBQUNBLGFBQU8sSUFBUDtBQUNEOzs7V0FFREMsc0JBQWFELFFBQWJDLEVBQStCO0FBQzdCLFdBQUtuQixNQUFMLENBQVltQixZQUFaLEdBQTJCRCxRQUEzQjtBQUNBLGFBQU8sSUFBUDtBQUNEOzs7V0FFREUsc0JBQWFGLFFBQWJFLEVBQStCO0FBQzdCLFdBQUtwQixNQUFMLENBQVlvQixZQUFaLEdBQTJCRixRQUEzQjtBQUNBLGFBQU8sSUFBUDtBQUNEOzs7V0FFREcsd0JBQWVDLEtBQWZELEVBQStCO0FBQzdCLFdBQUtyQixNQUFMLENBQVl1QixVQUFaLEdBQXlCRCxLQUF6QjtBQUNBLGFBQU8sSUFBUDtBQUNEOzs7V0FFREUsd0NBQStCRixLQUEvQkUsRUFBK0M7QUFDN0MsV0FBS3hCLE1BQUwsQ0FBWXdCLDhCQUFaLEdBQTZDRixLQUE3QztBQUNBLGFBQU8sSUFBUDtBQUNEOzs7V0FFREcsa0JBQ0VDLFFBREZELEVBTUU7QUFFQSxXQUFLRSxRQUFMLENBQWM1QyxxQkFBZCxHQUFzQ0EscUJBQXRDO0FBQ0Esa0hBQXNCMkMsUUFBdEI7QUFDRDs7O0VBOUc2QkUsNkIiLCJuYW1lcyI6WyJjaGFuZ2VFdmVudENhbGN1bGF0b3IiLCJjdXJyZW50IiwicHJldmlvdXMiLCJjaGFuZ2VQYXlsb2FkIiwidW5kZWZpbmVkIiwiY2hhbmdlWCIsInRyYW5zbGF0aW9uWCIsImNoYW5nZVkiLCJ0cmFuc2xhdGlvblkiLCJQYW5HZXN0dXJlIiwiY29uc3RydWN0b3IiLCJfZGVmaW5lUHJvcGVydHkiLCJoYW5kbGVyTmFtZSIsImFjdGl2ZU9mZnNldFkiLCJvZmZzZXQiLCJBcnJheSIsImlzQXJyYXkiLCJjb25maWciLCJhY3RpdmVPZmZzZXRZU3RhcnQiLCJhY3RpdmVPZmZzZXRZRW5kIiwiYWN0aXZlT2Zmc2V0WCIsImFjdGl2ZU9mZnNldFhTdGFydCIsImFjdGl2ZU9mZnNldFhFbmQiLCJmYWlsT2Zmc2V0WSIsImZhaWxPZmZzZXRZU3RhcnQiLCJmYWlsT2Zmc2V0WUVuZCIsImZhaWxPZmZzZXRYIiwiZmFpbE9mZnNldFhTdGFydCIsImZhaWxPZmZzZXRYRW5kIiwibWluUG9pbnRlcnMiLCJtYXhQb2ludGVycyIsIm1pbkRpc3RhbmNlIiwiZGlzdGFuY2UiLCJtaW5EaXN0IiwibWluVmVsb2NpdHkiLCJ2ZWxvY2l0eSIsIm1pblZlbG9jaXR5WCIsIm1pblZlbG9jaXR5WSIsImF2ZXJhZ2VUb3VjaGVzIiwidmFsdWUiLCJhdmdUb3VjaGVzIiwiZW5hYmxlVHJhY2twYWRUd29GaW5nZXJHZXN0dXJlIiwib25DaGFuZ2UiLCJjYWxsYmFjayIsImhhbmRsZXJzIiwiQ29udGlub3VzQmFzZUdlc3R1cmUiXSwic291cmNlcyI6WyJwYW5HZXN0dXJlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VHZXN0dXJlQ29uZmlnLCBDb250aW5vdXNCYXNlR2VzdHVyZSB9IGZyb20gJy4vZ2VzdHVyZSc7XG5pbXBvcnQgeyBHZXN0dXJlVXBkYXRlRXZlbnQgfSBmcm9tICcuLi9nZXN0dXJlSGFuZGxlckNvbW1vbic7XG5pbXBvcnQge1xuICBQYW5HZXN0dXJlQ29uZmlnLFxuICBQYW5HZXN0dXJlSGFuZGxlckV2ZW50UGF5bG9hZCxcbn0gZnJvbSAnLi4vUGFuR2VzdHVyZUhhbmRsZXInO1xuXG5leHBvcnQgdHlwZSBQYW5HZXN0dXJlQ2hhbmdlRXZlbnRQYXlsb2FkID0ge1xuICBjaGFuZ2VYOiBudW1iZXI7XG4gIGNoYW5nZVk6IG51bWJlcjtcbn07XG5cbmZ1bmN0aW9uIGNoYW5nZUV2ZW50Q2FsY3VsYXRvcihcbiAgY3VycmVudDogR2VzdHVyZVVwZGF0ZUV2ZW50PFBhbkdlc3R1cmVIYW5kbGVyRXZlbnRQYXlsb2FkPixcbiAgcHJldmlvdXM/OiBHZXN0dXJlVXBkYXRlRXZlbnQ8UGFuR2VzdHVyZUhhbmRsZXJFdmVudFBheWxvYWQ+XG4pIHtcbiAgJ3dvcmtsZXQnO1xuICBsZXQgY2hhbmdlUGF5bG9hZDogUGFuR2VzdHVyZUNoYW5nZUV2ZW50UGF5bG9hZDtcbiAgaWYgKHByZXZpb3VzID09PSB1bmRlZmluZWQpIHtcbiAgICBjaGFuZ2VQYXlsb2FkID0ge1xuICAgICAgY2hhbmdlWDogY3VycmVudC50cmFuc2xhdGlvblgsXG4gICAgICBjaGFuZ2VZOiBjdXJyZW50LnRyYW5zbGF0aW9uWSxcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIGNoYW5nZVBheWxvYWQgPSB7XG4gICAgICBjaGFuZ2VYOiBjdXJyZW50LnRyYW5zbGF0aW9uWCAtIHByZXZpb3VzLnRyYW5zbGF0aW9uWCxcbiAgICAgIGNoYW5nZVk6IGN1cnJlbnQudHJhbnNsYXRpb25ZIC0gcHJldmlvdXMudHJhbnNsYXRpb25ZLFxuICAgIH07XG4gIH1cblxuICByZXR1cm4geyAuLi5jdXJyZW50LCAuLi5jaGFuZ2VQYXlsb2FkIH07XG59XG5cbmV4cG9ydCBjbGFzcyBQYW5HZXN0dXJlIGV4dGVuZHMgQ29udGlub3VzQmFzZUdlc3R1cmU8XG4gIFBhbkdlc3R1cmVIYW5kbGVyRXZlbnRQYXlsb2FkLFxuICBQYW5HZXN0dXJlQ2hhbmdlRXZlbnRQYXlsb2FkXG4+IHtcbiAgcHVibGljIGNvbmZpZzogQmFzZUdlc3R1cmVDb25maWcgJiBQYW5HZXN0dXJlQ29uZmlnID0ge307XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIHRoaXMuaGFuZGxlck5hbWUgPSAnUGFuR2VzdHVyZUhhbmRsZXInO1xuICB9XG5cbiAgYWN0aXZlT2Zmc2V0WShvZmZzZXQ6IG51bWJlciB8IG51bWJlcltdKSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkob2Zmc2V0KSkge1xuICAgICAgdGhpcy5jb25maWcuYWN0aXZlT2Zmc2V0WVN0YXJ0ID0gb2Zmc2V0WzBdO1xuICAgICAgdGhpcy5jb25maWcuYWN0aXZlT2Zmc2V0WUVuZCA9IG9mZnNldFsxXTtcbiAgICB9IGVsc2UgaWYgKG9mZnNldCA8IDApIHtcbiAgICAgIHRoaXMuY29uZmlnLmFjdGl2ZU9mZnNldFlTdGFydCA9IG9mZnNldDtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5jb25maWcuYWN0aXZlT2Zmc2V0WUVuZCA9IG9mZnNldDtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBhY3RpdmVPZmZzZXRYKG9mZnNldDogbnVtYmVyIHwgbnVtYmVyW10pIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShvZmZzZXQpKSB7XG4gICAgICB0aGlzLmNvbmZpZy5hY3RpdmVPZmZzZXRYU3RhcnQgPSBvZmZzZXRbMF07XG4gICAgICB0aGlzLmNvbmZpZy5hY3RpdmVPZmZzZXRYRW5kID0gb2Zmc2V0WzFdO1xuICAgIH0gZWxzZSBpZiAob2Zmc2V0IDwgMCkge1xuICAgICAgdGhpcy5jb25maWcuYWN0aXZlT2Zmc2V0WFN0YXJ0ID0gb2Zmc2V0O1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmNvbmZpZy5hY3RpdmVPZmZzZXRYRW5kID0gb2Zmc2V0O1xuICAgIH1cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGZhaWxPZmZzZXRZKG9mZnNldDogbnVtYmVyIHwgbnVtYmVyW10pIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShvZmZzZXQpKSB7XG4gICAgICB0aGlzLmNvbmZpZy5mYWlsT2Zmc2V0WVN0YXJ0ID0gb2Zmc2V0WzBdO1xuICAgICAgdGhpcy5jb25maWcuZmFpbE9mZnNldFlFbmQgPSBvZmZzZXRbMV07XG4gICAgfSBlbHNlIGlmIChvZmZzZXQgPCAwKSB7XG4gICAgICB0aGlzLmNvbmZpZy5mYWlsT2Zmc2V0WVN0YXJ0ID0gb2Zmc2V0O1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmNvbmZpZy5mYWlsT2Zmc2V0WUVuZCA9IG9mZnNldDtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBmYWlsT2Zmc2V0WChvZmZzZXQ6IG51bWJlciB8IG51bWJlcltdKSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkob2Zmc2V0KSkge1xuICAgICAgdGhpcy5jb25maWcuZmFpbE9mZnNldFhTdGFydCA9IG9mZnNldFswXTtcbiAgICAgIHRoaXMuY29uZmlnLmZhaWxPZmZzZXRYRW5kID0gb2Zmc2V0WzFdO1xuICAgIH0gZWxzZSBpZiAob2Zmc2V0IDwgMCkge1xuICAgICAgdGhpcy5jb25maWcuZmFpbE9mZnNldFhTdGFydCA9IG9mZnNldDtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5jb25maWcuZmFpbE9mZnNldFhFbmQgPSBvZmZzZXQ7XG4gICAgfVxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgbWluUG9pbnRlcnMobWluUG9pbnRlcnM6IG51bWJlcikge1xuICAgIHRoaXMuY29uZmlnLm1pblBvaW50ZXJzID0gbWluUG9pbnRlcnM7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBtYXhQb2ludGVycyhtYXhQb2ludGVyczogbnVtYmVyKSB7XG4gICAgdGhpcy5jb25maWcubWF4UG9pbnRlcnMgPSBtYXhQb2ludGVycztcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIG1pbkRpc3RhbmNlKGRpc3RhbmNlOiBudW1iZXIpIHtcbiAgICB0aGlzLmNvbmZpZy5taW5EaXN0ID0gZGlzdGFuY2U7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBtaW5WZWxvY2l0eSh2ZWxvY2l0eTogbnVtYmVyKSB7XG4gICAgdGhpcy5jb25maWcubWluVmVsb2NpdHkgPSB2ZWxvY2l0eTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIG1pblZlbG9jaXR5WCh2ZWxvY2l0eTogbnVtYmVyKSB7XG4gICAgdGhpcy5jb25maWcubWluVmVsb2NpdHlYID0gdmVsb2NpdHk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBtaW5WZWxvY2l0eVkodmVsb2NpdHk6IG51bWJlcikge1xuICAgIHRoaXMuY29uZmlnLm1pblZlbG9jaXR5WSA9IHZlbG9jaXR5O1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgYXZlcmFnZVRvdWNoZXModmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLmNvbmZpZy5hdmdUb3VjaGVzID0gdmFsdWU7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBlbmFibGVUcmFja3BhZFR3b0Zpbmdlckdlc3R1cmUodmFsdWU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLmNvbmZpZy5lbmFibGVUcmFja3BhZFR3b0Zpbmdlckdlc3R1cmUgPSB2YWx1ZTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIG9uQ2hhbmdlKFxuICAgIGNhbGxiYWNrOiAoXG4gICAgICBldmVudDogR2VzdHVyZVVwZGF0ZUV2ZW50PFxuICAgICAgICBQYW5HZXN0dXJlSGFuZGxlckV2ZW50UGF5bG9hZCAmIFBhbkdlc3R1cmVDaGFuZ2VFdmVudFBheWxvYWRcbiAgICAgID5cbiAgICApID0+IHZvaWRcbiAgKSB7XG4gICAgLy8gQHRzLWlnbm9yZSBUUyBiZWluZyBvdmVycHJvdGVjdGl2ZSwgUGFuR2VzdHVyZUhhbmRsZXJFdmVudFBheWxvYWQgaXMgUmVjb3JkXG4gICAgdGhpcy5oYW5kbGVycy5jaGFuZ2VFdmVudENhbGN1bGF0b3IgPSBjaGFuZ2VFdmVudENhbGN1bGF0b3I7XG4gICAgcmV0dXJuIHN1cGVyLm9uQ2hhbmdlKGNhbGxiYWNrKTtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBQYW5HZXN0dXJlVHlwZSA9IEluc3RhbmNlVHlwZTx0eXBlb2YgUGFuR2VzdHVyZT47XG4iXX0=