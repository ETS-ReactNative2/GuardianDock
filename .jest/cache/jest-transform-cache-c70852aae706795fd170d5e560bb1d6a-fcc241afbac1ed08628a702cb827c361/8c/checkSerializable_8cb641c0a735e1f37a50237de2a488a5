a1bda43cb2c5017ff021832cf619b94c
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = checkSerializable;

var checkSerializableWithoutCircularReference = function checkSerializableWithoutCircularReference(o, seen, location) {
  if (o === undefined || o === null || typeof o === 'boolean' || typeof o === 'number' || typeof o === 'string') {
    return {
      serializable: true
    };
  }

  if (Object.prototype.toString.call(o) !== '[object Object]' && !Array.isArray(o)) {
    return {
      serializable: false,
      location: location,
      reason: typeof o === 'function' ? 'Function' : String(o)
    };
  }

  if (seen.has(o)) {
    return {
      serializable: false,
      reason: 'Circular reference',
      location: location
    };
  }

  seen.add(o);

  if (Array.isArray(o)) {
    for (var i = 0; i < o.length; i++) {
      var childResult = checkSerializableWithoutCircularReference(o[i], new Set(seen), [].concat((0, _toConsumableArray2.default)(location), [i]));

      if (!childResult.serializable) {
        return childResult;
      }
    }
  } else {
    for (var key in o) {
      var _childResult = checkSerializableWithoutCircularReference(o[key], new Set(seen), [].concat((0, _toConsumableArray2.default)(location), [key]));

      if (!_childResult.serializable) {
        return _childResult;
      }
    }
  }

  return {
    serializable: true
  };
};

function checkSerializable(o) {
  return checkSerializableWithoutCircularReference(o, new Set(), []);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQSxJQUFNQSx5Q0FBeUMsR0FBRyxTQUE1Q0EseUNBQTRDLENBQ2hEQyxDQURnRCxFQUVoREMsSUFGZ0QsRUFHaERDLFFBSGdELEVBVXpDO0FBQ1AsTUFDRUYsQ0FBQyxLQUFLRyxTQUFOSCxJQUNBQSxDQUFDLEtBQUssSUFETkEsSUFFQSxPQUFPQSxDQUFQLEtBQWEsU0FGYkEsSUFHQSxPQUFPQSxDQUFQLEtBQWEsUUFIYkEsSUFJQSxPQUFPQSxDQUFQLEtBQWEsUUFMZixFQU1FO0FBQ0EsV0FBTztBQUFFSSxrQkFBWSxFQUFFO0FBQWhCLEtBQVA7QUFDRDs7QUFFRCxNQUNFQyxNQUFNLENBQUNDLFNBQVBELENBQWlCRSxRQUFqQkYsQ0FBMEJHLElBQTFCSCxDQUErQkwsQ0FBL0JLLE1BQXNDLGlCQUF0Q0EsSUFDQSxDQUFDSSxLQUFLLENBQUNDLE9BQU5ELENBQWNULENBQWRTLENBRkgsRUFHRTtBQUNBLFdBQU87QUFDTEwsa0JBQVksRUFBRSxLQURUO0FBRUxGLGNBRkssRUFFTEEsUUFGSztBQUdMUyxZQUFNLEVBQUUsT0FBT1gsQ0FBUCxLQUFhLFVBQWIsR0FBMEIsVUFBMUIsR0FBdUNZLE1BQU0sQ0FBQ1osQ0FBRDtBQUhoRCxLQUFQO0FBS0Q7O0FBRUQsTUFBSUMsSUFBSSxDQUFDWSxHQUFMWixDQUFTRCxDQUFUQyxDQUFKLEVBQWlCO0FBQ2YsV0FBTztBQUNMRyxrQkFBWSxFQUFFLEtBRFQ7QUFFTE8sWUFBTSxFQUFFLG9CQUZIO0FBR0xUO0FBSEssS0FBUDtBQUtEOztBQUVERCxNQUFJLENBQUNhLEdBQUxiLENBQVNELENBQVRDOztBQUVBLE1BQUlRLEtBQUssQ0FBQ0MsT0FBTkQsQ0FBY1QsQ0FBZFMsQ0FBSixFQUFzQjtBQUNwQixTQUFLLElBQUlNLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdmLENBQUMsQ0FBQ2dCLE1BQXRCLEVBQThCRCxDQUFDLEVBQS9CLEVBQW1DO0FBQ2pDLFVBQU1FLFdBQVcsR0FBR2xCLHlDQUF5QyxDQUMzREMsQ0FBQyxDQUFDZSxDQUFELENBRDBELEVBRTNELElBQUlHLEdBQUosQ0FBYWpCLElBQWIsQ0FGMkQsNkNBR3ZEQyxRQUh1RCxJQUc3Q2EsQ0FINkMsR0FBN0Q7O0FBTUEsVUFBSSxDQUFDRSxXQUFXLENBQUNiLFlBQWpCLEVBQStCO0FBQzdCLGVBQU9hLFdBQVA7QUFDRDtBQUNGO0FBWEgsU0FZTztBQUNMLFNBQUssSUFBTUUsR0FBWCxJQUFrQm5CLENBQWxCLEVBQXFCO0FBQ25CLFVBQU1pQixZQUFXLEdBQUdsQix5Q0FBeUMsQ0FDM0RDLENBQUMsQ0FBQ21CLEdBQUQsQ0FEMEQsRUFFM0QsSUFBSUQsR0FBSixDQUFhakIsSUFBYixDQUYyRCw2Q0FHdkRDLFFBSHVELElBRzdDaUIsR0FINkMsR0FBN0Q7O0FBTUEsVUFBSSxDQUFDRixZQUFXLENBQUNiLFlBQWpCLEVBQStCO0FBQzdCLGVBQU9hLFlBQVA7QUFDRDtBQUNGO0FBQ0Y7O0FBRUQsU0FBTztBQUFFYixnQkFBWSxFQUFFO0FBQWhCLEdBQVA7QUFwRUY7O0FBdUVlLFNBQVNnQixpQkFBVCxDQUEyQnBCLENBQTNCLEVBQXNEO0FBQ25FLFNBQU9ELHlDQUF5QyxDQUFDQyxDQUFELEVBQUksSUFBSWtCLEdBQUosRUFBSixFQUFvQixFQUFwQixDQUFoRDtBQUNEIiwibmFtZXMiOlsiY2hlY2tTZXJpYWxpemFibGVXaXRob3V0Q2lyY3VsYXJSZWZlcmVuY2UiLCJvIiwic2VlbiIsImxvY2F0aW9uIiwidW5kZWZpbmVkIiwic2VyaWFsaXphYmxlIiwiT2JqZWN0IiwicHJvdG90eXBlIiwidG9TdHJpbmciLCJjYWxsIiwiQXJyYXkiLCJpc0FycmF5IiwicmVhc29uIiwiU3RyaW5nIiwiaGFzIiwiYWRkIiwiaSIsImxlbmd0aCIsImNoaWxkUmVzdWx0IiwiU2V0Iiwia2V5IiwiY2hlY2tTZXJpYWxpemFibGUiXSwic291cmNlcyI6WyJjaGVja1NlcmlhbGl6YWJsZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY2hlY2tTZXJpYWxpemFibGVXaXRob3V0Q2lyY3VsYXJSZWZlcmVuY2UgPSAoXG4gIG86IHsgW2tleTogc3RyaW5nXTogYW55IH0sXG4gIHNlZW46IFNldDxhbnk+LFxuICBsb2NhdGlvbjogKHN0cmluZyB8IG51bWJlcilbXVxuKTpcbiAgfCB7IHNlcmlhbGl6YWJsZTogdHJ1ZSB9XG4gIHwge1xuICAgICAgc2VyaWFsaXphYmxlOiBmYWxzZTtcbiAgICAgIGxvY2F0aW9uOiAoc3RyaW5nIHwgbnVtYmVyKVtdO1xuICAgICAgcmVhc29uOiBzdHJpbmc7XG4gICAgfSA9PiB7XG4gIGlmIChcbiAgICBvID09PSB1bmRlZmluZWQgfHxcbiAgICBvID09PSBudWxsIHx8XG4gICAgdHlwZW9mIG8gPT09ICdib29sZWFuJyB8fFxuICAgIHR5cGVvZiBvID09PSAnbnVtYmVyJyB8fFxuICAgIHR5cGVvZiBvID09PSAnc3RyaW5nJ1xuICApIHtcbiAgICByZXR1cm4geyBzZXJpYWxpemFibGU6IHRydWUgfTtcbiAgfVxuXG4gIGlmIChcbiAgICBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykgIT09ICdbb2JqZWN0IE9iamVjdF0nICYmXG4gICAgIUFycmF5LmlzQXJyYXkobylcbiAgKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHNlcmlhbGl6YWJsZTogZmFsc2UsXG4gICAgICBsb2NhdGlvbixcbiAgICAgIHJlYXNvbjogdHlwZW9mIG8gPT09ICdmdW5jdGlvbicgPyAnRnVuY3Rpb24nIDogU3RyaW5nKG8pLFxuICAgIH07XG4gIH1cblxuICBpZiAoc2Vlbi5oYXMobykpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc2VyaWFsaXphYmxlOiBmYWxzZSxcbiAgICAgIHJlYXNvbjogJ0NpcmN1bGFyIHJlZmVyZW5jZScsXG4gICAgICBsb2NhdGlvbixcbiAgICB9O1xuICB9XG5cbiAgc2Vlbi5hZGQobyk7XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkobykpIHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG8ubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IGNoaWxkUmVzdWx0ID0gY2hlY2tTZXJpYWxpemFibGVXaXRob3V0Q2lyY3VsYXJSZWZlcmVuY2UoXG4gICAgICAgIG9baV0sXG4gICAgICAgIG5ldyBTZXQ8YW55PihzZWVuKSxcbiAgICAgICAgWy4uLmxvY2F0aW9uLCBpXVxuICAgICAgKTtcblxuICAgICAgaWYgKCFjaGlsZFJlc3VsdC5zZXJpYWxpemFibGUpIHtcbiAgICAgICAgcmV0dXJuIGNoaWxkUmVzdWx0O1xuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBvKSB7XG4gICAgICBjb25zdCBjaGlsZFJlc3VsdCA9IGNoZWNrU2VyaWFsaXphYmxlV2l0aG91dENpcmN1bGFyUmVmZXJlbmNlKFxuICAgICAgICBvW2tleV0sXG4gICAgICAgIG5ldyBTZXQ8YW55PihzZWVuKSxcbiAgICAgICAgWy4uLmxvY2F0aW9uLCBrZXldXG4gICAgICApO1xuXG4gICAgICBpZiAoIWNoaWxkUmVzdWx0LnNlcmlhbGl6YWJsZSkge1xuICAgICAgICByZXR1cm4gY2hpbGRSZXN1bHQ7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHsgc2VyaWFsaXphYmxlOiB0cnVlIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjaGVja1NlcmlhbGl6YWJsZShvOiB7IFtrZXk6IHN0cmluZ106IGFueSB9KSB7XG4gIHJldHVybiBjaGVja1NlcmlhbGl6YWJsZVdpdGhvdXRDaXJjdWxhclJlZmVyZW5jZShvLCBuZXcgU2V0PGFueT4oKSwgW10pO1xufVxuIl19