{"version":3,"mappings":"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","names":["DURATION_SHORT","DURATION_MEDIUM","DURATION_LONG","Snackbar","visible","action","duration","onDismiss","children","wrapperStyle","style","theme","rest","React","useRef","Animated","Value","opacity","current","useState","hidden","setHidden","hideTimeout","undefined","scale","animation","useEffect","clearTimeout","useLayoutEffect","timing","toValue","useNativeDriver","start","finished","isInfinity","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","setTimeout","colors","roundness","actionStyle","actionLabel","label","onPressAction","onPress","actionProps","_reactNative","pointerEvents","styles","wrapper","_Surface","accessibilityLiveRegion","container","borderRadius","transform","interpolate","inputRange","outputRange","backgroundColor","onSurface","_Text","content","marginRight","color","surface","_Button","button","accent","compact","mode","StyleSheet","create","position","bottom","width","elevation","flexDirection","justifyContent","alignItems","margin","marginLeft","marginVertical","flexWrap","flex","marginHorizontal"],"sources":["Snackbar.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  SafeAreaView,\n  StyleProp,\n  StyleSheet,\n  ViewStyle,\n  View,\n} from 'react-native';\n\nimport Button from './Button';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\nimport { withTheme } from '../core/theming';\n\nexport type SnackbarProps = React.ComponentProps<typeof Surface> & {\n  /**\n   * Whether the Snackbar is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Label and press callback for the action button. It should contain the following properties:\n   * - `label` - Label of the action button\n   * - `onPress` - Callback that is called when action button is pressed.\n   */\n  action?: Omit<React.ComponentProps<typeof Button>, 'children'> & {\n    label: string;\n  };\n  /**\n   * The duration for which the Snackbar is shown.\n   */\n  duration?: number;\n  /**\n   * Callback called when Snackbar is dismissed. The `visible` prop needs to be updated when this is called.\n   */\n  onDismiss: () => void;\n  /**\n   * Text content of the Snackbar.\n   */\n  children: React.ReactNode;\n  /**\n   * Style for the wrapper of the snackbar\n   */\n  wrapperStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  ref?: React.RefObject<View>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst DURATION_SHORT = 4000;\nconst DURATION_MEDIUM = 7000;\nconst DURATION_LONG = 10000;\n\n/**\n * Snackbars provide brief feedback about an operation through a message at the bottom of the screen.\n * Snackbar by default uses `onSurface` color from theme.\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/snackbar.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View, StyleSheet } from 'react-native';\n * import { Button, Snackbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const onToggleSnackBar = () => setVisible(!visible);\n *\n *   const onDismissSnackBar = () => setVisible(false);\n *\n *   return (\n *     <View style={styles.container}>\n *       <Button onPress={onToggleSnackBar}>{visible ? 'Hide' : 'Show'}</Button>\n *       <Snackbar\n *         visible={visible}\n *         onDismiss={onDismissSnackBar}\n *         action={{\n *           label: 'Undo',\n *           onPress: () => {\n *             // Do something\n *           },\n *         }}>\n *         Hey there! I'm a Snackbar.\n *       </Snackbar>\n *     </View>\n *   );\n * };\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     justifyContent: 'space-between',\n *   },\n * });\n *\n * export default MyComponent;\n * ```\n */\nconst Snackbar = ({\n  visible,\n  action,\n  duration = DURATION_MEDIUM,\n  onDismiss,\n  children,\n  wrapperStyle,\n  style,\n  theme,\n  ...rest\n}: SnackbarProps) => {\n  const { current: opacity } = React.useRef<Animated.Value>(\n    new Animated.Value(0.0)\n  );\n  const [hidden, setHidden] = React.useState<boolean>(!visible);\n\n  const hideTimeout = React.useRef<NodeJS.Timeout | undefined>(undefined);\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    return () => {\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n    };\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (visible) {\n      // show\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n      setHidden(false);\n      Animated.timing(opacity, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start(({ finished }) => {\n        if (finished) {\n          const isInfinity =\n            duration === Number.POSITIVE_INFINITY ||\n            duration === Number.NEGATIVE_INFINITY;\n\n          if (finished && !isInfinity) {\n            hideTimeout.current = (setTimeout(\n              onDismiss,\n              duration\n            ) as unknown) as NodeJS.Timeout;\n          }\n        }\n      });\n    } else {\n      // hide\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n\n      Animated.timing(opacity, {\n        toValue: 0,\n        duration: 100 * scale,\n        useNativeDriver: true,\n      }).start(({ finished }) => {\n        if (finished) setHidden(true);\n      });\n    }\n  }, [visible, duration, opacity, scale, onDismiss]);\n\n  const { colors, roundness } = theme;\n\n  if (hidden) return null;\n\n  const {\n    style: actionStyle,\n    label: actionLabel,\n    onPress: onPressAction,\n    ...actionProps\n  } = action || {};\n\n  return (\n    <SafeAreaView\n      pointerEvents=\"box-none\"\n      style={[styles.wrapper, wrapperStyle]}\n    >\n      <Surface\n        pointerEvents=\"box-none\"\n        accessibilityLiveRegion=\"polite\"\n        style={\n          [\n            styles.container,\n            {\n              borderRadius: roundness,\n              opacity: opacity,\n              transform: [\n                {\n                  scale: visible\n                    ? opacity.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [0.9, 1],\n                      })\n                    : 1,\n                },\n              ],\n            },\n            { backgroundColor: colors.onSurface },\n            style,\n          ] as StyleProp<ViewStyle>\n        }\n        {...rest}\n      >\n        <Text\n          style={[\n            styles.content,\n            { marginRight: action ? 0 : 16, color: colors.surface },\n          ]}\n        >\n          {children}\n        </Text>\n        {action ? (\n          <Button\n            onPress={() => {\n              onPressAction?.();\n              onDismiss();\n            }}\n            style={[styles.button, actionStyle]}\n            color={colors.accent}\n            compact\n            mode=\"text\"\n            {...actionProps}\n          >\n            {actionLabel}\n          </Button>\n        ) : null}\n      </Surface>\n    </SafeAreaView>\n  );\n};\n\n/**\n * Show the Snackbar for a short duration.\n */\nSnackbar.DURATION_SHORT = DURATION_SHORT;\n\n/**\n * Show the Snackbar for a medium duration.\n */\nSnackbar.DURATION_MEDIUM = DURATION_MEDIUM;\n\n/**\n * Show the Snackbar for a long duration.\n */\nSnackbar.DURATION_LONG = DURATION_LONG;\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n  },\n  container: {\n    elevation: 6,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: 8,\n    borderRadius: 4,\n  },\n  content: {\n    marginLeft: 16,\n    marginVertical: 14,\n    flexWrap: 'wrap',\n    flex: 1,\n  },\n  button: {\n    marginHorizontal: 8,\n    marginVertical: 6,\n  },\n});\n\nexport default withTheme(Snackbar);\n"]}