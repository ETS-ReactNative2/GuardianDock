{"version":3,"mappings":"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","names":["getContrastingColor","FAB","small","icon","label","accessibilityLabel","accessibilityState","animated","customColor","color","disabled","onPress","onLongPress","theme","style","visible","uppercase","loading","testID","rest","React","useRef","Animated","Value","visibility","current","scale","animation","useEffect","timing","toValue","duration","useNativeDriver","start","IconComponent","CrossFadeIcon","Icon","disabledColor","dark","white","black","alpha","rgb","string","StyleSheet","flatten","backgroundColor","colors","accent","foregroundColor","rippleColor","_Surface","opacity","transform","styles","container","pointerEvents","_TouchableRipple","borderless","accessibilityTraits","accessibilityComponentType","accessibilityRole","touchable","_reactNative","content","extended","standard","source","size","_ActivityIndicator","_Text","selectable","uppercaseLabel","fonts","medium","create","borderRadius","elevation","height","width","paddingHorizontal","flexDirection","alignItems","justifyContent","marginHorizontal","textTransform","FABWithTheme"],"sources":["FAB.tsx"],"sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport {\n  Animated,\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  AccessibilityState,\n} from 'react-native';\nimport ActivityIndicator from '../ActivityIndicator';\nimport Surface from '../Surface';\nimport CrossFadeIcon from '../CrossFadeIcon';\nimport Icon, { IconSource } from '../Icon';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport getContrastingColor from '../../utils/getContrastingColor';\nimport type { $RemoveChildren } from '../../types';\n\ngetContrastingColor;\n\ntype Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource;\n  /**\n   * Optional label for extended `FAB`.\n   */\n  label?: string;\n  /**\n   * Make the label text uppercased.\n   */\n  uppercase?: boolean;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityState?: AccessibilityState;\n  /**\n   * Whether an icon change is animated.\n   */\n  animated?: boolean;\n  /**\n   *  Whether FAB is mini-sized, used to create visual continuity with other elements. This has no effect if `label` is specified.\n   */\n  small?: boolean;\n  /**\n   * Custom color for the icon and label of the `FAB`.\n   */\n  color?: string;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  testID?: string;\n};\n\n/**\n * A floating action button represents the primary action in an application.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/fab-1.png\" />\n *   <img src=\"screenshots/fab-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { FAB } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <FAB\n *     style={styles.fab}\n *     small\n *     icon=\"plus\"\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * const styles = StyleSheet.create({\n *   fab: {\n *     position: 'absolute',\n *     margin: 16,\n *     right: 0,\n *     bottom: 0,\n *   },\n * })\n *\n * export default MyComponent;\n * ```\n */\nconst FAB = ({\n  small,\n  icon,\n  label,\n  accessibilityLabel = label,\n  accessibilityState,\n  animated = true,\n  color: customColor,\n  disabled,\n  onPress,\n  onLongPress,\n  theme,\n  style,\n  visible = true,\n  uppercase = true,\n  loading,\n  testID,\n  ...rest\n}: Props) => {\n  const { current: visibility } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n\n  const IconComponent = animated ? CrossFadeIcon : Icon;\n\n  const disabledColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  const {\n    backgroundColor = disabled ? disabledColor : theme.colors.accent,\n  } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n  let foregroundColor;\n\n  if (typeof customColor !== 'undefined') {\n    foregroundColor = customColor;\n  } else if (disabled) {\n    foregroundColor = color(theme.dark ? white : black)\n      .alpha(0.32)\n      .rgb()\n      .string();\n  } else {\n    foregroundColor = getContrastingColor(\n      backgroundColor,\n      white,\n      'rgba(0, 0, 0, .54)'\n    );\n  }\n\n  const rippleColor = color(foregroundColor).alpha(0.32).rgb().string();\n\n  return (\n    <Surface\n      {...rest}\n      style={\n        [\n          {\n            backgroundColor,\n            opacity: visibility,\n            transform: [\n              {\n                scale: visibility,\n              },\n            ],\n          },\n          styles.container,\n          disabled && styles.disabled,\n          style,\n        ] as StyleProp<ViewStyle>\n      }\n      pointerEvents={visible ? 'auto' : 'none'}\n    >\n      <TouchableRipple\n        borderless\n        onPress={onPress}\n        onLongPress={onLongPress}\n        rippleColor={rippleColor}\n        disabled={disabled}\n        accessibilityLabel={accessibilityLabel}\n        // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n        accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n        accessibilityComponentType=\"button\"\n        accessibilityRole=\"button\"\n        accessibilityState={{ ...accessibilityState, disabled }}\n        style={styles.touchable}\n        testID={testID}\n      >\n        <View\n          style={[\n            styles.content,\n            label ? styles.extended : small ? styles.small : styles.standard,\n          ]}\n          pointerEvents=\"none\"\n        >\n          {icon && loading !== true ? (\n            <IconComponent source={icon} size={24} color={foregroundColor} />\n          ) : null}\n          {loading ? (\n            <ActivityIndicator size={18} color={foregroundColor} />\n          ) : null}\n          {label ? (\n            <Text\n              selectable={false}\n              style={[\n                styles.label,\n                uppercase && styles.uppercaseLabel,\n                { color: foregroundColor, ...theme.fonts.medium },\n              ]}\n            >\n              {label}\n            </Text>\n          ) : null}\n        </View>\n      </TouchableRipple>\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 28,\n    elevation: 6,\n  },\n  touchable: {\n    borderRadius: 28,\n  },\n  standard: {\n    height: 56,\n    width: 56,\n  },\n  small: {\n    height: 40,\n    width: 40,\n  },\n  extended: {\n    height: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    marginHorizontal: 8,\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  disabled: {\n    elevation: 0,\n  },\n});\n\nexport default withTheme(FAB);\n\n// @component-docs ignore-next-line\nconst FABWithTheme = withTheme(FAB);\n// @component-docs ignore-next-line\nexport { FABWithTheme as FAB };\n"]}