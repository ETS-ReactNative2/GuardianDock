{"version":3,"mappings":";;;;;;;AAIA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEe,SAASA,aAAT,CACbC,GADa,EAEb;AACAC,OAAK,CAACC,SAAND,CAAgB,YAAM;AACpB,QAAME,YAAY,GAAGC,yBAAYC,gBAAZD,CACnB,mBADmBA,EAEnB,YAAM;AACJ,UAAME,UAAU,GAAGN,GAAG,CAACO,OAAvB;;AAEA,UAAID,UAAU,IAAI,IAAlB,EAAwB;AACtB,eAAO,KAAP;AACD;;AAED,UAAIA,UAAU,CAACE,SAAXF,EAAJ,EAA4B;AAC1BA,kBAAU,CAACG,MAAXH;AAEA,eAAO,IAAP;AACD;;AAED,aAAO,KAAP;AAfiB,MAArB;;AAmBA,WAAO;AAAA,aAAMH,YAAY,CAACO,MAAbP,EAAN;AAAA,KAAP;AApBF,KAqBG,CAACH,GAAD,CArBHC;AAsBD","names":["useBackButton","ref","React","useEffect","subscription","BackHandler","addEventListener","navigation","current","canGoBack","goBack","remove"],"sources":["useBackButton.tsx"],"sourcesContent":["import type {\n  NavigationContainerRef,\n  ParamListBase,\n} from '@react-navigation/core';\nimport * as React from 'react';\nimport { BackHandler } from 'react-native';\n\nexport default function useBackButton(\n  ref: React.RefObject<NavigationContainerRef<ParamListBase>>\n) {\n  React.useEffect(() => {\n    const subscription = BackHandler.addEventListener(\n      'hardwareBackPress',\n      () => {\n        const navigation = ref.current;\n\n        if (navigation == null) {\n          return false;\n        }\n\n        if (navigation.canGoBack()) {\n          navigation.goBack();\n\n          return true;\n        }\n\n        return false;\n      }\n    );\n\n    return () => subscription.remove();\n  }, [ref]);\n}\n"]}