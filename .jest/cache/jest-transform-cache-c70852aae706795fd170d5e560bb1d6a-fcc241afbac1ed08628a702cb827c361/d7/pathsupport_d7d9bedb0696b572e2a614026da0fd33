7bcc329e836f587eb544663eeb7d3074
'use strict';

var androidScaleSuffix = {
  '0.75': 'ldpi',
  '1': 'mdpi',
  '1.5': 'hdpi',
  '2': 'xhdpi',
  '3': 'xxhdpi',
  '4': 'xxxhdpi'
};

function getAndroidAssetSuffix(scale) {
  if (scale.toString() in androidScaleSuffix) {
    return androidScaleSuffix[scale.toString()];
  }

  throw new Error('no such scale ' + scale.toString());
}

var drawableFileTypes = new Set(['gif', 'jpeg', 'jpg', 'png', 'svg', 'webp', 'xml']);

function getAndroidResourceFolderName(asset, scale) {
  if (!drawableFileTypes.has(asset.type)) {
    return 'raw';
  }

  var suffix = getAndroidAssetSuffix(scale);

  if (!suffix) {
    throw new Error("Don't know which android drawable suffix to use for scale: " + scale + '\nAsset: ' + JSON.stringify(asset, null, '\t') + '\nPossible scales are:' + JSON.stringify(androidScaleSuffix, null, '\t'));
  }

  return 'drawable-' + suffix;
}

function getAndroidResourceIdentifier(asset) {
  return (getBasePath(asset) + '/' + asset.name).toLowerCase().replace(/\//g, '_').replace(/([^a-z0-9_])/g, '').replace(/^assets_/, '');
}

function getBasePath(asset) {
  var basePath = asset.httpServerLocation;
  return basePath.startsWith('/') ? basePath.substr(1) : basePath;
}

module.exports = {
  getAndroidResourceFolderName: getAndroidResourceFolderName,
  getAndroidResourceIdentifier: getAndroidResourceIdentifier,
  getBasePath: getBasePath
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhdGgtc3VwcG9ydC5qcyJdLCJuYW1lcyI6WyJhbmRyb2lkU2NhbGVTdWZmaXgiLCJnZXRBbmRyb2lkQXNzZXRTdWZmaXgiLCJzY2FsZSIsInRvU3RyaW5nIiwiRXJyb3IiLCJkcmF3YWJsZUZpbGVUeXBlcyIsIlNldCIsImdldEFuZHJvaWRSZXNvdXJjZUZvbGRlck5hbWUiLCJhc3NldCIsImhhcyIsInR5cGUiLCJzdWZmaXgiLCJKU09OIiwic3RyaW5naWZ5IiwiZ2V0QW5kcm9pZFJlc291cmNlSWRlbnRpZmllciIsImdldEJhc2VQYXRoIiwibmFtZSIsInRvTG93ZXJDYXNlIiwicmVwbGFjZSIsImJhc2VQYXRoIiwiaHR0cFNlcnZlckxvY2F0aW9uIiwic3RhcnRzV2l0aCIsInN1YnN0ciIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQVVBOztBQUlBLElBQU1BLGtCQUFrQixHQUFHO0FBQ3pCLFVBQVEsTUFEaUI7QUFFekIsT0FBSyxNQUZvQjtBQUd6QixTQUFPLE1BSGtCO0FBSXpCLE9BQUssT0FKb0I7QUFLekIsT0FBSyxRQUxvQjtBQU16QixPQUFLO0FBTm9CLENBQTNCOztBQWFBLFNBQVNDLHFCQUFULENBQStCQyxLQUEvQixFQUFzRDtBQUNwRCxNQUFJQSxLQUFLLENBQUNDLFFBQU4sTUFBb0JILGtCQUF4QixFQUE0QztBQUMxQyxXQUFPQSxrQkFBa0IsQ0FBQ0UsS0FBSyxDQUFDQyxRQUFOLEVBQUQsQ0FBekI7QUFDRDs7QUFFRCxRQUFNLElBQUlDLEtBQUosQ0FBVSxtQkFBbUJGLEtBQUssQ0FBQ0MsUUFBTixFQUE3QixDQUFOO0FBQ0Q7O0FBR0QsSUFBTUUsaUJBQWlCLEdBQUcsSUFBSUMsR0FBSixDQUFRLENBQ2hDLEtBRGdDLEVBRWhDLE1BRmdDLEVBR2hDLEtBSGdDLEVBSWhDLEtBSmdDLEVBS2hDLEtBTGdDLEVBTWhDLE1BTmdDLEVBT2hDLEtBUGdDLENBQVIsQ0FBMUI7O0FBVUEsU0FBU0MsNEJBQVQsQ0FDRUMsS0FERixFQUVFTixLQUZGLEVBR3FDO0FBQ25DLE1BQUksQ0FBQ0csaUJBQWlCLENBQUNJLEdBQWxCLENBQXNCRCxLQUFLLENBQUNFLElBQTVCLENBQUwsRUFBd0M7QUFDdEMsV0FBTyxLQUFQO0FBQ0Q7O0FBQ0QsTUFBTUMsTUFBTSxHQUFHVixxQkFBcUIsQ0FBQ0MsS0FBRCxDQUFwQzs7QUFDQSxNQUFJLENBQUNTLE1BQUwsRUFBYTtBQUNYLFVBQU0sSUFBSVAsS0FBSixDQUNKLGdFQUNFRixLQURGLEdBRUUsV0FGRixHQUdFVSxJQUFJLENBQUNDLFNBQUwsQ0FBZUwsS0FBZixFQUFzQixJQUF0QixFQUE0QixJQUE1QixDQUhGLEdBSUUsd0JBSkYsR0FLRUksSUFBSSxDQUFDQyxTQUFMLENBQWViLGtCQUFmLEVBQW1DLElBQW5DLEVBQXlDLElBQXpDLENBTkUsQ0FBTjtBQVFEOztBQUNELFNBQU8sY0FBY1csTUFBckI7QUFDRDs7QUFFRCxTQUFTRyw0QkFBVCxDQUFzQ04sS0FBdEMsRUFBb0U7QUFDbEUsU0FBTyxDQUFDTyxXQUFXLENBQUNQLEtBQUQsQ0FBWCxHQUFxQixHQUFyQixHQUEyQkEsS0FBSyxDQUFDUSxJQUFsQyxFQUNKQyxXQURJLEdBRUpDLE9BRkksQ0FFSSxLQUZKLEVBRVcsR0FGWCxFQUdKQSxPQUhJLENBR0ksZUFISixFQUdxQixFQUhyQixFQUlKQSxPQUpJLENBSUksVUFKSixFQUlnQixFQUpoQixDQUFQO0FBS0Q7O0FBRUQsU0FBU0gsV0FBVCxDQUFxQlAsS0FBckIsRUFBbUQ7QUFDakQsTUFBTVcsUUFBUSxHQUFHWCxLQUFLLENBQUNZLGtCQUF2QjtBQUNBLFNBQU9ELFFBQVEsQ0FBQ0UsVUFBVCxDQUFvQixHQUFwQixJQUEyQkYsUUFBUSxDQUFDRyxNQUFULENBQWdCLENBQWhCLENBQTNCLEdBQWdESCxRQUF2RDtBQUNEOztBQUVESSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDZmpCLEVBQUFBLDRCQUE0QixFQUE1QkEsNEJBRGU7QUFFZk8sRUFBQUEsNEJBQTRCLEVBQTVCQSw0QkFGZTtBQUdmQyxFQUFBQSxXQUFXLEVBQVhBO0FBSGUsQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIEBmbG93IHN0cmljdFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHR5cGUge1BhY2thZ2VyQXNzZXR9IGZyb20gJy4vcmVnaXN0cnkuanMnO1xuXG5jb25zdCBhbmRyb2lkU2NhbGVTdWZmaXggPSB7XG4gICcwLjc1JzogJ2xkcGknLFxuICAnMSc6ICdtZHBpJyxcbiAgJzEuNSc6ICdoZHBpJyxcbiAgJzInOiAneGhkcGknLFxuICAnMyc6ICd4eGhkcGknLFxuICAnNCc6ICd4eHhoZHBpJyxcbn07XG5cbi8qKlxuICogRklYTUU6IHVzaW5nIG51bWJlciB0byByZXByZXNlbnQgZGlzY3JldGUgc2NhbGUgbnVtYmVycyBpcyBmcmFnaWxlIGluIGVzc2VuY2UgYmVjYXVzZSBvZlxuICogZmxvYXRpbmcgcG9pbnQgbnVtYmVycyBpbXByZWNpc2lvbi5cbiAqL1xuZnVuY3Rpb24gZ2V0QW5kcm9pZEFzc2V0U3VmZml4KHNjYWxlOiBudW1iZXIpOiBzdHJpbmcge1xuICBpZiAoc2NhbGUudG9TdHJpbmcoKSBpbiBhbmRyb2lkU2NhbGVTdWZmaXgpIHtcbiAgICByZXR1cm4gYW5kcm9pZFNjYWxlU3VmZml4W3NjYWxlLnRvU3RyaW5nKCldO1xuICB9XG5cbiAgdGhyb3cgbmV3IEVycm9yKCdubyBzdWNoIHNjYWxlICcgKyBzY2FsZS50b1N0cmluZygpKTtcbn1cblxuLy8gU2VlIGh0dHBzOi8vZGV2ZWxvcGVyLmFuZHJvaWQuY29tL2d1aWRlL3RvcGljcy9yZXNvdXJjZXMvZHJhd2FibGUtcmVzb3VyY2UuaHRtbFxuY29uc3QgZHJhd2FibGVGaWxlVHlwZXMgPSBuZXcgU2V0KFtcbiAgJ2dpZicsXG4gICdqcGVnJyxcbiAgJ2pwZycsXG4gICdwbmcnLFxuICAnc3ZnJyxcbiAgJ3dlYnAnLFxuICAneG1sJyxcbl0pO1xuXG5mdW5jdGlvbiBnZXRBbmRyb2lkUmVzb3VyY2VGb2xkZXJOYW1lKFxuICBhc3NldDogUGFja2FnZXJBc3NldCxcbiAgc2NhbGU6IG51bWJlcixcbik6IHN0cmluZyB8ICRURU1QT1JBUlkkc3RyaW5nPCdyYXcnPiB7XG4gIGlmICghZHJhd2FibGVGaWxlVHlwZXMuaGFzKGFzc2V0LnR5cGUpKSB7XG4gICAgcmV0dXJuICdyYXcnO1xuICB9XG4gIGNvbnN0IHN1ZmZpeCA9IGdldEFuZHJvaWRBc3NldFN1ZmZpeChzY2FsZSk7XG4gIGlmICghc3VmZml4KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgXCJEb24ndCBrbm93IHdoaWNoIGFuZHJvaWQgZHJhd2FibGUgc3VmZml4IHRvIHVzZSBmb3Igc2NhbGU6IFwiICtcbiAgICAgICAgc2NhbGUgK1xuICAgICAgICAnXFxuQXNzZXQ6ICcgK1xuICAgICAgICBKU09OLnN0cmluZ2lmeShhc3NldCwgbnVsbCwgJ1xcdCcpICtcbiAgICAgICAgJ1xcblBvc3NpYmxlIHNjYWxlcyBhcmU6JyArXG4gICAgICAgIEpTT04uc3RyaW5naWZ5KGFuZHJvaWRTY2FsZVN1ZmZpeCwgbnVsbCwgJ1xcdCcpLFxuICAgICk7XG4gIH1cbiAgcmV0dXJuICdkcmF3YWJsZS0nICsgc3VmZml4O1xufVxuXG5mdW5jdGlvbiBnZXRBbmRyb2lkUmVzb3VyY2VJZGVudGlmaWVyKGFzc2V0OiBQYWNrYWdlckFzc2V0KTogc3RyaW5nIHtcbiAgcmV0dXJuIChnZXRCYXNlUGF0aChhc3NldCkgKyAnLycgKyBhc3NldC5uYW1lKVxuICAgIC50b0xvd2VyQ2FzZSgpXG4gICAgLnJlcGxhY2UoL1xcLy9nLCAnXycpIC8vIEVuY29kZSBmb2xkZXIgc3RydWN0dXJlIGluIGZpbGUgbmFtZVxuICAgIC5yZXBsYWNlKC8oW15hLXowLTlfXSkvZywgJycpIC8vIFJlbW92ZSBpbGxlZ2FsIGNoYXJzXG4gICAgLnJlcGxhY2UoL15hc3NldHNfLywgJycpOyAvLyBSZW1vdmUgXCJhc3NldHNfXCIgcHJlZml4XG59XG5cbmZ1bmN0aW9uIGdldEJhc2VQYXRoKGFzc2V0OiBQYWNrYWdlckFzc2V0KTogc3RyaW5nIHtcbiAgY29uc3QgYmFzZVBhdGggPSBhc3NldC5odHRwU2VydmVyTG9jYXRpb247XG4gIHJldHVybiBiYXNlUGF0aC5zdGFydHNXaXRoKCcvJykgPyBiYXNlUGF0aC5zdWJzdHIoMSkgOiBiYXNlUGF0aDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGdldEFuZHJvaWRSZXNvdXJjZUZvbGRlck5hbWUsXG4gIGdldEFuZHJvaWRSZXNvdXJjZUlkZW50aWZpZXIsXG4gIGdldEJhc2VQYXRoLFxufTtcbiJdfQ==