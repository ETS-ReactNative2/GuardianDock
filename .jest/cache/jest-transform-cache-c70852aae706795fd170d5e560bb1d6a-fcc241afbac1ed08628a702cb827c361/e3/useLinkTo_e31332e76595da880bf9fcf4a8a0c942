cf5ef06ea85f2b8ec4dc8da6ac058e19
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useLinkTo;

var _core = require("@react-navigation/core");

var React = _interopRequireWildcard(require("react"));

var _LinkingContext = _interopRequireDefault(require("./LinkingContext"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}

function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache(nodeInterop);

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function useLinkTo() {
  var navigation = React.useContext(_core.NavigationContainerRefContext);
  var linking = React.useContext(_LinkingContext.default);
  var linkTo = React.useCallback(function (to) {
    if (navigation === undefined) {
      throw new Error("Couldn't find a navigation object. Is your component inside NavigationContainer?");
    }

    if (typeof to !== 'string') {
      navigation.navigate(to.screen, to.params);
      return;
    }

    if (!to.startsWith('/')) {
      throw new Error("The path must start with '/' (" + to + ").");
    }

    var options = linking.options;
    var state = options !== null && options !== void 0 && options.getStateFromPath ? options.getStateFromPath(to, options.config) : (0, _core.getStateFromPath)(to, options === null || options === void 0 ? void 0 : options.config);

    if (state) {
      var action = (0, _core.getActionFromState)(state, options === null || options === void 0 ? void 0 : options.config);

      if (action !== undefined) {
        navigation.dispatch(action);
      } else {
        navigation.reset(state);
      }
    } else {
      throw new Error('Failed to parse the path to a navigation state.');
    }
  }, [linking, navigation]);
  return linkTo;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUtBOztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUJlLFNBQVNBLFNBQVQsR0FFWDtBQUNGLE1BQU1DLFVBQVUsR0FBR0MsS0FBSyxDQUFDQyxVQUFORCxDQUFpQkUsbUNBQWpCRixDQUFuQjtBQUNBLE1BQU1HLE9BQU8sR0FBR0gsS0FBSyxDQUFDQyxVQUFORCxDQUFpQkksdUJBQWpCSixDQUFoQjtBQUVBLE1BQU1LLE1BQU0sR0FBR0wsS0FBSyxDQUFDTSxXQUFOTixDQUNaTyxZQUFELEVBQXVCO0FBQ3JCLFFBQUlSLFVBQVUsS0FBS1MsU0FBbkIsRUFBOEI7QUFDNUIsWUFBTSxJQUFJQyxLQUFKLENBQ0osa0ZBREksQ0FBTjtBQUdEOztBQUVELFFBQUksT0FBT0YsRUFBUCxLQUFjLFFBQWxCLEVBQTRCO0FBRTFCUixnQkFBVSxDQUFDVyxRQUFYWCxDQUFvQlEsRUFBRSxDQUFDSSxNQUF2QlosRUFBK0JRLEVBQUUsQ0FBQ0ssTUFBbENiO0FBQ0E7QUFDRDs7QUFFRCxRQUFJLENBQUNRLEVBQUUsQ0FBQ00sVUFBSE4sQ0FBYyxHQUFkQSxDQUFMLEVBQXlCO0FBQ3ZCLFlBQU0sSUFBSUUsS0FBSixvQ0FBMkNGLEVBQTNDLFFBQU47QUFDRDs7QUFFRCxRQUFRTyxPQUFSLEdBQW9CWCxPQUFwQixDQUFRVyxPQUFSO0FBRUEsUUFBTUMsS0FBSyxHQUFHRCxPQUFPLFNBQVBBLFdBQU8sV0FBUEEsV0FBTyxDQUFFRSxnQkFBVEYsR0FDVkEsT0FBTyxDQUFDRSxnQkFBUkYsQ0FBeUJQLEVBQXpCTyxFQUE2QkEsT0FBTyxDQUFDRyxNQUFyQ0gsQ0FEVUEsR0FFViw0QkFBaUJQLEVBQWpCLEVBQXFCTyxPQUFyQixTQUFxQkEsV0FBckIsV0FBcUJBLEdBQXJCLE1BQXFCQSxVQUFPLENBQUVHLE1BQTlCLENBRko7O0FBSUEsUUFBSUYsS0FBSixFQUFXO0FBQ1QsVUFBTUcsTUFBTSxHQUFHLDhCQUFtQkgsS0FBbkIsRUFBMEJELE9BQTFCLFNBQTBCQSxXQUExQixXQUEwQkEsR0FBMUIsTUFBMEJBLFVBQU8sQ0FBRUcsTUFBbkMsQ0FBZjs7QUFFQSxVQUFJQyxNQUFNLEtBQUtWLFNBQWYsRUFBMEI7QUFDeEJULGtCQUFVLENBQUNvQixRQUFYcEIsQ0FBb0JtQixNQUFwQm5CO0FBREYsYUFFTztBQUNMQSxrQkFBVSxDQUFDcUIsS0FBWHJCLENBQWlCZ0IsS0FBakJoQjtBQUNEO0FBUEgsV0FRTztBQUNMLFlBQU0sSUFBSVUsS0FBSixDQUFVLGlEQUFWLENBQU47QUFDRDtBQWxDVSxLQW9DYixDQUFDTixPQUFELEVBQVVKLFVBQVYsQ0FwQ2FDLENBQWY7QUF1Q0EsU0FBT0ssTUFBUDtBQUNEIiwibmFtZXMiOlsidXNlTGlua1RvIiwibmF2aWdhdGlvbiIsIlJlYWN0IiwidXNlQ29udGV4dCIsIk5hdmlnYXRpb25Db250YWluZXJSZWZDb250ZXh0IiwibGlua2luZyIsIkxpbmtpbmdDb250ZXh0IiwibGlua1RvIiwidXNlQ2FsbGJhY2siLCJ0byIsInVuZGVmaW5lZCIsIkVycm9yIiwibmF2aWdhdGUiLCJzY3JlZW4iLCJwYXJhbXMiLCJzdGFydHNXaXRoIiwib3B0aW9ucyIsInN0YXRlIiwiZ2V0U3RhdGVGcm9tUGF0aCIsImNvbmZpZyIsImFjdGlvbiIsImRpc3BhdGNoIiwicmVzZXQiXSwic291cmNlcyI6WyJ1c2VMaW5rVG8udHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGdldEFjdGlvbkZyb21TdGF0ZSxcbiAgZ2V0U3RhdGVGcm9tUGF0aCxcbiAgTmF2aWdhdGlvbkNvbnRhaW5lclJlZkNvbnRleHQsXG59IGZyb20gJ0ByZWFjdC1uYXZpZ2F0aW9uL2NvcmUnO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgTGlua2luZ0NvbnRleHQgZnJvbSAnLi9MaW5raW5nQ29udGV4dCc7XG5cbmV4cG9ydCB0eXBlIFRvPFxuICBQYXJhbUxpc3QgZXh0ZW5kcyBSZWFjdE5hdmlnYXRpb24uUm9vdFBhcmFtTGlzdCA9IFJlYWN0TmF2aWdhdGlvbi5Sb290UGFyYW1MaXN0LFxuICBSb3V0ZU5hbWUgZXh0ZW5kcyBrZXlvZiBQYXJhbUxpc3QgPSBrZXlvZiBQYXJhbUxpc3Rcbj4gPVxuICB8IHN0cmluZ1xuICB8ICh1bmRlZmluZWQgZXh0ZW5kcyBQYXJhbUxpc3RbUm91dGVOYW1lXVxuICAgICAgPyB7XG4gICAgICAgICAgc2NyZWVuOiBFeHRyYWN0PFJvdXRlTmFtZSwgc3RyaW5nPjtcbiAgICAgICAgICBwYXJhbXM/OiBQYXJhbUxpc3RbUm91dGVOYW1lXTtcbiAgICAgICAgfVxuICAgICAgOiB7XG4gICAgICAgICAgc2NyZWVuOiBFeHRyYWN0PFJvdXRlTmFtZSwgc3RyaW5nPjtcbiAgICAgICAgICBwYXJhbXM6IFBhcmFtTGlzdFtSb3V0ZU5hbWVdO1xuICAgICAgICB9KTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlTGlua1RvPFxuICBQYXJhbUxpc3QgZXh0ZW5kcyBSZWFjdE5hdmlnYXRpb24uUm9vdFBhcmFtTGlzdFxuPigpIHtcbiAgY29uc3QgbmF2aWdhdGlvbiA9IFJlYWN0LnVzZUNvbnRleHQoTmF2aWdhdGlvbkNvbnRhaW5lclJlZkNvbnRleHQpO1xuICBjb25zdCBsaW5raW5nID0gUmVhY3QudXNlQ29udGV4dChMaW5raW5nQ29udGV4dCk7XG5cbiAgY29uc3QgbGlua1RvID0gUmVhY3QudXNlQ2FsbGJhY2soXG4gICAgKHRvOiBUbzxQYXJhbUxpc3Q+KSA9PiB7XG4gICAgICBpZiAobmF2aWdhdGlvbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICBcIkNvdWxkbid0IGZpbmQgYSBuYXZpZ2F0aW9uIG9iamVjdC4gSXMgeW91ciBjb21wb25lbnQgaW5zaWRlIE5hdmlnYXRpb25Db250YWluZXI/XCJcbiAgICAgICAgKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiB0byAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvcjogVGhpcyBpcyBmaW5lXG4gICAgICAgIG5hdmlnYXRpb24ubmF2aWdhdGUodG8uc2NyZWVuLCB0by5wYXJhbXMpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmICghdG8uc3RhcnRzV2l0aCgnLycpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVGhlIHBhdGggbXVzdCBzdGFydCB3aXRoICcvJyAoJHt0b30pLmApO1xuICAgICAgfVxuXG4gICAgICBjb25zdCB7IG9wdGlvbnMgfSA9IGxpbmtpbmc7XG5cbiAgICAgIGNvbnN0IHN0YXRlID0gb3B0aW9ucz8uZ2V0U3RhdGVGcm9tUGF0aFxuICAgICAgICA/IG9wdGlvbnMuZ2V0U3RhdGVGcm9tUGF0aCh0bywgb3B0aW9ucy5jb25maWcpXG4gICAgICAgIDogZ2V0U3RhdGVGcm9tUGF0aCh0bywgb3B0aW9ucz8uY29uZmlnKTtcblxuICAgICAgaWYgKHN0YXRlKSB7XG4gICAgICAgIGNvbnN0IGFjdGlvbiA9IGdldEFjdGlvbkZyb21TdGF0ZShzdGF0ZSwgb3B0aW9ucz8uY29uZmlnKTtcblxuICAgICAgICBpZiAoYWN0aW9uICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBuYXZpZ2F0aW9uLmRpc3BhdGNoKGFjdGlvbik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbmF2aWdhdGlvbi5yZXNldChzdGF0ZSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIHBhcnNlIHRoZSBwYXRoIHRvIGEgbmF2aWdhdGlvbiBzdGF0ZS4nKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIFtsaW5raW5nLCBuYXZpZ2F0aW9uXVxuICApO1xuXG4gIHJldHVybiBsaW5rVG87XG59XG4iXX0=