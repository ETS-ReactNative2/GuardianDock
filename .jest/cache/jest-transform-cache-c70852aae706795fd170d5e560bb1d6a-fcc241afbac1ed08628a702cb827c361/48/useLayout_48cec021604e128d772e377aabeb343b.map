{"version":3,"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGe,SAASA,SAAT,GAAqB;AAClC,wBAA4BC,KAAK,CAACC,QAAND,CAIzB;AAAEE,UAAM,EAAE,CAAV;AAAaC,SAAK,EAAE,CAApB;AAAuBC,YAAQ,EAAE;AAAjC,GAJyBJ,CAA5B;AAAA;AAAA,MAAOK,MAAP;AAAA,MAAeC,SAAf;;AAMA,MAAMC,QAAQ,GAAGP,KAAK,CAACQ,WAANR,CACdS,WAAD,EAA0B;AACxB,gCAA0BA,CAAC,CAACC,WAAFD,CAAcJ,MAAxC;AAAA,QAAQH,MAAR,yBAAQA,MAAR;AAAA,QAAgBC,KAAhB,yBAAgBA,KAAhB;;AAEA,QAAID,MAAM,KAAKG,MAAM,CAACH,MAAlBA,IAA4BC,KAAK,KAAKE,MAAM,CAACF,KAAjD,EAAwD;AACtD;AACD;;AAEDG,aAAS,CAAC;AACRJ,YADQ,EACRA,MADQ;AAERC,WAFQ,EAERA,KAFQ;AAGRC,cAAQ,EAAE;AAHF,KAAD,CAATE;AARa,KAcf,CAACD,MAAM,CAACH,MAAR,EAAgBG,MAAM,CAACF,KAAvB,CAdeH,CAAjB;AAiBA,SAAO,CAACK,MAAD,EAASE,QAAT,CAAP;AACD","names":["useLayout","React","useState","height","width","measured","layout","setLayout","onLayout","useCallback","e","nativeEvent"],"sources":["useLayout.tsx"],"sourcesContent":["import * as React from 'react';\nimport type { LayoutChangeEvent } from 'react-native';\n\nexport default function useLayout() {\n  const [layout, setLayout] = React.useState<{\n    height: number;\n    width: number;\n    measured: boolean;\n  }>({ height: 0, width: 0, measured: false });\n\n  const onLayout = React.useCallback(\n    (e: LayoutChangeEvent) => {\n      const { height, width } = e.nativeEvent.layout;\n\n      if (height === layout.height && width === layout.width) {\n        return;\n      }\n\n      setLayout({\n        height,\n        width,\n        measured: true,\n      });\n    },\n    [layout.height, layout.width]\n  );\n\n  return [layout, onLayout] as const;\n}\n"]}