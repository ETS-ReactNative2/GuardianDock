{"version":3,"mappings":";;;;;;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,IAAIA,sBAAJ;;AASA,IAAI;AAEFA,wBAAsB,GAAGC,OAAO,CAAC,kDAAD,CAAPA,CACtBC,OADHF;AAFF,EAIE,OAAOG,CAAP,EAAU;AACV,MAAIC,aAAa,GAAG,KAApB;;AAGAJ,wBAAsB,GAAG,sCAAoC;AAAA,QAAjCK,IAAiC,QAAjCA,IAAiC;AAAA,QAA3BC,KAA2B,QAA3BA,KAA2B;AAAA,QAApBC,IAAoB,QAApBA,IAAoB;AAAA,QAAXC,IAAW;;AAE3D,QAAI,CAACJ,aAAL,EAAoB;AAClB,UACE,CAAC,8DAA8DK,IAA9D,CACCN,CAAC,CAACO,OADH,CADH,EAIE;AACAC,eAAO,CAACC,KAARD,CAAcR,CAAdQ;AACD;;AAEDA,aAAO,CAACE,IAARF,6BAC4BN,IAD5BM;AAKAP,mBAAa,GAAG,IAAhBA;AACD;;AAED,WACEU,oBAACC,iBAAD,eACMP,IADN;AAEEQ,WAAK,EAAE,CAACC,MAAM,CAACC,IAAR,EAAc;AAAEZ,aAAF,EAAEA,KAAF;AAASa,gBAAQ,EAAEZ;AAAnB,OAAd,CAFT;AAIEa,mBAAa,EAAC,MAJhB;AAKEC,gBAAU,EAAE;AALd,iBADF;AAnBF;AA+BD;;AAEM,IAAMC,kBAAkB,GAC7BC,sBAASC,EAATD,KAAgB,KAAhBA,GACI;AACEE,MAAI,EAAE,KADR;AAEEC,WAAS,EAAE;AAFb,CADJH,GAKI;AACEI,6BAA2B,EAAE,IAD/B;AAEEC,2BAAyB,EAAE;AAF7B,CANC;;;AAWP,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,MAClBxB,IADkB,SAClBA,IADkB;AAAA,MAElBC,KAFkB,SAElBA,KAFkB;AAAA,MAGlBC,IAHkB,SAGlBA,IAHkB;AAAA,MAIlBuB,SAJkB,SAIlBA,SAJkB;AAAA,MAKlBC,gBALkB,SAKlBA,gBALkB;AAAA,SAOlBjB,oBAACd,sBAAD;AACE+B,oBAAgB,EAAEA,gBADpB;AAEE1B,QAAI,EAAEA,IAFR;AAGEC,SAAK,EAAEA,KAHT;AAIEC,QAAI,EAAEA,IAJR;AAKES,SAAK,EAAE,CACL;AACEgB,eAAS,EAAE,CAAC;AAAEC,cAAM,EAAEH,SAAS,KAAK,KAAdA,GAAsB,CAAC,CAAvBA,GAA2B;AAArC,OAAD,CADb;AAEEI,gBAAU,EAAE3B;AAFd,KADK,EAKLU,MAAM,CAACC,IALF,CALT;AAYEE,iBAAa,EAAC,MAZhB;AAaEC,cAAU,EAAE;AAbd,KAcMC,kBAdN,EAPkB;AAAA,CAApB;;AAyBA,IAAML,MAAM,GAAGkB,wBAAWC,MAAXD,CAAkB;AAC/BjB,MAAI,EAAE;AACJmB,mBAAe,EAAE;AADb;AADyB,CAAlBF,CAAf;;eAMeN","names":["MaterialCommunityIcons","require","default","e","isErrorLogged","name","color","size","rest","test","message","console","error","warn","React","_reactNative","style","styles","icon","fontSize","pointerEvents","selectable","accessibilityProps","Platform","OS","role","focusable","accessibilityElementsHidden","importantForAccessibility","defaultIcon","direction","allowFontScaling","transform","scaleX","lineHeight","StyleSheet","create","backgroundColor"],"sources":["MaterialCommunityIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Text, Platform, TextProps, ViewProps } from 'react-native';\n\nexport type IconProps = {\n  name: string;\n  color: string;\n  size: number;\n  direction: 'rtl' | 'ltr';\n  allowFontScaling?: boolean;\n};\n\nlet MaterialCommunityIcons: React.ComponentType<\n  TextProps & {\n    name: string;\n    color: string;\n    size: number;\n    pointerEvents?: ViewProps['pointerEvents'];\n  }\n>;\n\ntry {\n  // Optionally require vector-icons\n  MaterialCommunityIcons = require('react-native-vector-icons/MaterialCommunityIcons')\n    .default;\n} catch (e) {\n  let isErrorLogged = false;\n\n  // Fallback component for icons\n  MaterialCommunityIcons = ({ name, color, size, ...rest }) => {\n    /* eslint-disable no-console */\n    if (!isErrorLogged) {\n      if (\n        !/(Cannot find module|Module not found|Cannot resolve module)/.test(\n          e.message\n        )\n      ) {\n        console.error(e);\n      }\n\n      console.warn(\n        `Tried to use the icon '${name}' in a component from 'react-native-paper', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.`,\n        `To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.`\n      );\n\n      isErrorLogged = true;\n    }\n\n    return (\n      <Text\n        {...rest}\n        style={[styles.icon, { color, fontSize: size }]}\n        // @ts-expect-error: Text doesn't support this, but it seems to affect TouchableNativeFeedback\n        pointerEvents=\"none\"\n        selectable={false}\n      >\n        â–¡\n      </Text>\n    );\n  };\n}\n\nexport const accessibilityProps =\n  Platform.OS === 'web'\n    ? {\n        role: 'img',\n        focusable: false,\n      }\n    : {\n        accessibilityElementsHidden: true,\n        importantForAccessibility: 'no-hide-descendants' as 'no-hide-descendants',\n      };\n\nconst defaultIcon = ({\n  name,\n  color,\n  size,\n  direction,\n  allowFontScaling,\n}: IconProps) => (\n  <MaterialCommunityIcons\n    allowFontScaling={allowFontScaling}\n    name={name}\n    color={color}\n    size={size}\n    style={[\n      {\n        transform: [{ scaleX: direction === 'rtl' ? -1 : 1 }],\n        lineHeight: size,\n      },\n      styles.icon,\n    ]}\n    pointerEvents=\"none\"\n    selectable={false}\n    {...accessibilityProps}\n  />\n);\n\nconst styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default defaultIcon;\n"]}