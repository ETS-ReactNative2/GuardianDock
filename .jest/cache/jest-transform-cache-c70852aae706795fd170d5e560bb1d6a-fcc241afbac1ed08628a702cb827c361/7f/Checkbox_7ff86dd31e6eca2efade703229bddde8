797dffd1aecb5a155aca8b99bce633cc
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Checkbox = exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _CheckboxIOS = _interopRequireDefault(require("./CheckboxIOS"));

var _CheckboxAndroid = _interopRequireDefault(require("./CheckboxAndroid"));

var _theming = require("../../core/theming");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

var Checkbox = function Checkbox(props) {
  return _reactNative.Platform.OS === 'ios' ? React.createElement(_CheckboxIOS.default, props) : React.createElement(_CheckboxAndroid.default, props);
};

var _default = (0, _theming.withTheme)(Checkbox);

exports.default = _default;
var CheckboxWithTheme = (0, _theming.withTheme)(Checkbox);
exports.Checkbox = CheckboxWithTheme;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE0RUEsSUFBTUEsUUFBUSxHQUFJQyxTQUFaRCxRQUFZQyxNQUFEO0FBQUEsU0FDZkMsc0JBQVNDLEVBQVRELEtBQWdCLEtBQWhCQSxHQUNFRSxvQkFBQ0Msb0JBQUQsRUFBaUJKLEtBQWpCLENBREZDLEdBR0VFLG9CQUFDRSx3QkFBRCxFQUFxQkwsS0FBckIsQ0FKYTtBQUFBLENBQWpCOztlQU9lLHdCQUFVRCxRQUFWOzs7QUFHZixJQUFNTyxpQkFBaUIsR0FBRyx3QkFBVVAsUUFBVixDQUExQiIsIm5hbWVzIjpbIkNoZWNrYm94IiwicHJvcHMiLCJQbGF0Zm9ybSIsIk9TIiwiUmVhY3QiLCJfQ2hlY2tib3hJT1MiLCJfQ2hlY2tib3hBbmRyb2lkIiwiQ2hlY2tib3hXaXRoVGhlbWUiXSwic291cmNlcyI6WyJDaGVja2JveC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgUGxhdGZvcm0gfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IENoZWNrYm94SU9TIGZyb20gJy4vQ2hlY2tib3hJT1MnO1xuaW1wb3J0IENoZWNrYm94QW5kcm9pZCBmcm9tICcuL0NoZWNrYm94QW5kcm9pZCc7XG5pbXBvcnQgeyB3aXRoVGhlbWUgfSBmcm9tICcuLi8uLi9jb3JlL3RoZW1pbmcnO1xuXG50eXBlIFByb3BzID0ge1xuICAvKipcbiAgICogU3RhdHVzIG9mIGNoZWNrYm94LlxuICAgKi9cbiAgc3RhdHVzOiAnY2hlY2tlZCcgfCAndW5jaGVja2VkJyB8ICdpbmRldGVybWluYXRlJztcbiAgLyoqXG4gICAqIFdoZXRoZXIgY2hlY2tib3ggaXMgZGlzYWJsZWQuXG4gICAqL1xuICBkaXNhYmxlZD86IGJvb2xlYW47XG4gIC8qKlxuICAgKiBGdW5jdGlvbiB0byBleGVjdXRlIG9uIHByZXNzLlxuICAgKi9cbiAgb25QcmVzcz86ICgpID0+IHZvaWQ7XG4gIC8qKlxuICAgKiBDdXN0b20gY29sb3IgZm9yIHVuY2hlY2tlZCBjaGVja2JveC5cbiAgICovXG4gIHVuY2hlY2tlZENvbG9yPzogc3RyaW5nO1xuICAvKipcbiAgICogQ3VzdG9tIGNvbG9yIGZvciBjaGVja2JveC5cbiAgICovXG4gIGNvbG9yPzogc3RyaW5nO1xuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqL1xuICB0aGVtZTogUmVhY3ROYXRpdmVQYXBlci5UaGVtZTtcbiAgLyoqXG4gICAqIHRlc3RJRCB0byBiZSB1c2VkIG9uIHRlc3RzLlxuICAgKi9cbiAgdGVzdElEPzogc3RyaW5nO1xufTtcblxuLyoqXG4gKiBDaGVja2JveGVzIGFsbG93IHRoZSBzZWxlY3Rpb24gb2YgbXVsdGlwbGUgb3B0aW9ucyBmcm9tIGEgc2V0LlxuICpcbiAqIDxkaXYgY2xhc3M9XCJzY3JlZW5zaG90c1wiPlxuICogICA8ZmlndXJlPlxuICogICAgIDxpbWcgc3JjPVwic2NyZWVuc2hvdHMvY2hlY2tib3gtZW5hYmxlZC5hbmRyb2lkLnBuZ1wiIC8+XG4gKiAgICAgPGZpZ2NhcHRpb24+QW5kcm9pZCAoZW5hYmxlZCk8L2ZpZ2NhcHRpb24+XG4gKiAgIDwvZmlndXJlPlxuICogICA8ZmlndXJlPlxuICogICAgIDxpbWcgc3JjPVwic2NyZWVuc2hvdHMvY2hlY2tib3gtZGlzYWJsZWQuYW5kcm9pZC5wbmdcIiAvPlxuICogICAgIDxmaWdjYXB0aW9uPkFuZHJvaWQgKGRpc2FibGVkKTwvZmlnY2FwdGlvbj5cbiAqICAgPC9maWd1cmU+XG4gKiAgIDxmaWd1cmU+XG4gKiAgICAgPGltZyBzcmM9XCJzY3JlZW5zaG90cy9jaGVja2JveC1lbmFibGVkLmlvcy5wbmdcIiAvPlxuICogICAgIDxmaWdjYXB0aW9uPmlPUyAoZW5hYmxlZCk8L2ZpZ2NhcHRpb24+XG4gKiAgIDwvZmlndXJlPlxuICogICA8ZmlndXJlPlxuICogICAgIDxpbWcgc3JjPVwic2NyZWVuc2hvdHMvY2hlY2tib3gtZGlzYWJsZWQuaW9zLnBuZ1wiIC8+XG4gKiAgICAgPGZpZ2NhcHRpb24+aU9TIChkaXNhYmxlZCk8L2ZpZ2NhcHRpb24+XG4gKiAgIDwvZmlndXJlPlxuICogPC9kaXY+XG4gKlxuICogIyMgVXNhZ2VcbiAqIGBgYGpzXG4gKiBpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG4gKiBpbXBvcnQgeyBDaGVja2JveCB9IGZyb20gJ3JlYWN0LW5hdGl2ZS1wYXBlcic7XG4gKlxuICogY29uc3QgTXlDb21wb25lbnQgPSAoKSA9PiB7XG4gKiAgIGNvbnN0IFtjaGVja2VkLCBzZXRDaGVja2VkXSA9IFJlYWN0LnVzZVN0YXRlKGZhbHNlKTtcbiAqXG4gKiAgIHJldHVybiAoXG4gKiAgICAgPENoZWNrYm94XG4gKiAgICAgICBzdGF0dXM9e2NoZWNrZWQgPyAnY2hlY2tlZCcgOiAndW5jaGVja2VkJ31cbiAqICAgICAgIG9uUHJlc3M9eygpID0+IHtcbiAqICAgICAgICAgc2V0Q2hlY2tlZCghY2hlY2tlZCk7XG4gKiAgICAgICB9fVxuICogICAgIC8+XG4gKiAgICk7XG4gKiB9O1xuICpcbiAqIGV4cG9ydCBkZWZhdWx0IE15Q29tcG9uZW50O1xuICogYGBgXG4gKi9cbmNvbnN0IENoZWNrYm94ID0gKHByb3BzOiBQcm9wcykgPT5cbiAgUGxhdGZvcm0uT1MgPT09ICdpb3MnID8gKFxuICAgIDxDaGVja2JveElPUyB7Li4ucHJvcHN9IC8+XG4gICkgOiAoXG4gICAgPENoZWNrYm94QW5kcm9pZCB7Li4ucHJvcHN9IC8+XG4gICk7XG5cbmV4cG9ydCBkZWZhdWx0IHdpdGhUaGVtZShDaGVja2JveCk7XG5cbi8vIEBjb21wb25lbnQtZG9jcyBpZ25vcmUtbmV4dC1saW5lXG5jb25zdCBDaGVja2JveFdpdGhUaGVtZSA9IHdpdGhUaGVtZShDaGVja2JveCk7XG4vLyBAY29tcG9uZW50LWRvY3MgaWdub3JlLW5leHQtbGluZVxuZXhwb3J0IHsgQ2hlY2tib3hXaXRoVGhlbWUgYXMgQ2hlY2tib3ggfTtcbiJdfQ==