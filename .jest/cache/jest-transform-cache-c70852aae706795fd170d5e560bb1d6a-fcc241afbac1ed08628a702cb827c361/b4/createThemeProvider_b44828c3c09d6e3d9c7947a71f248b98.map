{"version":3,"mappings":";;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,SAASA,mBAAT,CACEC,YADF,EAEEC,YAFF,EAGwB;AAAA;;AACtB;AAAAC;;AAAA;AAAA;AAAA;;AAAA;;AAAAC,WAKEC,MALF,GAKE,kBAAS;AACP,aACEC,oBAACJ,YAAD,CAAcK,QAAd;AAAuBC,aAAK,EAAE,KAAKC,KAAL,CAAWC;AAAzC,SACG,KAAKD,KAAL,CAAWE,QADd,CADF;AANJ;;AAAA;AAAA,IAAmCL,KAAK,CAACM,SAAzC,2CACwB;AACpBF,SAAK,EAAET;AADa,GADxB;AAaD;;eAEcD","names":["createThemeProvider","defaultTheme","ThemeContext","_inheritsLoose","_proto","render","React","Provider","value","props","theme","children","Component"],"sources":["../src/createThemeProvider.js"],"sourcesContent":["/* @flow */\n\nimport * as React from 'react';\n\nexport type ThemeProviderType<T> = React.ComponentType<{\n  children: React.Node,\n  theme?: T,\n}>;\n\nfunction createThemeProvider<T>(\n  defaultTheme: T,\n  ThemeContext: React.Context<T>\n): ThemeProviderType<T> {\n  return class ThemeProvider extends React.Component<*> {\n    static defaultProps = {\n      theme: defaultTheme,\n    };\n\n    render() {\n      return (\n        <ThemeContext.Provider value={this.props.theme}>\n          {this.props.children}\n        </ThemeContext.Provider>\n      );\n    }\n  };\n}\n\nexport default createThemeProvider;\n"]}