77d677fef698eb7d26bc515e7a39aaf3
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var CardActions = function CardActions(props) {
  return React.createElement(_reactNative.View, _extends({}, props, {
    style: [styles.container, props.style]
  }), React.Children.map(props.children, function (child) {
    return React.isValidElement(child) ? React.cloneElement(child, {
      compact: child.props.compact !== false
    }) : child;
  }));
};

CardActions.displayName = 'Card.Actions';

var styles = _reactNative.StyleSheet.create({
  container: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'flex-start',
    padding: 8
  }
});

var _default = CardActions;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFvQ0EsSUFBTUEsV0FBVyxHQUFJQyxTQUFmRCxXQUFlQyxNQUFEO0FBQUEsU0FDbEJDLG9CQUFDQyxpQkFBRCxlQUFVRixLQUFWO0FBQWlCRyxTQUFLLEVBQUUsQ0FBQ0MsTUFBTSxDQUFDQyxTQUFSLEVBQW1CTCxLQUFLLENBQUNHLEtBQXpCO0FBQXhCLE1BQ0dGLEtBQUssQ0FBQ0ssUUFBTkwsQ0FBZU0sR0FBZk4sQ0FBbUJELEtBQUssQ0FBQ1EsUUFBekJQLEVBQW9DUSxlQUFEO0FBQUEsV0FDbENSLEtBQUssQ0FBQ1MsY0FBTlQsQ0FBcUJRLEtBQXJCUixJQUNJQSxLQUFLLENBQUNVLFlBQU5WLENBQW1CUSxLQUFuQlIsRUFBMEI7QUFDeEJXLGFBQU8sRUFBRUgsS0FBSyxDQUFDVCxLQUFOUyxDQUFZRyxPQUFaSCxLQUF3QjtBQURULEtBQTFCUixDQURKQSxHQUlJUSxLQUw4QjtBQUFBLEdBQW5DUixDQURILENBRGtCO0FBQUEsQ0FBcEI7O0FBWUFGLFdBQVcsQ0FBQ2MsV0FBWmQsR0FBMEIsY0FBMUJBOztBQUVBLElBQU1LLE1BQU0sR0FBR1Usd0JBQVdDLE1BQVhELENBQWtCO0FBQy9CVCxXQUFTLEVBQUU7QUFDVFcsaUJBQWEsRUFBRSxLQUROO0FBRVRDLGNBQVUsRUFBRSxRQUZIO0FBR1RDLGtCQUFjLEVBQUUsWUFIUDtBQUlUQyxXQUFPLEVBQUU7QUFKQTtBQURvQixDQUFsQkwsQ0FBZjs7ZUFTZWYiLCJuYW1lcyI6WyJDYXJkQWN0aW9ucyIsInByb3BzIiwiUmVhY3QiLCJfcmVhY3ROYXRpdmUiLCJzdHlsZSIsInN0eWxlcyIsImNvbnRhaW5lciIsIkNoaWxkcmVuIiwibWFwIiwiY2hpbGRyZW4iLCJjaGlsZCIsImlzVmFsaWRFbGVtZW50IiwiY2xvbmVFbGVtZW50IiwiY29tcGFjdCIsImRpc3BsYXlOYW1lIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsImZsZXhEaXJlY3Rpb24iLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiLCJwYWRkaW5nIl0sInNvdXJjZXMiOlsiQ2FyZEFjdGlvbnMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFN0eWxlU2hlZXQsIFN0eWxlUHJvcCwgVmlldywgVmlld1N0eWxlIH0gZnJvbSAncmVhY3QtbmF0aXZlJztcblxudHlwZSBQcm9wcyA9IFJlYWN0LkNvbXBvbmVudFByb3BzV2l0aFJlZjx0eXBlb2YgVmlldz4gJiB7XG4gIC8qKlxuICAgKiBJdGVtcyBpbnNpZGUgdGhlIGBDYXJkQWN0aW9uc2AuXG4gICAqL1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xuICBzdHlsZT86IFN0eWxlUHJvcDxWaWV3U3R5bGU+O1xufTtcblxuLyoqXG4gKiBBIGNvbXBvbmVudCB0byBzaG93IGEgbGlzdCBvZiBhY3Rpb25zIGluc2lkZSBhIENhcmQuXG4gKlxuICogPGRpdiBjbGFzcz1cInNjcmVlbnNob3RzXCI+XG4gKiAgIDxmaWd1cmU+XG4gKiAgICAgPGltZyBjbGFzcz1cIm1lZGl1bVwiIHNyYz1cInNjcmVlbnNob3RzL2NhcmQtYWN0aW9ucy5wbmdcIiAvPlxuICogICA8L2ZpZ3VyZT5cbiAqIDwvZGl2PlxuICpcbiAqICMjIFVzYWdlXG4gKiBgYGBqc1xuICogaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuICogaW1wb3J0IHsgQ2FyZCwgQnV0dG9uIH0gZnJvbSAncmVhY3QtbmF0aXZlLXBhcGVyJztcbiAqXG4gKiBjb25zdCBNeUNvbXBvbmVudCA9ICgpID0+IChcbiAqICAgPENhcmQ+XG4gKiAgICAgPENhcmQuQWN0aW9ucz5cbiAqICAgICAgIDxCdXR0b24+Q2FuY2VsPC9CdXR0b24+XG4gKiAgICAgICA8QnV0dG9uPk9rPC9CdXR0b24+XG4gKiAgICAgPC9DYXJkLkFjdGlvbnM+XG4gKiAgIDwvQ2FyZD5cbiAqICk7XG4gKlxuICogZXhwb3J0IGRlZmF1bHQgTXlDb21wb25lbnQ7XG4gKiBgYGBcbiAqL1xuY29uc3QgQ2FyZEFjdGlvbnMgPSAocHJvcHM6IFByb3BzKSA9PiAoXG4gIDxWaWV3IHsuLi5wcm9wc30gc3R5bGU9e1tzdHlsZXMuY29udGFpbmVyLCBwcm9wcy5zdHlsZV19PlxuICAgIHtSZWFjdC5DaGlsZHJlbi5tYXAocHJvcHMuY2hpbGRyZW4sIChjaGlsZCkgPT5cbiAgICAgIFJlYWN0LmlzVmFsaWRFbGVtZW50KGNoaWxkKVxuICAgICAgICA/IFJlYWN0LmNsb25lRWxlbWVudChjaGlsZCwge1xuICAgICAgICAgICAgY29tcGFjdDogY2hpbGQucHJvcHMuY29tcGFjdCAhPT0gZmFsc2UsXG4gICAgICAgICAgfSlcbiAgICAgICAgOiBjaGlsZFxuICAgICl9XG4gIDwvVmlldz5cbik7XG5cbkNhcmRBY3Rpb25zLmRpc3BsYXlOYW1lID0gJ0NhcmQuQWN0aW9ucyc7XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgY29udGFpbmVyOiB7XG4gICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAganVzdGlmeUNvbnRlbnQ6ICdmbGV4LXN0YXJ0JyxcbiAgICBwYWRkaW5nOiA4LFxuICB9LFxufSk7XG5cbmV4cG9ydCBkZWZhdWx0IENhcmRBY3Rpb25zO1xuIl19