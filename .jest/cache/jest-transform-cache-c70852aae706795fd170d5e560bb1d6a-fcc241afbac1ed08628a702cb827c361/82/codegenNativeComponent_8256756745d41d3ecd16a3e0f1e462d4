ab5a50a365e84586e63e767f691d56ef
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _requireNativeComponent = _interopRequireDefault(require("../../Libraries/ReactNative/requireNativeComponent"));

var _UIManager = _interopRequireDefault(require("../ReactNative/UIManager"));

function codegenNativeComponent(componentName, options) {
  var componentNameInUse = options && options.paperComponentName != null ? options.paperComponentName : componentName;

  if (options != null && options.paperComponentNameDeprecated != null) {
    if (_UIManager.default.getViewManagerConfig(componentName)) {
      componentNameInUse = componentName;
    } else if (options.paperComponentNameDeprecated != null && _UIManager.default.getViewManagerConfig(options.paperComponentNameDeprecated)) {
      componentNameInUse = options.paperComponentNameDeprecated;
    } else {
      var _options$paperCompone;

      throw new Error("Failed to find native component for either " + componentName + " or " + ((_options$paperCompone = options.paperComponentNameDeprecated) != null ? _options$paperCompone : '(unknown)'));
    }
  }

  return (0, _requireNativeComponent.default)(componentNameInUse);
}

var _default = codegenNativeComponent;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvZGVnZW5OYXRpdmVDb21wb25lbnQuanMiXSwibmFtZXMiOlsiY29kZWdlbk5hdGl2ZUNvbXBvbmVudCIsImNvbXBvbmVudE5hbWUiLCJvcHRpb25zIiwiY29tcG9uZW50TmFtZUluVXNlIiwicGFwZXJDb21wb25lbnROYW1lIiwicGFwZXJDb21wb25lbnROYW1lRGVwcmVjYXRlZCIsIlVJTWFuYWdlciIsImdldFZpZXdNYW5hZ2VyQ29uZmlnIiwiRXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFZQTs7QUFFQTs7QUFZQSxTQUFTQSxzQkFBVCxDQUNFQyxhQURGLEVBRUVDLE9BRkYsRUFHOEI7QUFDNUIsTUFBSUMsa0JBQWtCLEdBQ3BCRCxPQUFPLElBQUlBLE9BQU8sQ0FBQ0Usa0JBQVIsSUFBOEIsSUFBekMsR0FDSUYsT0FBTyxDQUFDRSxrQkFEWixHQUVJSCxhQUhOOztBQUtBLE1BQUlDLE9BQU8sSUFBSSxJQUFYLElBQW1CQSxPQUFPLENBQUNHLDRCQUFSLElBQXdDLElBQS9ELEVBQXFFO0FBQ25FLFFBQUlDLG1CQUFVQyxvQkFBVixDQUErQk4sYUFBL0IsQ0FBSixFQUFtRDtBQUNqREUsTUFBQUEsa0JBQWtCLEdBQUdGLGFBQXJCO0FBQ0QsS0FGRCxNQUVPLElBQ0xDLE9BQU8sQ0FBQ0csNEJBQVIsSUFBd0MsSUFBeEMsSUFDQUMsbUJBQVVDLG9CQUFWLENBQStCTCxPQUFPLENBQUNHLDRCQUF2QyxDQUZLLEVBR0w7QUFDQUYsTUFBQUEsa0JBQWtCLEdBQUdELE9BQU8sQ0FBQ0csNEJBQTdCO0FBQ0QsS0FMTSxNQUtBO0FBQUE7O0FBQ0wsWUFBTSxJQUFJRyxLQUFKLGlEQUMwQ1AsYUFEMUMsc0NBQzhEQyxPQUFPLENBQUNHLDRCQUR0RSxvQ0FFRixXQUZFLEVBQU47QUFJRDtBQUNGOztBQU1ELFNBQVEscUNBQ05GLGtCQURNLENBQVI7QUFHRDs7ZUFFY0gsc0IiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIEBmbG93IHN0cmljdC1sb2NhbFxuICovXG5cbi8vIFRPRE86IG1vdmUgdGhpcyBmaWxlIHRvIHNoaW1zL1JlYWN0TmF0aXZlIChyZXF1aXJlcyBSZWFjdCB1cGRhdGUgYW5kIHN5bmMpXG5cbmltcG9ydCByZXF1aXJlTmF0aXZlQ29tcG9uZW50IGZyb20gJy4uLy4uL0xpYnJhcmllcy9SZWFjdE5hdGl2ZS9yZXF1aXJlTmF0aXZlQ29tcG9uZW50JztcbmltcG9ydCB0eXBlIHtIb3N0Q29tcG9uZW50fSBmcm9tICcuLi8uLi9MaWJyYXJpZXMvUmVuZGVyZXIvc2hpbXMvUmVhY3ROYXRpdmVUeXBlcyc7XG5pbXBvcnQgVUlNYW5hZ2VyIGZyb20gJy4uL1JlYWN0TmF0aXZlL1VJTWFuYWdlcic7XG5cbi8vIFRPRE86IGltcG9ydCBmcm9tIENvZGVnZW5TY2hlbWEgb25jZSB3b3Jrc3BhY2VzIGFyZSBlbmFibGVkXG50eXBlIE9wdGlvbnMgPSAkUmVhZE9ubHk8e3xcbiAgaW50ZXJmYWNlT25seT86IGJvb2xlYW4sXG4gIHBhcGVyQ29tcG9uZW50TmFtZT86IHN0cmluZyxcbiAgcGFwZXJDb21wb25lbnROYW1lRGVwcmVjYXRlZD86IHN0cmluZyxcbiAgZXhjbHVkZWRQbGF0Zm9ybXM/OiAkUmVhZE9ubHlBcnJheTwnaU9TJyB8ICdhbmRyb2lkJz4sXG58fT47XG5cbmV4cG9ydCB0eXBlIE5hdGl2ZUNvbXBvbmVudFR5cGU8VD4gPSBIb3N0Q29tcG9uZW50PFQ+O1xuXG5mdW5jdGlvbiBjb2RlZ2VuTmF0aXZlQ29tcG9uZW50PFByb3BzPihcbiAgY29tcG9uZW50TmFtZTogc3RyaW5nLFxuICBvcHRpb25zPzogT3B0aW9ucyxcbik6IE5hdGl2ZUNvbXBvbmVudFR5cGU8UHJvcHM+IHtcbiAgbGV0IGNvbXBvbmVudE5hbWVJblVzZSA9XG4gICAgb3B0aW9ucyAmJiBvcHRpb25zLnBhcGVyQ29tcG9uZW50TmFtZSAhPSBudWxsXG4gICAgICA/IG9wdGlvbnMucGFwZXJDb21wb25lbnROYW1lXG4gICAgICA6IGNvbXBvbmVudE5hbWU7XG5cbiAgaWYgKG9wdGlvbnMgIT0gbnVsbCAmJiBvcHRpb25zLnBhcGVyQ29tcG9uZW50TmFtZURlcHJlY2F0ZWQgIT0gbnVsbCkge1xuICAgIGlmIChVSU1hbmFnZXIuZ2V0Vmlld01hbmFnZXJDb25maWcoY29tcG9uZW50TmFtZSkpIHtcbiAgICAgIGNvbXBvbmVudE5hbWVJblVzZSA9IGNvbXBvbmVudE5hbWU7XG4gICAgfSBlbHNlIGlmIChcbiAgICAgIG9wdGlvbnMucGFwZXJDb21wb25lbnROYW1lRGVwcmVjYXRlZCAhPSBudWxsICYmXG4gICAgICBVSU1hbmFnZXIuZ2V0Vmlld01hbmFnZXJDb25maWcob3B0aW9ucy5wYXBlckNvbXBvbmVudE5hbWVEZXByZWNhdGVkKVxuICAgICkge1xuICAgICAgY29tcG9uZW50TmFtZUluVXNlID0gb3B0aW9ucy5wYXBlckNvbXBvbmVudE5hbWVEZXByZWNhdGVkO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIGBGYWlsZWQgdG8gZmluZCBuYXRpdmUgY29tcG9uZW50IGZvciBlaXRoZXIgJHtjb21wb25lbnROYW1lfSBvciAke29wdGlvbnMucGFwZXJDb21wb25lbnROYW1lRGVwcmVjYXRlZCA/P1xuICAgICAgICAgICcodW5rbm93biknfWAsXG4gICAgICApO1xuICAgIH1cbiAgfVxuXG4gIC8vIElmIHRoaXMgZnVuY3Rpb24gaXMgcnVuIGF0IHJ1bnRpbWUgdGhlbiB0aGF0IG1lYW5zIHRoZSB2aWV3IGNvbmZpZ3Mgd2VyZSBub3RcbiAgLy8gZ2VuZXJhdGVkIHdpdGggdGhlIHZpZXcgY29uZmlnIGJhYmVsIHBsdWdpbiwgc28gd2UgbmVlZCB0byByZXF1aXJlIHRoZSBuYXRpdmUgY29tcG9uZW50LlxuICAvL1xuICAvLyBUaGlzIHdpbGwgYmUgdXNlZnVsIGR1cmluZyBtaWdyYXRpb24sIGJ1dCBldmVudHVhbGx5IHRoaXMgd2lsbCBlcnJvci5cbiAgcmV0dXJuIChyZXF1aXJlTmF0aXZlQ29tcG9uZW50PFByb3BzPihcbiAgICBjb21wb25lbnROYW1lSW5Vc2UsXG4gICk6IEhvc3RDb21wb25lbnQ8UHJvcHM+KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY29kZWdlbk5hdGl2ZUNvbXBvbmVudDtcbiJdfQ==