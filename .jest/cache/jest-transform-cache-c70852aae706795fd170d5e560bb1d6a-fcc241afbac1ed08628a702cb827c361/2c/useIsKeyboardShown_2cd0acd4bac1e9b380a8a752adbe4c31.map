{"version":3,"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMe,SAASA,kBAAT,OAAuD;AAAA,MAAzBC,MAAyB,QAAzBA,MAAyB;AAAA,MAAjBC,MAAiB,QAAjBA,MAAiB;AACpEC,OAAK,CAACC,SAAND,CAAgB,YAAM;AACpB,QAAIE,oBAAJ;AACA,QAAIC,oBAAJ;AACA,QAAIC,mBAAJ;AACA,QAAIC,mBAAJ;;AAEA,QAAIC,sBAASC,EAATD,KAAgB,KAApB,EAA2B;AACzBJ,0BAAoB,GAAGM,sBAASC,WAATD,CAAqB,kBAArBA,EAAyCV,MAAzCU,CAAvBN;AACAC,0BAAoB,GAAGK,sBAASC,WAATD,CAAqB,kBAArBA,EAAyCT,MAAzCS,CAAvBL;AAFF,WAGO;AACLC,yBAAmB,GAAGI,sBAASC,WAATD,CAAqB,iBAArBA,EAAwCV,MAAxCU,CAAtBJ;AACAC,yBAAmB,GAAGG,sBAASC,WAATD,CAAqB,iBAArBA,EAAwCT,MAAxCS,CAAtBH;AACD;;AAED,WAAO,YAAM;AACX,UAAIC,sBAASC,EAATD,KAAgB,KAApB,EAA2B;AAAA;;AACzB,qCAAIJ,oBAAJ,kDAAIQ,sBAAsBC,MAA1B,EAAkC;AAChCT,8BAAoB,CAACS,MAArBT;AADF,eAEO;AACLM,gCAASI,cAATJ,CAAwB,kBAAxBA,EAA4CV,MAA5CU;AACD;;AAED,qCAAIL,oBAAJ,kDAAIU,sBAAsBF,MAA1B,EAAkC;AAChCR,8BAAoB,CAACQ,MAArBR;AADF,eAEO;AACLK,gCAASI,cAATJ,CAAwB,kBAAxBA,EAA4CT,MAA5CS;AACD;AAXH,aAYO;AAAA;;AACL,oCAAIJ,mBAAJ,iDAAIU,qBAAqBH,MAAzB,EAAiC;AAC/BP,6BAAmB,CAACO,MAApBP;AADF,eAEO;AACLI,gCAASI,cAATJ,CAAwB,iBAAxBA,EAA2CV,MAA3CU;AACD;;AAED,oCAAIH,mBAAJ,iDAAIU,qBAAqBJ,MAAzB,EAAiC;AAC/BN,6BAAmB,CAACM,MAApBN;AADF,eAEO;AACLG,gCAASI,cAATJ,CAAwB,iBAAxBA,EAA2CT,MAA3CS;AACD;AACF;AAzBH;AAdF,KAyCG,CAACT,MAAD,EAASD,MAAT,CAzCHE;AA0CD","names":["useIsKeyboardShown","onShow","onHide","React","useEffect","willShowSubscription","willHideSubscription","didShowSubscription","didHideSubscription","Platform","OS","Keyboard","addListener","_willShowSubscription","remove","removeListener","_willHideSubscription","_didShowSubscription","_didHideSubscription"],"sources":["useIsKeyboardShown.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Keyboard, NativeEventSubscription, Platform } from 'react-native';\n\ntype Props = {\n  onShow: () => void;\n  onHide: () => void;\n};\nexport default function useIsKeyboardShown({ onShow, onHide }: Props) {\n  React.useEffect(() => {\n    let willShowSubscription: NativeEventSubscription | undefined;\n    let willHideSubscription: NativeEventSubscription | undefined;\n    let didShowSubscription: NativeEventSubscription | undefined;\n    let didHideSubscription: NativeEventSubscription | undefined;\n\n    if (Platform.OS === 'ios') {\n      willShowSubscription = Keyboard.addListener('keyboardWillShow', onShow);\n      willHideSubscription = Keyboard.addListener('keyboardWillHide', onHide);\n    } else {\n      didShowSubscription = Keyboard.addListener('keyboardDidShow', onShow);\n      didHideSubscription = Keyboard.addListener('keyboardDidHide', onHide);\n    }\n\n    return () => {\n      if (Platform.OS === 'ios') {\n        if (willShowSubscription?.remove) {\n          willShowSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardWillShow', onShow);\n        }\n\n        if (willHideSubscription?.remove) {\n          willHideSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardWillHide', onHide);\n        }\n      } else {\n        if (didShowSubscription?.remove) {\n          didShowSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardDidShow', onShow);\n        }\n\n        if (didHideSubscription?.remove) {\n          didHideSubscription.remove();\n        } else {\n          Keyboard.removeListener('keyboardDidHide', onHide);\n        }\n      }\n    };\n  }, [onHide, onShow]);\n}\n"]}