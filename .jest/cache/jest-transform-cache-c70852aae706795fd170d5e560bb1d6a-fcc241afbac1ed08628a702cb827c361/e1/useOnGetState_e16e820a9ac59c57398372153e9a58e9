4fd3ae215bbb9e6a459fd0e2f8d0b592
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault2(require("@babel/runtime/helpers/extends"));

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useOnGetState;

var React = _interopRequireWildcard(require("react"));

var _isArrayEqual = _interopRequireDefault(require("./isArrayEqual"));

var _NavigationBuilderContext = _interopRequireDefault(require("./NavigationBuilderContext"));

var _NavigationRouteContext = _interopRequireDefault(require("./NavigationRouteContext"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}

function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache(nodeInterop);

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function useOnGetState(_ref) {
  var getState = _ref.getState,
      getStateListeners = _ref.getStateListeners;

  var _React$useContext = React.useContext(_NavigationBuilderContext.default),
      addKeyedListener = _React$useContext.addKeyedListener;

  var route = React.useContext(_NavigationRouteContext.default);
  var key = route ? route.key : 'root';
  var getRehydratedState = React.useCallback(function () {
    var state = getState();
    var routes = state.routes.map(function (route) {
      var _getStateListeners$ro;

      var childState = (_getStateListeners$ro = getStateListeners[route.key]) === null || _getStateListeners$ro === void 0 ? void 0 : _getStateListeners$ro.call(getStateListeners);

      if (route.state === childState) {
        return route;
      }

      return (0, _extends2.default)({}, route, {
        state: childState
      });
    });

    if ((0, _isArrayEqual.default)(state.routes, routes)) {
      return state;
    }

    return (0, _extends2.default)({}, state, {
      routes: routes
    });
  }, [getState, getStateListeners]);
  React.useEffect(function () {
    return addKeyedListener === null || addKeyedListener === void 0 ? void 0 : addKeyedListener('getState', key, getRehydratedState);
  }, [addKeyedListener, getRehydratedState, key]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFDQTs7QUFFQTs7QUFDQTs7QUFHQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU9lLFNBQVNBLGFBQVQsT0FHSDtBQUFBLE1BRlZDLFFBRVUsUUFGVkEsUUFFVTtBQUFBLE1BRFZDLGlCQUNVLFFBRFZBLGlCQUNVOztBQUNWLDBCQUE2QkMsS0FBSyxDQUFDQyxVQUFORCxDQUFpQkUsaUNBQWpCRixDQUE3QjtBQUFBLE1BQVFHLGdCQUFSLHFCQUFRQSxnQkFBUjs7QUFDQSxNQUFNQyxLQUFLLEdBQUdKLEtBQUssQ0FBQ0MsVUFBTkQsQ0FBaUJLLCtCQUFqQkwsQ0FBZDtBQUNBLE1BQU1NLEdBQUcsR0FBR0YsS0FBSyxHQUFHQSxLQUFLLENBQUNFLEdBQVQsR0FBZSxNQUFoQztBQUVBLE1BQU1DLGtCQUFrQixHQUFHUCxLQUFLLENBQUNRLFdBQU5SLENBQWtCLFlBQU07QUFDakQsUUFBTVMsS0FBSyxHQUFHWCxRQUFRLEVBQXRCO0FBR0EsUUFBTVksTUFBTSxHQUFHRCxLQUFLLENBQUNDLE1BQU5ELENBQWFFLEdBQWJGLENBQWtCTCxlQUFELEVBQVc7QUFBQTs7QUFDekMsVUFBTVEsVUFBVSw0QkFBR2IsaUJBQWlCLENBQUNLLEtBQUssQ0FBQ0UsR0FBUCxDQUFwQiwwREFBR08sNkNBQW5COztBQUVBLFVBQUlULEtBQUssQ0FBQ0ssS0FBTkwsS0FBZ0JRLFVBQXBCLEVBQWdDO0FBQzlCLGVBQU9SLEtBQVA7QUFDRDs7QUFFRCx3Q0FBWUEsS0FBWjtBQUFtQkssYUFBSyxFQUFFRztBQUExQjtBQVBhLE1BQWY7O0FBVUEsUUFBSSwyQkFBYUgsS0FBSyxDQUFDQyxNQUFuQixFQUEyQkEsTUFBM0IsQ0FBSixFQUF3QztBQUN0QyxhQUFPRCxLQUFQO0FBQ0Q7O0FBRUQsc0NBQVlBLEtBQVo7QUFBbUJDO0FBQW5CO0FBbEJ5QixLQW1CeEIsQ0FBQ1osUUFBRCxFQUFXQyxpQkFBWCxDQW5Cd0JDLENBQTNCO0FBcUJBQSxPQUFLLENBQUNjLFNBQU5kLENBQWdCLFlBQU07QUFDcEIsV0FBT0csZ0JBQVAsU0FBT0Esb0JBQVAsV0FBT0EsR0FBUCxNQUFPQSxtQkFBZ0IsQ0FBRyxVQUFILEVBQWVHLEdBQWYsRUFBb0JDLGtCQUFwQixDQUF2QjtBQURGLEtBRUcsQ0FBQ0osZ0JBQUQsRUFBbUJJLGtCQUFuQixFQUF1Q0QsR0FBdkMsQ0FGSE47QUFHRCIsIm5hbWVzIjpbInVzZU9uR2V0U3RhdGUiLCJnZXRTdGF0ZSIsImdldFN0YXRlTGlzdGVuZXJzIiwiUmVhY3QiLCJ1c2VDb250ZXh0IiwiTmF2aWdhdGlvbkJ1aWxkZXJDb250ZXh0IiwiYWRkS2V5ZWRMaXN0ZW5lciIsInJvdXRlIiwiTmF2aWdhdGlvblJvdXRlQ29udGV4dCIsImtleSIsImdldFJlaHlkcmF0ZWRTdGF0ZSIsInVzZUNhbGxiYWNrIiwic3RhdGUiLCJyb3V0ZXMiLCJtYXAiLCJjaGlsZFN0YXRlIiwiX2dldFN0YXRlTGlzdGVuZXJzJHJvIiwidXNlRWZmZWN0Il0sInNvdXJjZXMiOlsidXNlT25HZXRTdGF0ZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBOYXZpZ2F0aW9uU3RhdGUgfSBmcm9tICdAcmVhY3QtbmF2aWdhdGlvbi9yb3V0ZXJzJztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IGlzQXJyYXlFcXVhbCBmcm9tICcuL2lzQXJyYXlFcXVhbCc7XG5pbXBvcnQgTmF2aWdhdGlvbkJ1aWxkZXJDb250ZXh0LCB7XG4gIEdldFN0YXRlTGlzdGVuZXIsXG59IGZyb20gJy4vTmF2aWdhdGlvbkJ1aWxkZXJDb250ZXh0JztcbmltcG9ydCBOYXZpZ2F0aW9uUm91dGVDb250ZXh0IGZyb20gJy4vTmF2aWdhdGlvblJvdXRlQ29udGV4dCc7XG5cbnR5cGUgT3B0aW9ucyA9IHtcbiAgZ2V0U3RhdGU6ICgpID0+IE5hdmlnYXRpb25TdGF0ZTtcbiAgZ2V0U3RhdGVMaXN0ZW5lcnM6IFJlY29yZDxzdHJpbmcsIEdldFN0YXRlTGlzdGVuZXIgfCB1bmRlZmluZWQ+O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlT25HZXRTdGF0ZSh7XG4gIGdldFN0YXRlLFxuICBnZXRTdGF0ZUxpc3RlbmVycyxcbn06IE9wdGlvbnMpIHtcbiAgY29uc3QgeyBhZGRLZXllZExpc3RlbmVyIH0gPSBSZWFjdC51c2VDb250ZXh0KE5hdmlnYXRpb25CdWlsZGVyQ29udGV4dCk7XG4gIGNvbnN0IHJvdXRlID0gUmVhY3QudXNlQ29udGV4dChOYXZpZ2F0aW9uUm91dGVDb250ZXh0KTtcbiAgY29uc3Qga2V5ID0gcm91dGUgPyByb3V0ZS5rZXkgOiAncm9vdCc7XG5cbiAgY29uc3QgZ2V0UmVoeWRyYXRlZFN0YXRlID0gUmVhY3QudXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGNvbnN0IHN0YXRlID0gZ2V0U3RhdGUoKTtcblxuICAgIC8vIEF2b2lkIHJldHVybmluZyBuZXcgcm91dGUgb2JqZWN0cyBpZiB3ZSBkb24ndCBuZWVkIHRvXG4gICAgY29uc3Qgcm91dGVzID0gc3RhdGUucm91dGVzLm1hcCgocm91dGUpID0+IHtcbiAgICAgIGNvbnN0IGNoaWxkU3RhdGUgPSBnZXRTdGF0ZUxpc3RlbmVyc1tyb3V0ZS5rZXldPy4oKTtcblxuICAgICAgaWYgKHJvdXRlLnN0YXRlID09PSBjaGlsZFN0YXRlKSB7XG4gICAgICAgIHJldHVybiByb3V0ZTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHsgLi4ucm91dGUsIHN0YXRlOiBjaGlsZFN0YXRlIH07XG4gICAgfSk7XG5cbiAgICBpZiAoaXNBcnJheUVxdWFsKHN0YXRlLnJvdXRlcywgcm91dGVzKSkge1xuICAgICAgcmV0dXJuIHN0YXRlO1xuICAgIH1cblxuICAgIHJldHVybiB7IC4uLnN0YXRlLCByb3V0ZXMgfTtcbiAgfSwgW2dldFN0YXRlLCBnZXRTdGF0ZUxpc3RlbmVyc10pO1xuXG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgcmV0dXJuIGFkZEtleWVkTGlzdGVuZXI/LignZ2V0U3RhdGUnLCBrZXksIGdldFJlaHlkcmF0ZWRTdGF0ZSk7XG4gIH0sIFthZGRLZXllZExpc3RlbmVyLCBnZXRSZWh5ZHJhdGVkU3RhdGUsIGtleV0pO1xufVxuIl19