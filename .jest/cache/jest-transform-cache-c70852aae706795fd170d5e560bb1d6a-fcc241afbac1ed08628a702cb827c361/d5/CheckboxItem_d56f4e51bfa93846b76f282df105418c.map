{"version":3,"mappings":";;;;;;;;;;;;;;AAAA;;AAEA;;AAQA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,OAWR;AAAA,MAVXC,KAUW,QAVXA,KAUW;AAAA,MATXC,MASW,QATXA,MASW;AAAA,MARXC,KAQW,QARXA,KAQW;AAAA,MAPXC,OAOW,QAPXA,OAOW;AAAA,MANXC,UAMW,QANXA,UAMW;AAAA,MALXC,KAKW,QALXA,KAKW;AAAA,MAJXC,MAIW,QAJXA,MAIW;AAAA,MAHXC,IAGW,QAHXA,IAGW;AAAA,2BAFXC,QAEW;AAAA,MAFXA,QAEW,8BAFA,UAEA;AAAA,MADRC,KACQ;AACX,MAAMC,aAAa,8BAAQD,KAAR;AAAeR,UAAZ,EAAYA,MAAf;AAAuBI;AAAvB,IAAnB;AACA,MAAMM,SAAS,GAAGH,QAAQ,KAAK,SAA/B;AACA,MAAII,QAAJ;;AAEA,MAAIL,IAAI,KAAK,SAAb,EAAwB;AACtBK,YAAQ,GAAGC,oBAACC,wBAAD,EAAqBJ,aAArB,CAAXE;AADF,SAEO,IAAIL,IAAI,KAAK,KAAb,EAAoB;AACzBK,YAAQ,GAAGC,oBAACE,oBAAD,EAAiBL,aAAjB,CAAXE;AADK,SAEA;AACLA,YAAQ,GAAGC,oBAACG,iBAAD,EAAcN,aAAd,CAAXE;AACD;;AAED,SACEC,oBAACI,wBAAD;AACEC,sBAAkB,EAAEhB,KADtB;AAEEiB,qBAAiB,EAAC,UAFpB;AAGEC,sBAAkB,EAAE;AAClBC,aAAO,EAAEpB,MAAM,KAAK;AADF,KAHtB;AAMEE,WAAO,EAAEA,OANX;AAOEG,UAAM,EAAEA;AAPV,KASEO,oBAACS,iBAAD;AACEtB,SAAK,EAAE,CAACuB,MAAM,CAACC,SAAR,EAAmBxB,KAAnB,CADT;AAEEyB,iBAAa,EAAC,MAFhB;AAGEC,6BAAyB,EAAC;AAH5B,KAKGf,SAAS,IAAIC,QALhB,EAMEC,oBAACc,aAAD;AACE3B,SAAK,EAAE,CACLuB,MAAM,CAACrB,KADF,EAEL;AACE0B,WAAK,EAAEvB,KAAK,CAACwB,MAANxB,CAAayB,IADtB;AAEEC,eAAS,EAAEpB,SAAS,GAAG,OAAH,GAAa;AAFnC,KAFK,EAMLP,UANK;AADT,KAUGF,KAVH,CANF,EAkBG,CAACS,SAAD,IAAcC,QAlBjB,CATF,CADF;AAxBF;;AA0DAb,YAAY,CAACiC,WAAbjC,GAA2B,eAA3BA;;eAEe,wBAAUA,YAAV;;;AAGf,IAAMkC,qBAAqB,GAAG,wBAAUlC,YAAV,CAA9B;;;AAIA,IAAMwB,MAAM,GAAGW,wBAAWC,MAAXD,CAAkB;AAC/BV,WAAS,EAAE;AACTY,iBAAa,EAAE,KADN;AAETC,cAAU,EAAE,QAFH;AAGTC,kBAAc,EAAE,eAHP;AAITC,mBAAe,EAAE,CAJR;AAKTC,qBAAiB,EAAE;AALV,GADoB;AAQ/BtC,OAAK,EAAE;AACLuC,YAAQ,EAAE,EADL;AAELC,cAAU,EAAE,CAFP;AAGLC,YAAQ,EAAE;AAHL;AARwB,CAAlBT,CAAf","names":["CheckboxItem","style","status","label","onPress","labelStyle","theme","testID","mode","position","props","checkboxProps","isLeading","checkbox","React","_CheckboxAndroid","_CheckboxIOS","_Checkbox","_TouchableRipple","accessibilityLabel","accessibilityRole","accessibilityState","checked","_reactNative","styles","container","pointerEvents","importantForAccessibility","_Text","color","colors","text","textAlign","displayName","CheckboxItemWithTheme","StyleSheet","create","flexDirection","alignItems","justifyContent","paddingVertical","paddingHorizontal","fontSize","flexShrink","flexGrow"],"sources":["CheckboxItem.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport Checkbox from './Checkbox';\nimport CheckboxAndroid from './CheckboxAndroid';\nimport CheckboxIOS from './CheckboxIOS';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { withTheme } from '../../core/theming';\n\ntype Props = {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Label to be displayed on the item.\n   */\n  label: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * Additional styles for container View.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to Label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n  /**\n   * Checkbox control position.\n   */\n  position?: 'leading' | 'trailing';\n  /**\n   * Whether `<Checkbox.Android />` or `<Checkbox.IOS />` should be used.\n   * Left undefined `<Checkbox />` will be used.\n   */\n  mode?: 'android' | 'ios';\n};\n\n/**\n * Checkbox.Item allows you to press the whole row (item) instead of only the Checkbox.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Checkbox } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View>\n *     <Checkbox.Item label=\"Item\" status=\"checked\" />\n *   </View>\n * );\n *\n * export default MyComponent;\n *```\n */\n\nconst CheckboxItem = ({\n  style,\n  status,\n  label,\n  onPress,\n  labelStyle,\n  theme,\n  testID,\n  mode,\n  position = 'trailing',\n  ...props\n}: Props) => {\n  const checkboxProps = { ...props, status, theme };\n  const isLeading = position === 'leading';\n  let checkbox;\n\n  if (mode === 'android') {\n    checkbox = <CheckboxAndroid {...checkboxProps} />;\n  } else if (mode === 'ios') {\n    checkbox = <CheckboxIOS {...checkboxProps} />;\n  } else {\n    checkbox = <Checkbox {...checkboxProps} />;\n  }\n\n  return (\n    <TouchableRipple\n      accessibilityLabel={label}\n      accessibilityRole=\"checkbox\"\n      accessibilityState={{\n        checked: status === 'checked',\n      }}\n      onPress={onPress}\n      testID={testID}\n    >\n      <View\n        style={[styles.container, style]}\n        pointerEvents=\"none\"\n        importantForAccessibility=\"no-hide-descendants\"\n      >\n        {isLeading && checkbox}\n        <Text\n          style={[\n            styles.label,\n            {\n              color: theme.colors.text,\n              textAlign: isLeading ? 'right' : 'left',\n            },\n            labelStyle,\n          ]}\n        >\n          {label}\n        </Text>\n        {!isLeading && checkbox}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nCheckboxItem.displayName = 'Checkbox.Item';\n\nexport default withTheme(CheckboxItem);\n\n// @component-docs ignore-next-line\nconst CheckboxItemWithTheme = withTheme(CheckboxItem);\n// @component-docs ignore-next-line\nexport { CheckboxItemWithTheme as CheckboxItem };\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  label: {\n    fontSize: 16,\n    flexShrink: 1,\n    flexGrow: 1,\n  },\n});\n"]}