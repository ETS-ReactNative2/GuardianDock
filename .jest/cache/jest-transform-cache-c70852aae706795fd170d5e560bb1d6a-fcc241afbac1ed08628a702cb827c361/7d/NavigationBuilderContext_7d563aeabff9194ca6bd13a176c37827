5a78f7768e4f62a539052f641a79280f
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}

function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache(nodeInterop);

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

var NavigationBuilderContext = React.createContext({
  onDispatchAction: function onDispatchAction() {
    return undefined;
  },
  onOptionsChange: function onOptionsChange() {
    return undefined;
  }
});
var _default = NavigationBuilderContext;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUtBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZ0RBLElBQU1BLHdCQUF3QixHQUFHQyxLQUFLLENBQUNDLGFBQU5ELENBVzlCO0FBQ0RFLGtCQUFnQixFQUFFO0FBQUEsV0FBTUMsU0FBTjtBQUFBLEdBRGpCO0FBRURDLGlCQUFlLEVBQUU7QUFBQSxXQUFNRCxTQUFOO0FBQUE7QUFGaEIsQ0FYOEJILENBQWpDO2VBZ0JlRCIsIm5hbWVzIjpbIk5hdmlnYXRpb25CdWlsZGVyQ29udGV4dCIsIlJlYWN0IiwiY3JlYXRlQ29udGV4dCIsIm9uRGlzcGF0Y2hBY3Rpb24iLCJ1bmRlZmluZWQiLCJvbk9wdGlvbnNDaGFuZ2UiXSwic291cmNlcyI6WyJOYXZpZ2F0aW9uQnVpbGRlckNvbnRleHQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHtcbiAgTmF2aWdhdGlvbkFjdGlvbixcbiAgTmF2aWdhdGlvblN0YXRlLFxuICBQYXJhbUxpc3RCYXNlLFxufSBmcm9tICdAcmVhY3QtbmF2aWdhdGlvbi9yb3V0ZXJzJztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHR5cGUgeyBOYXZpZ2F0aW9uSGVscGVycyB9IGZyb20gJy4vdHlwZXMnO1xuXG5leHBvcnQgdHlwZSBMaXN0ZW5lck1hcCA9IHtcbiAgYWN0aW9uOiBDaGlsZEFjdGlvbkxpc3RlbmVyO1xuICBmb2N1czogRm9jdXNlZE5hdmlnYXRpb25MaXN0ZW5lcjtcbn07XG5cbmV4cG9ydCB0eXBlIEtleWVkTGlzdGVuZXJNYXAgPSB7XG4gIGdldFN0YXRlOiBHZXRTdGF0ZUxpc3RlbmVyO1xuICBiZWZvcmVSZW1vdmU6IENoaWxkQmVmb3JlUmVtb3ZlTGlzdGVuZXI7XG59O1xuXG5leHBvcnQgdHlwZSBBZGRMaXN0ZW5lciA9IDxUIGV4dGVuZHMga2V5b2YgTGlzdGVuZXJNYXA+KFxuICB0eXBlOiBULFxuICBsaXN0ZW5lcjogTGlzdGVuZXJNYXBbVF1cbikgPT4gdm9pZDtcblxuZXhwb3J0IHR5cGUgQWRkS2V5ZWRMaXN0ZW5lciA9IDxUIGV4dGVuZHMga2V5b2YgS2V5ZWRMaXN0ZW5lck1hcD4oXG4gIHR5cGU6IFQsXG4gIGtleTogc3RyaW5nLFxuICBsaXN0ZW5lcjogS2V5ZWRMaXN0ZW5lck1hcFtUXVxuKSA9PiB2b2lkO1xuXG5leHBvcnQgdHlwZSBDaGlsZEFjdGlvbkxpc3RlbmVyID0gKFxuICBhY3Rpb246IE5hdmlnYXRpb25BY3Rpb24sXG4gIHZpc2l0ZWROYXZpZ2F0b3JzPzogU2V0PHN0cmluZz5cbikgPT4gYm9vbGVhbjtcblxuZXhwb3J0IHR5cGUgRm9jdXNlZE5hdmlnYXRpb25DYWxsYmFjazxUPiA9IChcbiAgbmF2aWdhdGlvbjogTmF2aWdhdGlvbkhlbHBlcnM8UGFyYW1MaXN0QmFzZT5cbikgPT4gVDtcblxuZXhwb3J0IHR5cGUgRm9jdXNlZE5hdmlnYXRpb25MaXN0ZW5lciA9IDxUPihcbiAgY2FsbGJhY2s6IEZvY3VzZWROYXZpZ2F0aW9uQ2FsbGJhY2s8VD5cbikgPT4ge1xuICBoYW5kbGVkOiBib29sZWFuO1xuICByZXN1bHQ6IFQ7XG59O1xuXG5leHBvcnQgdHlwZSBHZXRTdGF0ZUxpc3RlbmVyID0gKCkgPT4gTmF2aWdhdGlvblN0YXRlO1xuXG5leHBvcnQgdHlwZSBDaGlsZEJlZm9yZVJlbW92ZUxpc3RlbmVyID0gKGFjdGlvbjogTmF2aWdhdGlvbkFjdGlvbikgPT4gYm9vbGVhbjtcblxuLyoqXG4gKiBDb250ZXh0IHdoaWNoIGhvbGRzIHRoZSByZXF1aXJlZCBoZWxwZXJzIG5lZWRlZCB0byBidWlsZCBuZXN0ZWQgbmF2aWdhdG9ycy5cbiAqL1xuY29uc3QgTmF2aWdhdGlvbkJ1aWxkZXJDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dDx7XG4gIG9uQWN0aW9uPzogKFxuICAgIGFjdGlvbjogTmF2aWdhdGlvbkFjdGlvbixcbiAgICB2aXNpdGVkTmF2aWdhdG9ycz86IFNldDxzdHJpbmc+XG4gICkgPT4gYm9vbGVhbjtcbiAgYWRkTGlzdGVuZXI/OiBBZGRMaXN0ZW5lcjtcbiAgYWRkS2V5ZWRMaXN0ZW5lcj86IEFkZEtleWVkTGlzdGVuZXI7XG4gIG9uUm91dGVGb2N1cz86IChrZXk6IHN0cmluZykgPT4gdm9pZDtcbiAgb25EaXNwYXRjaEFjdGlvbjogKGFjdGlvbjogTmF2aWdhdGlvbkFjdGlvbiwgbm9vcDogYm9vbGVhbikgPT4gdm9pZDtcbiAgb25PcHRpb25zQ2hhbmdlOiAob3B0aW9uczogb2JqZWN0KSA9PiB2b2lkO1xuICBzdGFja1JlZj86IFJlYWN0Lk11dGFibGVSZWZPYmplY3Q8c3RyaW5nIHwgdW5kZWZpbmVkPjtcbn0+KHtcbiAgb25EaXNwYXRjaEFjdGlvbjogKCkgPT4gdW5kZWZpbmVkLFxuICBvbk9wdGlvbnNDaGFuZ2U6ICgpID0+IHVuZGVmaW5lZCxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBOYXZpZ2F0aW9uQnVpbGRlckNvbnRleHQ7XG4iXX0=