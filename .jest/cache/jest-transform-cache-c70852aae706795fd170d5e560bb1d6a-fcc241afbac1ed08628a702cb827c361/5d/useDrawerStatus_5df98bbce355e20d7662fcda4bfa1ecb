2ddd1ca0eb5802fd842866f9af0d196b
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useDrawerStatus;

var React = _interopRequireWildcard(require("react"));

var _DrawerStatusContext = _interopRequireDefault(require("./DrawerStatusContext"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}

function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache(nodeInterop);

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function useDrawerStatus() {
  var drawerStatus = React.useContext(_DrawerStatusContext.default);

  if (drawerStatus === undefined) {
    throw new Error("Couldn't find a drawer. Is your component inside a drawer navigator?");
  }

  return drawerStatus;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTWUsU0FBU0EsZUFBVCxHQUF5QztBQUN0RCxNQUFNQyxZQUFZLEdBQUdDLEtBQUssQ0FBQ0MsVUFBTkQsQ0FBaUJFLDRCQUFqQkYsQ0FBckI7O0FBRUEsTUFBSUQsWUFBWSxLQUFLSSxTQUFyQixFQUFnQztBQUM5QixVQUFNLElBQUlDLEtBQUosQ0FDSixzRUFESSxDQUFOO0FBR0Q7O0FBRUQsU0FBT0wsWUFBUDtBQUNEIiwibmFtZXMiOlsidXNlRHJhd2VyU3RhdHVzIiwiZHJhd2VyU3RhdHVzIiwiUmVhY3QiLCJ1c2VDb250ZXh0IiwiRHJhd2VyU3RhdHVzQ29udGV4dCIsInVuZGVmaW5lZCIsIkVycm9yIl0sInNvdXJjZXMiOlsidXNlRHJhd2VyU3RhdHVzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IERyYXdlclN0YXR1cyB9IGZyb20gJ0ByZWFjdC1uYXZpZ2F0aW9uL25hdGl2ZSc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBEcmF3ZXJTdGF0dXNDb250ZXh0IGZyb20gJy4vRHJhd2VyU3RhdHVzQ29udGV4dCc7XG5cbi8qKlxuICogSG9vayB0byBkZXRlY3QgaWYgdGhlIGRyYXdlcidzIHN0YXR1cyBpbiBhIHBhcmVudCBuYXZpZ2F0b3IuXG4gKiBSZXR1cm5zICdvcGVuJyBpZiB0aGUgZHJhd2VyIGlzIG9wZW4sICdjbG9zZWQnIGlmIHRoZSBkcmF3ZXIgaXMgY2xvc2VkLlxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VEcmF3ZXJTdGF0dXMoKTogRHJhd2VyU3RhdHVzIHtcbiAgY29uc3QgZHJhd2VyU3RhdHVzID0gUmVhY3QudXNlQ29udGV4dChEcmF3ZXJTdGF0dXNDb250ZXh0KTtcblxuICBpZiAoZHJhd2VyU3RhdHVzID09PSB1bmRlZmluZWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBcIkNvdWxkbid0IGZpbmQgYSBkcmF3ZXIuIElzIHlvdXIgY29tcG9uZW50IGluc2lkZSBhIGRyYXdlciBuYXZpZ2F0b3I/XCJcbiAgICApO1xuICB9XG5cbiAgcmV0dXJuIGRyYXdlclN0YXR1cztcbn1cbiJdfQ==