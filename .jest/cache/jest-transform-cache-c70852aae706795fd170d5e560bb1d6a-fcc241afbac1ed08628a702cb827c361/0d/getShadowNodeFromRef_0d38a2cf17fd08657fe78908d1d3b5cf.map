{"version":3,"mappings":";;;;;;;AAIA,IAAIA,2BAA2B,GAAIC,yCAAD;AAAA,SAAe,IAAf;AAAA,CAAlC;;AAEA,IAAI;AAEFD,6BAA2B,GAAGE,OAAO,CAAC,mDAAD,CAAPA,CAC3BF,2BADHA;AAFF,EAIE,OAAOG,CAAP,EAAU,CAEX;;AAEM,SAASC,oBAAT,CAA8BC,GAA9B,EAAwC;AAE7C,SAAOL,2BAA2B,CAACK,GAAD,CAA3BL,CAAiCM,uBAAjCN,CAAyDO,SAAzDP,CACJQ,IADH;AAED","names":["findHostInstance_DEPRECATED","_ref","require","e","getShadowNodeFromRef","ref","_internalInstanceHandle","stateNode","node"],"sources":["getShadowNodeFromRef.ts"],"sourcesContent":["// Used by GestureDetector (unsupported on web at the moment) to check whether the\n// attached view may get flattened on Fabric. This implementation causes errors\n// on web due to the static resolution of `require` statements by webpack breaking\n// the conditional importing. Solved by making .web file.\nlet findHostInstance_DEPRECATED = (_ref: any) => null;\n\ntry {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  findHostInstance_DEPRECATED = require('react-native/Libraries/Renderer/shims/ReactFabric')\n    .findHostInstance_DEPRECATED;\n} catch (e) {\n  // do nothing\n}\n\nexport function getShadowNodeFromRef(ref: any) {\n  // @ts-ignore Fabric\n  return findHostInstance_DEPRECATED(ref)._internalInstanceHandle.stateNode\n    .node;\n}\n"]}