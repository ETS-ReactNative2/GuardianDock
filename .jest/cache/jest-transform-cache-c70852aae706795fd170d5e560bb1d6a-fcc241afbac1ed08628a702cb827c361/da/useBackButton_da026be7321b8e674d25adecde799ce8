26f40ba6a89535aa312ca0ad81679b3d
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useBackButton;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}

function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache(nodeInterop);

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function useBackButton(ref) {
  React.useEffect(function () {
    var subscription = _reactNative.BackHandler.addEventListener('hardwareBackPress', function () {
      var navigation = ref.current;

      if (navigation == null) {
        return false;
      }

      if (navigation.canGoBack()) {
        navigation.goBack();
        return true;
      }

      return false;
    });

    return function () {
      return subscription.remove();
    };
  }, [ref]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUlBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRWUsU0FBU0EsYUFBVCxDQUNiQyxHQURhLEVBRWI7QUFDQUMsT0FBSyxDQUFDQyxTQUFORCxDQUFnQixZQUFNO0FBQ3BCLFFBQU1FLFlBQVksR0FBR0MseUJBQVlDLGdCQUFaRCxDQUNuQixtQkFEbUJBLEVBRW5CLFlBQU07QUFDSixVQUFNRSxVQUFVLEdBQUdOLEdBQUcsQ0FBQ08sT0FBdkI7O0FBRUEsVUFBSUQsVUFBVSxJQUFJLElBQWxCLEVBQXdCO0FBQ3RCLGVBQU8sS0FBUDtBQUNEOztBQUVELFVBQUlBLFVBQVUsQ0FBQ0UsU0FBWEYsRUFBSixFQUE0QjtBQUMxQkEsa0JBQVUsQ0FBQ0csTUFBWEg7QUFFQSxlQUFPLElBQVA7QUFDRDs7QUFFRCxhQUFPLEtBQVA7QUFmaUIsTUFBckI7O0FBbUJBLFdBQU87QUFBQSxhQUFNSCxZQUFZLENBQUNPLE1BQWJQLEVBQU47QUFBQSxLQUFQO0FBcEJGLEtBcUJHLENBQUNILEdBQUQsQ0FyQkhDO0FBc0JEIiwibmFtZXMiOlsidXNlQmFja0J1dHRvbiIsInJlZiIsIlJlYWN0IiwidXNlRWZmZWN0Iiwic3Vic2NyaXB0aW9uIiwiQmFja0hhbmRsZXIiLCJhZGRFdmVudExpc3RlbmVyIiwibmF2aWdhdGlvbiIsImN1cnJlbnQiLCJjYW5Hb0JhY2siLCJnb0JhY2siLCJyZW1vdmUiXSwic291cmNlcyI6WyJ1c2VCYWNrQnV0dG9uLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7XG4gIE5hdmlnYXRpb25Db250YWluZXJSZWYsXG4gIFBhcmFtTGlzdEJhc2UsXG59IGZyb20gJ0ByZWFjdC1uYXZpZ2F0aW9uL2NvcmUnO1xuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQmFja0hhbmRsZXIgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VCYWNrQnV0dG9uKFxuICByZWY6IFJlYWN0LlJlZk9iamVjdDxOYXZpZ2F0aW9uQ29udGFpbmVyUmVmPFBhcmFtTGlzdEJhc2U+PlxuKSB7XG4gIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3Qgc3Vic2NyaXB0aW9uID0gQmFja0hhbmRsZXIuYWRkRXZlbnRMaXN0ZW5lcihcbiAgICAgICdoYXJkd2FyZUJhY2tQcmVzcycsXG4gICAgICAoKSA9PiB7XG4gICAgICAgIGNvbnN0IG5hdmlnYXRpb24gPSByZWYuY3VycmVudDtcblxuICAgICAgICBpZiAobmF2aWdhdGlvbiA9PSBudWxsKSB7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG5hdmlnYXRpb24uY2FuR29CYWNrKCkpIHtcbiAgICAgICAgICBuYXZpZ2F0aW9uLmdvQmFjaygpO1xuXG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgKTtcblxuICAgIHJldHVybiAoKSA9PiBzdWJzY3JpcHRpb24ucmVtb3ZlKCk7XG4gIH0sIFtyZWZdKTtcbn1cbiJdfQ==