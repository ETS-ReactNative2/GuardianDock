{"version":3,"mappings":";;;;;;;;;;;;AAAA;;AACA;;AAMA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA,IAAMA,YAAY,GAAG,SAAfA,YAAe;AAAA,uBACnBC,IADmB;AAAA,MACnBA,IADmB,0BACZ,EADY;AAAA,wBAEnBC,KAFmB;AAAA,MAEZC,SAFY,2BAEA,oBAAMC,aAAN,EAAaC,KAAb,CAAmB,IAAnB,EAAyBC,GAAzB,GAA+BC,MAA/B,EAFA;AAAA,MAGnBC,IAHmB,QAGnBA,IAHmB;AAAA,MAInBC,QAJmB,QAInBA,QAJmB;AAAA,MAKnBC,OALmB,QAKnBA,OALmB;AAAA,MAMnBC,kBANmB,QAMnBA,kBANmB;AAAA,MAOhBC,IAPgB;AAAA,SASnBC,oBAACC,mBAAD;AACEb,QAAI,EAAEA,IADR;AAEES,WAAO,EAAEA,OAFX;AAGER,SAAK,EAAEC,SAHT;AAIEK,QAAI,EAAEA,IAJR;AAKEC,YAAQ,EAAEA,QALZ;AAMEE,sBAAkB,EAAEA,kBANtB;AAOEI,YAAQ;AAPV,KAQMH,IARN,EATmB;AAAA,CAArB;;;AAqBAZ,YAAY,CAACgB,WAAbhB,GAA2B,eAA3BA;eAEeA","names":["AppbarAction","size","color","iconColor","black","alpha","rgb","string","icon","disabled","onPress","accessibilityLabel","rest","React","_IconButton","animated","displayName"],"sources":["AppbarAction.tsx"],"sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport type {\n  StyleProp,\n  ViewStyle,\n  TouchableWithoutFeedback,\n} from 'react-native';\nimport { black } from '../../styles/colors';\nimport IconButton from '../IconButton';\nimport type { IconSource } from '../Icon';\n\ntype Props = React.ComponentPropsWithoutRef<typeof IconButton> & {\n  /**\n   *  Custom color for action icon.\n   */\n  color?: string;\n  /**\n   * Name of the icon to show.\n   */\n  icon: IconSource;\n  /**\n   * Optional icon size.\n   */\n  size?: number;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  ref?: React.RefObject<TouchableWithoutFeedback>;\n};\n\n/**\n * A component used to display an action item in the appbar.\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-action-android.png\" />\n *       <figcaption>Android</figcaption>\n *   </figure>\n * </div>\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-action-ios.png\" />\n *       <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n * import { Platform } from 'react-native';\n *\n * const MORE_ICON = Platform.OS === 'ios' ? 'dots-horizontal' : 'dots-vertical';\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *        <Appbar.Content title=\"Title\" subtitle={'Subtitle'} />\n *         <Appbar.Action icon=\"magnify\" onPress={() => {}} />\n *         <Appbar.Action icon={MORE_ICON} onPress={() => {}} />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarAction = ({\n  size = 24,\n  color: iconColor = color(black).alpha(0.54).rgb().string(),\n  icon,\n  disabled,\n  onPress,\n  accessibilityLabel,\n  ...rest\n}: Props) => (\n  <IconButton\n    size={size}\n    onPress={onPress}\n    color={iconColor}\n    icon={icon}\n    disabled={disabled}\n    accessibilityLabel={accessibilityLabel}\n    animated\n    {...rest}\n  />\n);\n\nAppbarAction.displayName = 'Appbar.Action';\n\nexport default AppbarAction;\n\n// @component-docs ignore-next-line\nexport { AppbarAction };\n"]}