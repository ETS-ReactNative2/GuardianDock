{"version":3,"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOe,SAASA,iBAAT,GAA6B;AAC1C,sBAA+BC,KAAK,CAACC,MAAND,CAE5B;AACDE,UAAM,EAAE,EADP;AAEDC,SAAK,EAAE;AAFN,GAF4BH,CAA/B;AAAA,MAAiBI,SAAjB,iBAAQC,OAAR;;AAOA,MAAMC,WAAW,GAAGN,KAAK,CAACO,WAANP,CAClB,UAA8BQ,IAA9B,EAAuCC,QAAvC,EAAoE;AAElEL,aAAS,CAACI,IAAD,CAATJ,CAAgBM,IAAhBN,CAAqBK,QAArBL;AAEA,WAAO,YAAM;AAEX,UAAMO,KAAK,GAAGP,SAAS,CAACI,IAAD,CAATJ,CAAgBQ,OAAhBR,CAAwBK,QAAxBL,CAAd;AAEAA,eAAS,CAACI,IAAD,CAATJ,CAAgBS,MAAhBT,CAAuBO,KAAvBP,EAA8B,CAA9BA;AAJF;AALgB,KAYlB,CAACA,SAAD,CAZkBJ,CAApB;AAeA,SAAO;AACLI,aADK,EACLA,SADK;AAELE;AAFK,GAAP;AAID","names":["useChildListeners","React","useRef","action","focus","listeners","current","addListener","useCallback","type","listener","push","index","indexOf","splice"],"sources":["useChildListeners.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport type { ListenerMap } from './NavigationBuilderContext';\n\n/**\n * Hook which lets child navigators add action listeners.\n */\nexport default function useChildListeners() {\n  const { current: listeners } = React.useRef<{\n    [K in keyof ListenerMap]: ListenerMap[K][];\n  }>({\n    action: [],\n    focus: [],\n  });\n\n  const addListener = React.useCallback(\n    <T extends keyof ListenerMap>(type: T, listener: ListenerMap[T]) => {\n      // @ts-expect-error: listener should be correct type according to `type`\n      listeners[type].push(listener);\n\n      return () => {\n        // @ts-expect-error: listener should be correct type according to `type`\n        const index = listeners[type].indexOf(listener);\n\n        listeners[type].splice(index, 1);\n      };\n    },\n    [listeners]\n  );\n\n  return {\n    listeners,\n    addListener,\n  };\n}\n"]}