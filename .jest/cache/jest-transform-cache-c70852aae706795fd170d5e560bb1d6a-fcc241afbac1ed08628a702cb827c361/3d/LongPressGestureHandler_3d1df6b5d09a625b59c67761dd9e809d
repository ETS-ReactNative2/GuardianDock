d0ecb39291d447ec6452ea3ccfa4feb4
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");

var _toConsumableArray2 = _interopRequireDefault2(require("@babel/runtime/helpers/toConsumableArray"));

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LongPressGestureHandler = exports.longPressHandlerName = exports.longPressGestureHandlerProps = void 0;

var _createHandler = _interopRequireDefault(require("./createHandler"));

var _gestureHandlerCommon = require("./gestureHandlerCommon");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var longPressGestureHandlerProps = ['minDurationMs', 'maxDist'];
exports.longPressGestureHandlerProps = longPressGestureHandlerProps;
var longPressHandlerName = 'LongPressGestureHandler';
exports.longPressHandlerName = longPressHandlerName;
var LongPressGestureHandler = (0, _createHandler.default)({
  name: longPressHandlerName,
  allowedProps: [].concat((0, _toConsumableArray2.default)(_gestureHandlerCommon.baseGestureHandlerProps), longPressGestureHandlerProps),
  config: {}
});
exports.LongPressGestureHandler = LongPressGestureHandler;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7Ozs7Ozs7QUFLTyxJQUFNQSw0QkFBNEIsR0FBRyxDQUMxQyxlQUQwQyxFQUUxQyxTQUYwQyxDQUFyQzs7QUFpRUEsSUFBTUMsb0JBQW9CLEdBQUcseUJBQTdCOztBQUlBLElBQU1DLHVCQUF1QixHQUFHLDRCQUdyQztBQUNBQyxNQUFJLEVBQUVGLG9CQUROO0FBRUFHLGNBQVksNkNBQ1BDLDZDQURPLEdBRVBMLDRCQUZPLENBRlo7QUFNQU0sUUFBTSxFQUFFO0FBTlIsQ0FIcUMsQ0FBaEMiLCJuYW1lcyI6WyJsb25nUHJlc3NHZXN0dXJlSGFuZGxlclByb3BzIiwibG9uZ1ByZXNzSGFuZGxlck5hbWUiLCJMb25nUHJlc3NHZXN0dXJlSGFuZGxlciIsIm5hbWUiLCJhbGxvd2VkUHJvcHMiLCJiYXNlR2VzdHVyZUhhbmRsZXJQcm9wcyIsImNvbmZpZyJdLCJzb3VyY2VzIjpbIkxvbmdQcmVzc0dlc3R1cmVIYW5kbGVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcmVhdGVIYW5kbGVyIGZyb20gJy4vY3JlYXRlSGFuZGxlcic7XG5pbXBvcnQge1xuICBCYXNlR2VzdHVyZUhhbmRsZXJQcm9wcyxcbiAgYmFzZUdlc3R1cmVIYW5kbGVyUHJvcHMsXG59IGZyb20gJy4vZ2VzdHVyZUhhbmRsZXJDb21tb24nO1xuXG5leHBvcnQgY29uc3QgbG9uZ1ByZXNzR2VzdHVyZUhhbmRsZXJQcm9wcyA9IFtcbiAgJ21pbkR1cmF0aW9uTXMnLFxuICAnbWF4RGlzdCcsXG5dIGFzIGNvbnN0O1xuXG5leHBvcnQgdHlwZSBMb25nUHJlc3NHZXN0dXJlSGFuZGxlckV2ZW50UGF5bG9hZCA9IHtcbiAgLyoqXG4gICAqIFggY29vcmRpbmF0ZSwgZXhwcmVzc2VkIGluIHBvaW50cywgb2YgdGhlIGN1cnJlbnQgcG9zaXRpb24gb2YgdGhlIHBvaW50ZXJcbiAgICogKGZpbmdlciBvciBhIGxlYWRpbmcgcG9pbnRlciB3aGVuIHRoZXJlIGFyZSBtdWx0aXBsZSBmaW5nZXJzIHBsYWNlZClcbiAgICogcmVsYXRpdmUgdG8gdGhlIHZpZXcgYXR0YWNoZWQgdG8gdGhlIGhhbmRsZXIuXG4gICAqL1xuICB4OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFkgY29vcmRpbmF0ZSwgZXhwcmVzc2VkIGluIHBvaW50cywgb2YgdGhlIGN1cnJlbnQgcG9zaXRpb24gb2YgdGhlIHBvaW50ZXJcbiAgICogKGZpbmdlciBvciBhIGxlYWRpbmcgcG9pbnRlciB3aGVuIHRoZXJlIGFyZSBtdWx0aXBsZSBmaW5nZXJzIHBsYWNlZClcbiAgICogcmVsYXRpdmUgdG8gdGhlIHZpZXcgYXR0YWNoZWQgdG8gdGhlIGhhbmRsZXIuXG4gICAqL1xuICB5OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFggY29vcmRpbmF0ZSwgZXhwcmVzc2VkIGluIHBvaW50cywgb2YgdGhlIGN1cnJlbnQgcG9zaXRpb24gb2YgdGhlIHBvaW50ZXJcbiAgICogKGZpbmdlciBvciBhIGxlYWRpbmcgcG9pbnRlciB3aGVuIHRoZXJlIGFyZSBtdWx0aXBsZSBmaW5nZXJzIHBsYWNlZClcbiAgICogcmVsYXRpdmUgdG8gdGhlIHdpbmRvdy4gSXQgaXMgcmVjb21tZW5kZWQgdG8gdXNlIGBhYnNvbHV0ZVhgIGluc3RlYWQgb2ZcbiAgICogYHhgIGluIGNhc2VzIHdoZW4gdGhlIHZpZXcgYXR0YWNoZWQgdG8gdGhlIGhhbmRsZXIgY2FuIGJlIHRyYW5zZm9ybWVkIGFzIGFuXG4gICAqIGVmZmVjdCBvZiB0aGUgZ2VzdHVyZS5cbiAgICovXG4gIGFic29sdXRlWDogbnVtYmVyO1xuXG4gIC8qKlxuICAgKiBZIGNvb3JkaW5hdGUsIGV4cHJlc3NlZCBpbiBwb2ludHMsIG9mIHRoZSBjdXJyZW50IHBvc2l0aW9uIG9mIHRoZSBwb2ludGVyXG4gICAqIChmaW5nZXIgb3IgYSBsZWFkaW5nIHBvaW50ZXIgd2hlbiB0aGVyZSBhcmUgbXVsdGlwbGUgZmluZ2VycyBwbGFjZWQpXG4gICAqIHJlbGF0aXZlIHRvIHRoZSB3aW5kb3cuIEl0IGlzIHJlY29tbWVuZGVkIHRvIHVzZSBgYWJzb2x1dGVZYCBpbnN0ZWFkIG9mXG4gICAqIGB5YCBpbiBjYXNlcyB3aGVuIHRoZSB2aWV3IGF0dGFjaGVkIHRvIHRoZSBoYW5kbGVyIGNhbiBiZSB0cmFuc2Zvcm1lZCBhcyBhblxuICAgKiBlZmZlY3Qgb2YgdGhlIGdlc3R1cmUuXG4gICAqL1xuICBhYnNvbHV0ZVk6IG51bWJlcjtcblxuICAvKipcbiAgICogRHVyYXRpb24gb2YgdGhlIGxvbmcgcHJlc3MgKHRpbWUgc2luY2UgdGhlIHN0YXJ0IG9mIHRoZSBldmVudCksIGV4cHJlc3NlZFxuICAgKiBpbiBtaWxsaXNlY29uZHMuXG4gICAqL1xuICBkdXJhdGlvbjogbnVtYmVyO1xufTtcblxuZXhwb3J0IGludGVyZmFjZSBMb25nUHJlc3NHZXN0dXJlQ29uZmlnIHtcbiAgLyoqXG4gICAqIE1pbmltdW0gdGltZSwgZXhwcmVzc2VkIGluIG1pbGxpc2Vjb25kcywgdGhhdCBhIGZpbmdlciBtdXN0IHJlbWFpbiBwcmVzc2VkIG9uXG4gICAqIHRoZSBjb3JyZXNwb25kaW5nIHZpZXcuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIDUwMC5cbiAgICovXG4gIG1pbkR1cmF0aW9uTXM/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIE1heGltdW0gZGlzdGFuY2UsIGV4cHJlc3NlZCBpbiBwb2ludHMsIHRoYXQgZGVmaW5lcyBob3cgZmFyIHRoZSBmaW5nZXIgaXNcbiAgICogYWxsb3dlZCB0byB0cmF2ZWwgZHVyaW5nIGEgbG9uZyBwcmVzcyBnZXN0dXJlLiBJZiB0aGUgZmluZ2VyIHRyYXZlbHNcbiAgICogZnVydGhlciB0aGFuIHRoZSBkZWZpbmVkIGRpc3RhbmNlIGFuZCB0aGUgaGFuZGxlciBoYXNuJ3QgeWV0IGFjdGl2YXRlZCwgaXRcbiAgICogd2lsbCBmYWlsIHRvIHJlY29nbml6ZSB0aGUgZ2VzdHVyZS4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgMTAuXG4gICAqL1xuICBtYXhEaXN0PzogbnVtYmVyO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIExvbmdQcmVzc0dlc3R1cmVIYW5kbGVyUHJvcHNcbiAgZXh0ZW5kcyBCYXNlR2VzdHVyZUhhbmRsZXJQcm9wczxMb25nUHJlc3NHZXN0dXJlSGFuZGxlckV2ZW50UGF5bG9hZD4sXG4gICAgTG9uZ1ByZXNzR2VzdHVyZUNvbmZpZyB7fVxuXG5leHBvcnQgY29uc3QgbG9uZ1ByZXNzSGFuZGxlck5hbWUgPSAnTG9uZ1ByZXNzR2VzdHVyZUhhbmRsZXInO1xuXG5leHBvcnQgdHlwZSBMb25nUHJlc3NHZXN0dXJlSGFuZGxlciA9IHR5cGVvZiBMb25nUHJlc3NHZXN0dXJlSGFuZGxlcjtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tcmVkZWNsYXJlIC0tIGJhY2t3YXJkIGNvbXBhdGliaWxpdHk7IHNlZSBkZXNjcmlwdGlvbiBvbiB0aGUgdG9wIG9mIGdlc3R1cmVIYW5kbGVyQ29tbW9uLnRzIGZpbGVcbmV4cG9ydCBjb25zdCBMb25nUHJlc3NHZXN0dXJlSGFuZGxlciA9IGNyZWF0ZUhhbmRsZXI8XG4gIExvbmdQcmVzc0dlc3R1cmVIYW5kbGVyUHJvcHMsXG4gIExvbmdQcmVzc0dlc3R1cmVIYW5kbGVyRXZlbnRQYXlsb2FkXG4+KHtcbiAgbmFtZTogbG9uZ1ByZXNzSGFuZGxlck5hbWUsXG4gIGFsbG93ZWRQcm9wczogW1xuICAgIC4uLmJhc2VHZXN0dXJlSGFuZGxlclByb3BzLFxuICAgIC4uLmxvbmdQcmVzc0dlc3R1cmVIYW5kbGVyUHJvcHMsXG4gIF0gYXMgY29uc3QsXG4gIGNvbmZpZzoge30sXG59KTtcbiJdfQ==