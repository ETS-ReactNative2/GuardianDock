12856a26000d23fd5837bd587c348707
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");

var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));

var _excluded = ["icon", "size", "style", "theme"],
    _excluded2 = ["backgroundColor"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _Icon = _interopRequireDefault(require("../Icon"));

var _theming = require("../../core/theming");

var _colors = require("../../styles/colors");

var _getContrastingColor = _interopRequireDefault(require("../../utils/getContrastingColor"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var defaultSize = 64;

var Avatar = function Avatar(_ref) {
  var icon = _ref.icon,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? defaultSize : _ref$size,
      style = _ref.style,
      theme = _ref.theme,
      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);

  var _rest$color;

  var _ref2 = _reactNative.StyleSheet.flatten(style) || {},
      _ref2$backgroundColor = _ref2.backgroundColor,
      backgroundColor = _ref2$backgroundColor === void 0 ? theme.colors.primary : _ref2$backgroundColor,
      restStyle = (0, _objectWithoutProperties2.default)(_ref2, _excluded2);

  var textColor = (_rest$color = rest.color) !== null && _rest$color !== void 0 ? _rest$color : (0, _getContrastingColor.default)(backgroundColor, _colors.white, 'rgba(0, 0, 0, .54)');
  return React.createElement(_reactNative.View, _extends({
    style: [{
      width: size,
      height: size,
      borderRadius: size / 2,
      backgroundColor: backgroundColor
    }, styles.container, restStyle]
  }, rest), React.createElement(_Icon.default, {
    source: icon,
    color: textColor,
    size: size * 0.6
  }));
};

Avatar.displayName = 'Avatar.Icon';

var styles = _reactNative.StyleSheet.create({
  container: {
    justifyContent: 'center',
    alignItems: 'center'
  }
});

var _default = (0, _theming.withTheme)(Avatar);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxXQUFXLEdBQUcsRUFBcEI7O0FBeUNBLElBQU1DLE1BQU0sR0FBRyxTQUFUQSxNQUFTLE9BQWdFO0FBQUEsTUFBN0RDLElBQTZELFFBQTdEQSxJQUE2RDtBQUFBLHVCQUF2REMsSUFBdUQ7QUFBQSxNQUF2REEsSUFBdUQsMEJBQWhESCxXQUFnRDtBQUFBLE1BQW5DSSxLQUFtQyxRQUFuQ0EsS0FBbUM7QUFBQSxNQUE1QkMsS0FBNEIsUUFBNUJBLEtBQTRCO0FBQUEsTUFBbEJDLElBQWtCOztBQUFBOztBQUM3RSxjQUNFQyx3QkFBV0MsT0FBWEQsQ0FBbUJILEtBQW5CRyxLQUE2QixFQUQvQjtBQUFBLG9DQUFRRSxlQUFSO0FBQUEsTUFBUUEsZUFBUixzQ0FBMEJKLEtBQUssQ0FBQ0ssTUFBTkwsQ0FBYU0sT0FBdkM7QUFBQSxNQUFtREMsU0FBbkQ7O0FBRUEsTUFBTUMsU0FBUyxrQkFDYlAsSUFBSSxDQUFDUSxLQURRLHFEQUViLGtDQUFvQkwsZUFBcEIsRUFBcUNNLGFBQXJDLEVBQTRDLG9CQUE1QyxDQUZGO0FBSUEsU0FDRUMsb0JBQUNDLGlCQUFEO0FBQ0ViLFNBQUssRUFBRSxDQUNMO0FBQ0VjLFdBQUssRUFBRWYsSUFEVDtBQUVFZ0IsWUFBTSxFQUFFaEIsSUFGVjtBQUdFaUIsa0JBQVksRUFBRWpCLElBQUksR0FBRyxDQUh2QjtBQUlFTTtBQUpGLEtBREssRUFPTFksTUFBTSxDQUFDQyxTQVBGLEVBUUxWLFNBUks7QUFEVCxLQVdNTixJQVhOLEdBYUVVLG9CQUFDTyxhQUFEO0FBQU1DLFVBQU0sRUFBRXRCLElBQWQ7QUFBb0JZLFNBQUssRUFBRUQsU0FBM0I7QUFBc0NWLFFBQUksRUFBRUEsSUFBSSxHQUFHO0FBQW5ELElBYkYsQ0FERjtBQVBGOztBQTBCQUYsTUFBTSxDQUFDd0IsV0FBUHhCLEdBQXFCLGFBQXJCQTs7QUFFQSxJQUFNb0IsTUFBTSxHQUFHZCx3QkFBV21CLE1BQVhuQixDQUFrQjtBQUMvQmUsV0FBUyxFQUFFO0FBQ1RLLGtCQUFjLEVBQUUsUUFEUDtBQUVUQyxjQUFVLEVBQUU7QUFGSDtBQURvQixDQUFsQnJCLENBQWY7O2VBT2Usd0JBQVVOLE1BQVYiLCJuYW1lcyI6WyJkZWZhdWx0U2l6ZSIsIkF2YXRhciIsImljb24iLCJzaXplIiwic3R5bGUiLCJ0aGVtZSIsInJlc3QiLCJTdHlsZVNoZWV0IiwiZmxhdHRlbiIsImJhY2tncm91bmRDb2xvciIsImNvbG9ycyIsInByaW1hcnkiLCJyZXN0U3R5bGUiLCJ0ZXh0Q29sb3IiLCJjb2xvciIsIndoaXRlIiwiUmVhY3QiLCJfcmVhY3ROYXRpdmUiLCJ3aWR0aCIsImhlaWdodCIsImJvcmRlclJhZGl1cyIsInN0eWxlcyIsImNvbnRhaW5lciIsIl9JY29uIiwic291cmNlIiwiZGlzcGxheU5hbWUiLCJjcmVhdGUiLCJqdXN0aWZ5Q29udGVudCIsImFsaWduSXRlbXMiXSwic291cmNlcyI6WyJBdmF0YXJJY29uLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBWaWV3LCBWaWV3U3R5bGUsIFN0eWxlU2hlZXQsIFN0eWxlUHJvcCB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgSWNvbiwgeyBJY29uU291cmNlIH0gZnJvbSAnLi4vSWNvbic7XG5pbXBvcnQgeyB3aXRoVGhlbWUgfSBmcm9tICcuLi8uLi9jb3JlL3RoZW1pbmcnO1xuaW1wb3J0IHsgd2hpdGUgfSBmcm9tICcuLi8uLi9zdHlsZXMvY29sb3JzJztcbmltcG9ydCBnZXRDb250cmFzdGluZ0NvbG9yIGZyb20gJy4uLy4uL3V0aWxzL2dldENvbnRyYXN0aW5nQ29sb3InO1xuXG5jb25zdCBkZWZhdWx0U2l6ZSA9IDY0O1xuXG50eXBlIFByb3BzID0gUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRoUmVmPHR5cGVvZiBWaWV3PiAmIHtcbiAgLyoqXG4gICAqIEljb24gdG8gZGlzcGxheSBmb3IgdGhlIGBBdmF0YXJgLlxuICAgKi9cbiAgaWNvbjogSWNvblNvdXJjZTtcbiAgLyoqXG4gICAqIFNpemUgb2YgdGhlIGF2YXRhci5cbiAgICovXG4gIHNpemU/OiBudW1iZXI7XG4gIC8qKlxuICAgKiBDdXN0b20gY29sb3IgZm9yIHRoZSBpY29uLlxuICAgKi9cbiAgY29sb3I/OiBzdHJpbmc7XG4gIHN0eWxlPzogU3R5bGVQcm9wPFZpZXdTdHlsZT47XG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICovXG4gIHRoZW1lOiBSZWFjdE5hdGl2ZVBhcGVyLlRoZW1lO1xufTtcblxuLyoqXG4gKiBBdmF0YXJzIGNhbiBiZSB1c2VkIHRvIHJlcHJlc2VudCBwZW9wbGUgaW4gYSBncmFwaGljYWwgd2F5LlxuICpcbiAqIDxkaXYgY2xhc3M9XCJzY3JlZW5zaG90c1wiPlxuICogICA8ZmlndXJlPlxuICogICAgIDxpbWcgY2xhc3M9XCJtZWRpdW1cIiBzcmM9XCJzY3JlZW5zaG90cy9hdmF0YXItaWNvbi5wbmdcIiAvPlxuICogICA8L2ZpZ3VyZT5cbiAqIDwvZGl2PlxuICpcbiAqICMjIFVzYWdlXG4gKiBgYGBqc1xuICogaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuICogaW1wb3J0IHsgQXZhdGFyIH0gZnJvbSAncmVhY3QtbmF0aXZlLXBhcGVyJztcbiAqXG4gKiBjb25zdCBNeUNvbXBvbmVudCA9ICgpID0+IChcbiAqICAgPEF2YXRhci5JY29uIHNpemU9ezI0fSBpY29uPVwiZm9sZGVyXCIgLz5cbiAqICk7XG4gKiBgYGBcbiAqL1xuY29uc3QgQXZhdGFyID0gKHsgaWNvbiwgc2l6ZSA9IGRlZmF1bHRTaXplLCBzdHlsZSwgdGhlbWUsIC4uLnJlc3QgfTogUHJvcHMpID0+IHtcbiAgY29uc3QgeyBiYWNrZ3JvdW5kQ29sb3IgPSB0aGVtZS5jb2xvcnMucHJpbWFyeSwgLi4ucmVzdFN0eWxlIH0gPVxuICAgIFN0eWxlU2hlZXQuZmxhdHRlbihzdHlsZSkgfHwge307XG4gIGNvbnN0IHRleHRDb2xvciA9XG4gICAgcmVzdC5jb2xvciA/P1xuICAgIGdldENvbnRyYXN0aW5nQ29sb3IoYmFja2dyb3VuZENvbG9yLCB3aGl0ZSwgJ3JnYmEoMCwgMCwgMCwgLjU0KScpO1xuXG4gIHJldHVybiAoXG4gICAgPFZpZXdcbiAgICAgIHN0eWxlPXtbXG4gICAgICAgIHtcbiAgICAgICAgICB3aWR0aDogc2l6ZSxcbiAgICAgICAgICBoZWlnaHQ6IHNpemUsXG4gICAgICAgICAgYm9yZGVyUmFkaXVzOiBzaXplIC8gMixcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3IsXG4gICAgICAgIH0sXG4gICAgICAgIHN0eWxlcy5jb250YWluZXIsXG4gICAgICAgIHJlc3RTdHlsZSxcbiAgICAgIF19XG4gICAgICB7Li4ucmVzdH1cbiAgICA+XG4gICAgICA8SWNvbiBzb3VyY2U9e2ljb259IGNvbG9yPXt0ZXh0Q29sb3J9IHNpemU9e3NpemUgKiAwLjZ9IC8+XG4gICAgPC9WaWV3PlxuICApO1xufTtcblxuQXZhdGFyLmRpc3BsYXlOYW1lID0gJ0F2YXRhci5JY29uJztcblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICBjb250YWluZXI6IHtcbiAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gIH0sXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgd2l0aFRoZW1lKEF2YXRhcik7XG4iXX0=