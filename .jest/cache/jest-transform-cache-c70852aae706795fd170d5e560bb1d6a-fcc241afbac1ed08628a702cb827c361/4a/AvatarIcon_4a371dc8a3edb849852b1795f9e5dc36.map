{"version":3,"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,WAAW,GAAG,EAApB;;AAyCA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAgE;AAAA,MAA7DC,IAA6D,QAA7DA,IAA6D;AAAA,uBAAvDC,IAAuD;AAAA,MAAvDA,IAAuD,0BAAhDH,WAAgD;AAAA,MAAnCI,KAAmC,QAAnCA,KAAmC;AAAA,MAA5BC,KAA4B,QAA5BA,KAA4B;AAAA,MAAlBC,IAAkB;;AAAA;;AAC7E,cACEC,wBAAWC,OAAXD,CAAmBH,KAAnBG,KAA6B,EAD/B;AAAA,oCAAQE,eAAR;AAAA,MAAQA,eAAR,sCAA0BJ,KAAK,CAACK,MAANL,CAAaM,OAAvC;AAAA,MAAmDC,SAAnD;;AAEA,MAAMC,SAAS,kBACbP,IAAI,CAACQ,KADQ,qDAEb,kCAAoBL,eAApB,EAAqCM,aAArC,EAA4C,oBAA5C,CAFF;AAIA,SACEC,oBAACC,iBAAD;AACEb,SAAK,EAAE,CACL;AACEc,WAAK,EAAEf,IADT;AAEEgB,YAAM,EAAEhB,IAFV;AAGEiB,kBAAY,EAAEjB,IAAI,GAAG,CAHvB;AAIEM;AAJF,KADK,EAOLY,MAAM,CAACC,SAPF,EAQLV,SARK;AADT,KAWMN,IAXN,GAaEU,oBAACO,aAAD;AAAMC,UAAM,EAAEtB,IAAd;AAAoBY,SAAK,EAAED,SAA3B;AAAsCV,QAAI,EAAEA,IAAI,GAAG;AAAnD,IAbF,CADF;AAPF;;AA0BAF,MAAM,CAACwB,WAAPxB,GAAqB,aAArBA;;AAEA,IAAMoB,MAAM,GAAGd,wBAAWmB,MAAXnB,CAAkB;AAC/Be,WAAS,EAAE;AACTK,kBAAc,EAAE,QADP;AAETC,cAAU,EAAE;AAFH;AADoB,CAAlBrB,CAAf;;eAOe,wBAAUN,MAAV","names":["defaultSize","Avatar","icon","size","style","theme","rest","StyleSheet","flatten","backgroundColor","colors","primary","restStyle","textColor","color","white","React","_reactNative","width","height","borderRadius","styles","container","_Icon","source","displayName","create","justifyContent","alignItems"],"sources":["AvatarIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport Icon, { IconSource } from '../Icon';\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\nimport getContrastingColor from '../../utils/getContrastingColor';\n\nconst defaultSize = 64;\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Icon to display for the `Avatar`.\n   */\n  icon: IconSource;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  /**\n   * Custom color for the icon.\n   */\n  color?: string;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-icon.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Icon size={24} icon=\"folder\" />\n * );\n * ```\n */\nconst Avatar = ({ icon, size = defaultSize, style, theme, ...rest }: Props) => {\n  const { backgroundColor = theme.colors.primary, ...restStyle } =\n    StyleSheet.flatten(style) || {};\n  const textColor =\n    rest.color ??\n    getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n\n  return (\n    <View\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor,\n        },\n        styles.container,\n        restStyle,\n      ]}\n      {...rest}\n    >\n      <Icon source={icon} color={textColor} size={size * 0.6} />\n    </View>\n  );\n};\n\nAvatar.displayName = 'Avatar.Icon';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withTheme(Avatar);\n"]}