{"version":3,"mappings":";;;;;;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQA,IAAMA,YAAY,GAAG,KAArB;;AAEe,SAASC,mBAAT,OAKL;AAAA,MAJRC,OAIQ,QAJRA,OAIQ;AAAA,MAHRC,QAGQ,QAHRA,QAGQ;AAAA,MAFRC,KAEQ,QAFRA,KAEQ;AAAA,MADLC,IACK;;AACR,MAAIC,sBAASC,EAATD,KAAgB,KAApB,EAA2B;AACzB,WACEE,oBAACC,iBAAD;AAEEC,YAAM,EAAE,CAACR,OAFX;AAGEE,WAAK,EAAE,CACL;AAAEO,eAAO,EAAET,OAAO,GAAG,MAAH,GAAY;AAA9B,OADK,EAELU,MAAM,CAACC,SAFF,EAGLT,KAHK,CAHT;AAQEU,mBAAa,EAAEZ,OAAO,GAAG,MAAH,GAAY;AARpC,OASMG,IATN,GAWGF,QAXH,CADF;AAeD;;AAED,SACEK,oBAACC,iBAAD;AACEL,SAAK,EAAE,CAACQ,MAAM,CAACC,SAAR,EAAmBT,KAAnB,CADT;AAGEU,iBAAa,EAAEZ,OAAO,GAAG,MAAH,GAAY;AAHpC,KAKEM,oBAACC,iBAAD;AACEM,eAAW,EAAE,KADf;AAEEC,yBAAqB,EAGnBV,sBAASC,EAATD,KAAgB,KAAhBA,IAAyBA,sBAASC,EAATD,KAAgB,OAAzCA,GAAmD,CAACJ,OAApDI,GAA8D,IALlE;AAOEQ,iBAAa,EAAEZ,OAAO,GAAG,MAAH,GAAY,MAPpC;AAQEE,SAAK,EAAEF,OAAO,GAAGU,MAAM,CAACK,QAAV,GAAqBL,MAAM,CAACM;AAR5C,KAUGf,QAVH,CALF,CADF;AAoBD;;AAED,IAAMS,MAAM,GAAGO,wBAAWC,MAAXD,CAAkB;AAC/BN,WAAS,EAAE;AACTQ,QAAI,EAAE,CADG;AAETC,YAAQ,EAAE;AAFD,GADoB;AAK/BL,UAAQ,EAAE;AACRI,QAAI,EAAE;AADE,GALqB;AAQ/BH,UAAQ,EAAE;AACRG,QAAI,EAAE,CADE;AAERE,OAAG,EAAEvB;AAFG;AARqB,CAAlBmB,CAAf","names":["FAR_FAR_AWAY","ResourceSavingScene","visible","children","style","rest","Platform","OS","React","_reactNative","hidden","display","styles","container","pointerEvents","collapsable","removeClippedSubviews","attached","detached","StyleSheet","create","flex","overflow","top"],"sources":["ResourceSavingView.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Platform, StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\ntype Props = {\n  visible: boolean;\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst FAR_FAR_AWAY = 30000; // this should be big enough to move the whole view out of its container\n\nexport default function ResourceSavingScene({\n  visible,\n  children,\n  style,\n  ...rest\n}: Props) {\n  if (Platform.OS === 'web') {\n    return (\n      <View\n        // @ts-expect-error: hidden exists on web, but not in React Native\n        hidden={!visible}\n        style={[\n          { display: visible ? 'flex' : 'none' },\n          styles.container,\n          style,\n        ]}\n        pointerEvents={visible ? 'auto' : 'none'}\n        {...rest}\n      >\n        {children}\n      </View>\n    );\n  }\n\n  return (\n    <View\n      style={[styles.container, style]}\n      // box-none doesn't seem to work properly on Android\n      pointerEvents={visible ? 'auto' : 'none'}\n    >\n      <View\n        collapsable={false}\n        removeClippedSubviews={\n          // On iOS & macOS, set removeClippedSubviews to true only when not focused\n          // This is an workaround for a bug where the clipped view never re-appears\n          Platform.OS === 'ios' || Platform.OS === 'macos' ? !visible : true\n        }\n        pointerEvents={visible ? 'auto' : 'none'}\n        style={visible ? styles.attached : styles.detached}\n      >\n        {children}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  attached: {\n    flex: 1,\n  },\n  detached: {\n    flex: 1,\n    top: FAR_FAR_AWAY,\n  },\n});\n"]}