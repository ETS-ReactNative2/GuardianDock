4597252226ed353370176317e50acfd6
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ListAccordionGroupContext = void 0;

var React = _interopRequireWildcard(require("react"));

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

var ListAccordionGroupContext = React.createContext(null);
exports.ListAccordionGroupContext = ListAccordionGroupContext;

var ListAccordionGroup = function ListAccordionGroup(_ref) {
  var expandedIdProp = _ref.expandedId,
      onAccordionPress = _ref.onAccordionPress,
      children = _ref.children;

  var _React$useState = React.useState(undefined),
      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
      expandedId = _React$useState2[0],
      setExpandedId = _React$useState2[1];

  var onAccordionPressDefault = function onAccordionPressDefault(newExpandedId) {
    setExpandedId(function (currentExpandedId) {
      return currentExpandedId === newExpandedId ? undefined : newExpandedId;
    });
  };

  return React.createElement(ListAccordionGroupContext.Provider, {
    value: {
      expandedId: expandedIdProp || expandedId,
      onAccordionPress: onAccordionPress || onAccordionPressDefault
    }
  }, children);
};

ListAccordionGroup.displayName = 'List.AccordionGroup';
var _default = ListAccordionGroup;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBc0JPLElBQU1BLHlCQUF5QixHQUFHQyxLQUFLLENBQUNDLGFBQU5ELENBRXZDLElBRnVDQSxDQUFsQzs7O0FBeUNQLElBQU1FLGtCQUFrQixHQUFHLFNBQXJCQSxrQkFBcUIsT0FJZDtBQUFBLE1BSENDLGNBR0QsUUFIWEMsVUFHVztBQUFBLE1BRlhDLGdCQUVXLFFBRlhBLGdCQUVXO0FBQUEsTUFEWEMsUUFDVyxRQURYQSxRQUNXOztBQUNYLHdCQUFvQ04sS0FBSyxDQUFDTyxRQUFOUCxDQUVsQ1EsU0FGa0NSLENBQXBDO0FBQUE7QUFBQSxNQUFPSSxVQUFQO0FBQUEsTUFBbUJLLGFBQW5COztBQUlBLE1BQU1DLHVCQUF1QixHQUFJQyxTQUEzQkQsdUJBQTJCQyxjQUFELEVBQW9DO0FBQ2xFRixpQkFBYSxDQUFFRywyQkFBRDtBQUFBLGFBQ1pBLGlCQUFpQixLQUFLRCxhQUF0QkMsR0FBc0NKLFNBQXRDSSxHQUFrREQsYUFEdEM7QUFBQSxLQUFELENBQWJGO0FBREY7O0FBTUEsU0FDRVQsb0JBQUNELHlCQUFELENBQTJCYyxRQUEzQjtBQUNFQyxTQUFLLEVBQUU7QUFDTFYsZ0JBQVUsRUFBRUQsY0FBYyxJQUFJQyxVQUR6QjtBQUVMQyxzQkFBZ0IsRUFBRUEsZ0JBQWdCLElBQUlLO0FBRmpDO0FBRFQsS0FNR0osUUFOSCxDQURGO0FBZkY7O0FBMkJBSixrQkFBa0IsQ0FBQ2EsV0FBbkJiLEdBQWlDLHFCQUFqQ0E7ZUFFZUEiLCJuYW1lcyI6WyJMaXN0QWNjb3JkaW9uR3JvdXBDb250ZXh0IiwiUmVhY3QiLCJjcmVhdGVDb250ZXh0IiwiTGlzdEFjY29yZGlvbkdyb3VwIiwiZXhwYW5kZWRJZFByb3AiLCJleHBhbmRlZElkIiwib25BY2NvcmRpb25QcmVzcyIsImNoaWxkcmVuIiwidXNlU3RhdGUiLCJ1bmRlZmluZWQiLCJzZXRFeHBhbmRlZElkIiwib25BY2NvcmRpb25QcmVzc0RlZmF1bHQiLCJuZXdFeHBhbmRlZElkIiwiY3VycmVudEV4cGFuZGVkSWQiLCJQcm92aWRlciIsInZhbHVlIiwiZGlzcGxheU5hbWUiXSwic291cmNlcyI6WyJMaXN0QWNjb3JkaW9uR3JvdXAudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcblxudHlwZSBQcm9wcyA9IHtcbiAgLyoqXG4gICAqIEZ1bmN0aW9uIHRvIGV4ZWN1dGUgb24gc2VsZWN0aW9uIGNoYW5nZS5cbiAgICovXG4gIG9uQWNjb3JkaW9uUHJlc3M/OiAoZXhwYW5kZWRJZDogc3RyaW5nIHwgbnVtYmVyKSA9PiB2b2lkO1xuICAvKipcbiAgICogSWQgb2YgdGhlIGN1cnJlbnRseSBleHBhbmRlZCBsaXN0IGFjY29yZGlvblxuICAgKi9cbiAgZXhwYW5kZWRJZD86IHN0cmluZyB8IG51bWJlcjtcbiAgLyoqXG4gICAqIFJlYWN0IGVsZW1lbnRzIGNvbnRhaW5pbmcgbGlzdCBhY2NvcmRpb25zXG4gICAqL1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xufTtcblxuZXhwb3J0IHR5cGUgTGlzdEFjY29yZGlvbkdyb3VwQ29udGV4dFR5cGUgPSB7XG4gIGV4cGFuZGVkSWQ6IHN0cmluZyB8IG51bWJlciB8IHVuZGVmaW5lZDtcbiAgb25BY2NvcmRpb25QcmVzczogKGV4cGFuZGVkSWQ6IHN0cmluZyB8IG51bWJlcikgPT4gdm9pZDtcbn0gfCBudWxsO1xuXG5leHBvcnQgY29uc3QgTGlzdEFjY29yZGlvbkdyb3VwQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQ8XG4gIExpc3RBY2NvcmRpb25Hcm91cENvbnRleHRUeXBlXG4+KG51bGwpO1xuXG4vKipcbiAqIExpc3QuQWNjb3JkaW9uR3JvdXAgYWxsb3dzIHRvIGNvbnRyb2wgYSBncm91cCBvZiBMaXN0IEFjY29yZGlvbnMuIGBpZGAgcHJvcCBmb3IgTGlzdC5BY2NvcmRpb24gaXMgcmVxdWlyZWQgaW4gb3JkZXIgZm9yIGdyb3VwIHRvIHdvcmsuXG4gKiBMaXN0LkFjY29yZGlvbkdyb3VwIGNhbiBiZSBhIGNvbnRyb2xsZWQgb3IgdW5jb250cm9sbGVkIGNvbXBvbmVudC4gVGhlIGV4YW1wbGUgc2hvd3MgdGhlIHVuY29udHJvbGxlZCB2ZXJzaW9uLlxuICogQXQgbW9zdCBvbmUgQWNjb3JkaW9uIGNhbiBiZSBleHBhbmRlZCBhdCBhIGdpdmVuIHRpbWUuXG4gKlxuICogPGRpdiBjbGFzcz1cInNjcmVlbnNob3RzXCI+XG4gKiAgIDxpbWcgY2xhc3M9XCJtZWRpdW1cIiBzcmM9XCJzY3JlZW5zaG90cy9saXN0LWFjY29yZGlvbi1ncm91cC5wbmdcIiAvPlxuICogPC9kaXY+XG4gKlxuICogIyMgVXNhZ2VcbiAqIGBgYGpzXG4gKiBpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG4gKiBpbXBvcnQgeyBWaWV3LCBUZXh0IH0gZnJvbSAncmVhY3QtbmF0aXZlJztcbiAqIGltcG9ydCB7IExpc3QgfSBmcm9tICdyZWFjdC1uYXRpdmUtcGFwZXInO1xuICpcbiAqIGNvbnN0IE15Q29tcG9uZW50ID0gKCkgPT4gKFxuICogICA8TGlzdC5BY2NvcmRpb25Hcm91cD5cbiAqICAgICA8TGlzdC5BY2NvcmRpb24gdGl0bGU9XCJBY2NvcmRpb24gMVwiIGlkPVwiMVwiPlxuICogICAgICAgPExpc3QuSXRlbSB0aXRsZT1cIkl0ZW0gMVwiIC8+XG4gKiAgICAgPC9MaXN0LkFjY29yZGlvbj5cbiAqICAgICA8TGlzdC5BY2NvcmRpb24gdGl0bGU9XCJBY2NvcmRpb24gMlwiIGlkPVwiMlwiPlxuICogICAgICAgPExpc3QuSXRlbSB0aXRsZT1cIkl0ZW0gMlwiIC8+XG4gKiAgICAgPC9MaXN0LkFjY29yZGlvbj5cbiAqICAgICA8Vmlldz5cbiAqICAgICAgIDxUZXh0PlxuICogICAgICAgICBMaXN0LkFjY29yZGlvbiBjYW4gYmUgd3JhcHBlZCBiZWNhdXNlIGltcGxlbWVudGF0aW9uIHVzZXMgUmVhY3QuQ29udGV4dC5cbiAqICAgICAgIDwvVGV4dD5cbiAqICAgICAgIDxMaXN0LkFjY29yZGlvbiB0aXRsZT1cIkFjY29yZGlvbiAzXCIgaWQ9XCIzXCI+XG4gKiAgICAgICAgIDxMaXN0Lkl0ZW0gdGl0bGU9XCJJdGVtIDNcIiAvPlxuICogICAgICAgPC9MaXN0LkFjY29yZGlvbj5cbiAqICAgICA8L1ZpZXc+XG4gKiAgIDwvTGlzdC5BY2NvcmRpb25Hcm91cD5cbiAqICk7XG4gKlxuICogZXhwb3J0IGRlZmF1bHQgTXlDb21wb25lbnQ7XG4gKmBgYFxuICovXG5jb25zdCBMaXN0QWNjb3JkaW9uR3JvdXAgPSAoe1xuICBleHBhbmRlZElkOiBleHBhbmRlZElkUHJvcCxcbiAgb25BY2NvcmRpb25QcmVzcyxcbiAgY2hpbGRyZW4sXG59OiBQcm9wcykgPT4ge1xuICBjb25zdCBbZXhwYW5kZWRJZCwgc2V0RXhwYW5kZWRJZF0gPSBSZWFjdC51c2VTdGF0ZTxcbiAgICBzdHJpbmcgfCBudW1iZXIgfCB1bmRlZmluZWRcbiAgPih1bmRlZmluZWQpO1xuXG4gIGNvbnN0IG9uQWNjb3JkaW9uUHJlc3NEZWZhdWx0ID0gKG5ld0V4cGFuZGVkSWQ6IHN0cmluZyB8IG51bWJlcikgPT4ge1xuICAgIHNldEV4cGFuZGVkSWQoKGN1cnJlbnRFeHBhbmRlZElkKSA9PlxuICAgICAgY3VycmVudEV4cGFuZGVkSWQgPT09IG5ld0V4cGFuZGVkSWQgPyB1bmRlZmluZWQgOiBuZXdFeHBhbmRlZElkXG4gICAgKTtcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxMaXN0QWNjb3JkaW9uR3JvdXBDb250ZXh0LlByb3ZpZGVyXG4gICAgICB2YWx1ZT17e1xuICAgICAgICBleHBhbmRlZElkOiBleHBhbmRlZElkUHJvcCB8fCBleHBhbmRlZElkLCAvLyBjb21wb25lbnQgY2FuIGJlIGNvbnRyb2xsZWQgb3IgdW5jb250cm9sbGVkXG4gICAgICAgIG9uQWNjb3JkaW9uUHJlc3M6IG9uQWNjb3JkaW9uUHJlc3MgfHwgb25BY2NvcmRpb25QcmVzc0RlZmF1bHQsXG4gICAgICB9fVxuICAgID5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L0xpc3RBY2NvcmRpb25Hcm91cENvbnRleHQuUHJvdmlkZXI+XG4gICk7XG59O1xuXG5MaXN0QWNjb3JkaW9uR3JvdXAuZGlzcGxheU5hbWUgPSAnTGlzdC5BY2NvcmRpb25Hcm91cCc7XG5cbmV4cG9ydCBkZWZhdWx0IExpc3RBY2NvcmRpb25Hcm91cDtcbiJdfQ==