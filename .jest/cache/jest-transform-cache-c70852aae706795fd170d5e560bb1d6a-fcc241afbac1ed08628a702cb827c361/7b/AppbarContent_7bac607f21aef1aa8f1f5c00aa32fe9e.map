{"version":3,"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;AASA;;AAEA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+DA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,OAWT;AAAA,wBAVXC,KAUW;AAAA,MAVJC,UAUI,2BAVSC,aAUT;AAAA,MATXC,QASW,QATXA,QASW;AAAA,MARXC,aAQW,QARXA,aAQW;AAAA,MAPXC,OAOW,QAPXA,OAOW;AAAA,MANXC,KAMW,QANXA,KAMW;AAAA,MALXC,QAKW,QALXA,QAKW;AAAA,MAJXC,UAIW,QAJXA,UAIW;AAAA,MAHXC,KAGW,QAHXA,KAGW;AAAA,MAFXC,KAEW,QAFXA,KAEW;AAAA,MADRC,IACQ;AACX,MAAQC,KAAR,GAAkBH,KAAlB,CAAQG,KAAR;AAEA,MAAMC,aAAa,GAAG,oBAAMZ,UAAN,EAAkBa,KAAlB,CAAwB,GAAxB,EAA6BC,GAA7B,GAAmCC,MAAnC,EAAtB;AAEA,SACEC,oBAACC,qCAAD;AAA0Bb,WAAO,EAAEA,OAAnC;AAA4Cc,YAAQ,EAAE,CAACd;AAAvD,KACEY,oBAACC,iBAAD;AAAMZ,SAAK,EAAE,CAACc,MAAM,CAACC,SAAR,EAAmBf,KAAnB;AAAb,KAA4CK,IAA5C,GACEM,oBAACK,aAAD;AACEC,OAAG,EAAEhB,QADP;AAEED,SAAK,EAAE;AAEHN,WAAK,EAAEC;AAFJ,OAGCuB,sBAASC,EAATD,KAAgB,KAAhBA,GAAwBZ,KAAK,CAACc,OAA9BF,GAAwCZ,KAAK,CAACe,MAH/C,GAKLP,MAAM,CAACV,KALF,EAMLF,UANK,CAFT;AAUEoB,iBAAa,EAAE,CAVjB;AAWEC,cAAU,MAXZ;AAYEC,uBAAmB,EAAC,QAZtB;AAcEC,qBAAiB,EAAEP,sBAASC,EAATD,KAAgB,KAAhBA,GAAwB,SAAxBA,GAAoC;AAdzD,KAgBGd,KAhBH,CADF,EAmBGP,QAAQ,GACPc,oBAACK,aAAD;AACEhB,SAAK,EAAE,CAACc,MAAM,CAACjB,QAAR,EAAkB;AAAEH,WAAK,EAAEa;AAAT,KAAlB,EAA4CT,aAA5C,CADT;AAEEwB,iBAAa,EAAE;AAFjB,KAIGzB,QAJH,CADO,GAOL,IA1BN,CADF,CADF;AAhBF;;AAkDAJ,aAAa,CAACiC,WAAdjC,GAA4B,gBAA5BA;;AAEA,IAAMqB,MAAM,GAAGa,wBAAWC,MAAXD,CAAkB;AAC/BZ,WAAS,EAAE;AACTc,QAAI,EAAE,CADG;AAETC,qBAAiB,EAAE;AAFV,GADoB;AAK/B1B,OAAK,EAAE;AACL2B,YAAQ,EAAEb,sBAASC,EAATD,KAAgB,KAAhBA,GAAwB,EAAxBA,GAA6B;AADlC,GALwB;AAQ/BrB,UAAQ,EAAE;AACRkC,YAAQ,EAAEb,sBAASC,EAATD,KAAgB,KAAhBA,GAAwB,EAAxBA,GAA6B;AAD/B;AARqB,CAAlBS,CAAf;;eAae,wBAAUlC,aAAV;;;AAGf,IAAMuC,sBAAsB,GAAG,wBAAUvC,aAAV,CAA/B","names":["AppbarContent","color","titleColor","white","subtitle","subtitleStyle","onPress","style","titleRef","titleStyle","theme","title","rest","fonts","subtitleColor","alpha","rgb","string","React","_reactNative","disabled","styles","container","_Text","ref","Platform","OS","regular","medium","numberOfLines","accessible","accessibilityTraits","accessibilityRole","displayName","StyleSheet","create","flex","paddingHorizontal","fontSize","AppbarContentWithTheme"],"sources":["AppbarContent.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\n\nimport Text from '../Typography/Text';\n\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\n\nimport type { $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof View> & {\n  /**\n   * Custom color for the text.\n   */\n  color?: string;\n  /**\n   * Text for the title.\n   */\n  title: React.ReactNode;\n  /**\n   * Style for the title.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Reference for the title.\n   */\n  titleRef?: React.RefObject<Text>;\n  /**\n   * Text for the subtitle.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * Style for the subtitle.\n   */\n  subtitleStyle?: StyleProp<TextStyle>;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component used to display a title and optional subtitle in an appbar.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-content.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *        <Appbar.Content title=\"Title\" subtitle={'Subtitle'} />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarContent = ({\n  color: titleColor = white,\n  subtitle,\n  subtitleStyle,\n  onPress,\n  style,\n  titleRef,\n  titleStyle,\n  theme,\n  title,\n  ...rest\n}: Props) => {\n  const { fonts } = theme;\n\n  const subtitleColor = color(titleColor).alpha(0.7).rgb().string();\n\n  return (\n    <TouchableWithoutFeedback onPress={onPress} disabled={!onPress}>\n      <View style={[styles.container, style]} {...rest}>\n        <Text\n          ref={titleRef}\n          style={[\n            {\n              color: titleColor,\n              ...(Platform.OS === 'ios' ? fonts.regular : fonts.medium),\n            },\n            styles.title,\n            titleStyle,\n          ]}\n          numberOfLines={1}\n          accessible\n          accessibilityTraits=\"header\"\n          // @ts-expect-error React Native doesn't accept 'heading' as it's web-only\n          accessibilityRole={Platform.OS === 'web' ? 'heading' : 'header'}\n        >\n          {title}\n        </Text>\n        {subtitle ? (\n          <Text\n            style={[styles.subtitle, { color: subtitleColor }, subtitleStyle]}\n            numberOfLines={1}\n          >\n            {subtitle}\n          </Text>\n        ) : null}\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nAppbarContent.displayName = 'Appbar.Content';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12,\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20,\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14,\n  },\n});\n\nexport default withTheme(AppbarContent);\n\n// @component-docs ignore-next-line\nconst AppbarContentWithTheme = withTheme(AppbarContent);\n// @component-docs ignore-next-line\nexport { AppbarContentWithTheme as AppbarContent };\n"]}