b25a84c769538f7532d5e4c7142a75c9
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");

var _slicedToArray2 = _interopRequireDefault2(require("@babel/runtime/helpers/slicedToArray"));

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Screen;

var _native = require("@react-navigation/native");

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _reactNativeSafeAreaContext = require("react-native-safe-area-context");

var _Background = _interopRequireDefault(require("./Background"));

var _getDefaultHeaderHeight = _interopRequireDefault(require("./Header/getDefaultHeaderHeight"));

var _HeaderHeightContext = _interopRequireDefault(require("./Header/HeaderHeightContext"));

var _HeaderShownContext = _interopRequireDefault(require("./Header/HeaderShownContext"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}

function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache(nodeInterop);

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function Screen(props) {
  var dimensions = (0, _reactNativeSafeAreaContext.useSafeAreaFrame)();
  var insets = (0, _reactNativeSafeAreaContext.useSafeAreaInsets)();
  var isParentHeaderShown = React.useContext(_HeaderShownContext.default);
  var parentHeaderHeight = React.useContext(_HeaderHeightContext.default);
  var focused = props.focused,
      _props$modal = props.modal,
      modal = _props$modal === void 0 ? false : _props$modal,
      header = props.header,
      _props$headerShown = props.headerShown,
      headerShown = _props$headerShown === void 0 ? true : _props$headerShown,
      headerTransparent = props.headerTransparent,
      _props$headerStatusBa = props.headerStatusBarHeight,
      headerStatusBarHeight = _props$headerStatusBa === void 0 ? isParentHeaderShown ? 0 : insets.top : _props$headerStatusBa,
      navigation = props.navigation,
      route = props.route,
      children = props.children,
      style = props.style;

  var _React$useState = React.useState(function () {
    return (0, _getDefaultHeaderHeight.default)(dimensions, modal, headerStatusBarHeight);
  }),
      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
      headerHeight = _React$useState2[0],
      setHeaderHeight = _React$useState2[1];

  return React.createElement(_Background.default, {
    accessibilityElementsHidden: !focused,
    importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',
    style: [styles.container, style]
  }, React.createElement(_reactNative.View, {
    style: styles.content
  }, React.createElement(_HeaderShownContext.default.Provider, {
    value: isParentHeaderShown || headerShown !== false
  }, React.createElement(_HeaderHeightContext.default.Provider, {
    value: headerShown ? headerHeight : parentHeaderHeight !== null && parentHeaderHeight !== void 0 ? parentHeaderHeight : 0
  }, children))), headerShown ? React.createElement(_native.NavigationContext.Provider, {
    value: navigation
  }, React.createElement(_native.NavigationRouteContext.Provider, {
    value: route
  }, React.createElement(_reactNative.View, {
    onLayout: function onLayout(e) {
      var height = e.nativeEvent.layout.height;
      setHeaderHeight(height);
    },
    style: headerTransparent ? styles.absolute : null
  }, header))) : null);
}

var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    flexDirection: 'column-reverse'
  },
  content: {
    flex: 1
  },
  absolute: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QU0sR0FBR2Usd0JBQVdDLE1BQVhELENBQWtCO0FBQy9CZCxXQUFTLEVBQUU7QUFDVGdCLFFBQUksRUFBRSxDQURHO0FBRVRDLGlCQUFhLEVBQUU7QUFGTixHQURvQjtBQU0vQmYsU0FBTyxFQUFFO0FBQ1BjLFFBQUksRUFBRTtBQURDLEdBTnNCO0FBUy9CSCxVQUFRLEVBQUU7QUFDUkssWUFBUSxFQUFFLFVBREY7QUFFUjlCLE9BQUcsRUFBRSxDQUZHO0FBR1IrQixRQUFJLEVBQUUsQ0FIRTtBQUlSQyxTQUFLLEVBQUU7QUFKQztBQVRxQixDQUFsQk4sQ0FBZiIsIm5hbWVzIjpbIlNjcmVlbiIsInByb3BzIiwiZGltZW5zaW9ucyIsImluc2V0cyIsImlzUGFyZW50SGVhZGVyU2hvd24iLCJSZWFjdCIsInVzZUNvbnRleHQiLCJIZWFkZXJTaG93bkNvbnRleHQiLCJwYXJlbnRIZWFkZXJIZWlnaHQiLCJIZWFkZXJIZWlnaHRDb250ZXh0IiwiZm9jdXNlZCIsIm1vZGFsIiwiaGVhZGVyIiwiaGVhZGVyU2hvd24iLCJoZWFkZXJUcmFuc3BhcmVudCIsImhlYWRlclN0YXR1c0JhckhlaWdodCIsInRvcCIsIm5hdmlnYXRpb24iLCJyb3V0ZSIsImNoaWxkcmVuIiwic3R5bGUiLCJ1c2VTdGF0ZSIsImhlYWRlckhlaWdodCIsInNldEhlYWRlckhlaWdodCIsIl9CYWNrZ3JvdW5kIiwiYWNjZXNzaWJpbGl0eUVsZW1lbnRzSGlkZGVuIiwiaW1wb3J0YW50Rm9yQWNjZXNzaWJpbGl0eSIsInN0eWxlcyIsImNvbnRhaW5lciIsIl9yZWFjdE5hdGl2ZSIsImNvbnRlbnQiLCJfSGVhZGVyU2hvd25Db250ZXh0IiwiUHJvdmlkZXIiLCJ2YWx1ZSIsIl9IZWFkZXJIZWlnaHRDb250ZXh0IiwiX25hdGl2ZSIsIm9uTGF5b3V0IiwiZSIsImhlaWdodCIsIm5hdGl2ZUV2ZW50IiwibGF5b3V0IiwiYWJzb2x1dGUiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwiZmxleCIsImZsZXhEaXJlY3Rpb24iLCJwb3NpdGlvbiIsImxlZnQiLCJyaWdodCJdLCJzb3VyY2VzIjpbIlNjcmVlbi50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgTmF2aWdhdGlvbkNvbnRleHQsXG4gIE5hdmlnYXRpb25Qcm9wLFxuICBOYXZpZ2F0aW9uUm91dGVDb250ZXh0LFxuICBQYXJhbUxpc3RCYXNlLFxuICBSb3V0ZVByb3AsXG59IGZyb20gJ0ByZWFjdC1uYXZpZ2F0aW9uL25hdGl2ZSc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBTdHlsZVByb3AsIFN0eWxlU2hlZXQsIFZpZXcsIFZpZXdTdHlsZSB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQge1xuICB1c2VTYWZlQXJlYUZyYW1lLFxuICB1c2VTYWZlQXJlYUluc2V0cyxcbn0gZnJvbSAncmVhY3QtbmF0aXZlLXNhZmUtYXJlYS1jb250ZXh0JztcblxuaW1wb3J0IEJhY2tncm91bmQgZnJvbSAnLi9CYWNrZ3JvdW5kJztcbmltcG9ydCBnZXREZWZhdWx0SGVhZGVySGVpZ2h0IGZyb20gJy4vSGVhZGVyL2dldERlZmF1bHRIZWFkZXJIZWlnaHQnO1xuaW1wb3J0IEhlYWRlckhlaWdodENvbnRleHQgZnJvbSAnLi9IZWFkZXIvSGVhZGVySGVpZ2h0Q29udGV4dCc7XG5pbXBvcnQgSGVhZGVyU2hvd25Db250ZXh0IGZyb20gJy4vSGVhZGVyL0hlYWRlclNob3duQ29udGV4dCc7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIGZvY3VzZWQ6IGJvb2xlYW47XG4gIG1vZGFsPzogYm9vbGVhbjtcbiAgbmF2aWdhdGlvbjogTmF2aWdhdGlvblByb3A8UGFyYW1MaXN0QmFzZT47XG4gIHJvdXRlOiBSb3V0ZVByb3A8UGFyYW1MaXN0QmFzZT47XG4gIGhlYWRlcjogUmVhY3QuUmVhY3ROb2RlO1xuICBoZWFkZXJTaG93bj86IGJvb2xlYW47XG4gIGhlYWRlclN0YXR1c0JhckhlaWdodD86IG51bWJlcjtcbiAgaGVhZGVyVHJhbnNwYXJlbnQ/OiBib29sZWFuO1xuICBzdHlsZT86IFN0eWxlUHJvcDxWaWV3U3R5bGU+O1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gU2NyZWVuKHByb3BzOiBQcm9wcykge1xuICBjb25zdCBkaW1lbnNpb25zID0gdXNlU2FmZUFyZWFGcmFtZSgpO1xuICBjb25zdCBpbnNldHMgPSB1c2VTYWZlQXJlYUluc2V0cygpO1xuXG4gIGNvbnN0IGlzUGFyZW50SGVhZGVyU2hvd24gPSBSZWFjdC51c2VDb250ZXh0KEhlYWRlclNob3duQ29udGV4dCk7XG4gIGNvbnN0IHBhcmVudEhlYWRlckhlaWdodCA9IFJlYWN0LnVzZUNvbnRleHQoSGVhZGVySGVpZ2h0Q29udGV4dCk7XG5cbiAgY29uc3Qge1xuICAgIGZvY3VzZWQsXG4gICAgbW9kYWwgPSBmYWxzZSxcbiAgICBoZWFkZXIsXG4gICAgaGVhZGVyU2hvd24gPSB0cnVlLFxuICAgIGhlYWRlclRyYW5zcGFyZW50LFxuICAgIGhlYWRlclN0YXR1c0JhckhlaWdodCA9IGlzUGFyZW50SGVhZGVyU2hvd24gPyAwIDogaW5zZXRzLnRvcCxcbiAgICBuYXZpZ2F0aW9uLFxuICAgIHJvdXRlLFxuICAgIGNoaWxkcmVuLFxuICAgIHN0eWxlLFxuICB9ID0gcHJvcHM7XG5cbiAgY29uc3QgW2hlYWRlckhlaWdodCwgc2V0SGVhZGVySGVpZ2h0XSA9IFJlYWN0LnVzZVN0YXRlKCgpID0+XG4gICAgZ2V0RGVmYXVsdEhlYWRlckhlaWdodChkaW1lbnNpb25zLCBtb2RhbCwgaGVhZGVyU3RhdHVzQmFySGVpZ2h0KVxuICApO1xuXG4gIHJldHVybiAoXG4gICAgPEJhY2tncm91bmRcbiAgICAgIGFjY2Vzc2liaWxpdHlFbGVtZW50c0hpZGRlbj17IWZvY3VzZWR9XG4gICAgICBpbXBvcnRhbnRGb3JBY2Nlc3NpYmlsaXR5PXtmb2N1c2VkID8gJ2F1dG8nIDogJ25vLWhpZGUtZGVzY2VuZGFudHMnfVxuICAgICAgc3R5bGU9e1tzdHlsZXMuY29udGFpbmVyLCBzdHlsZV19XG4gICAgPlxuICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5jb250ZW50fT5cbiAgICAgICAgPEhlYWRlclNob3duQ29udGV4dC5Qcm92aWRlclxuICAgICAgICAgIHZhbHVlPXtpc1BhcmVudEhlYWRlclNob3duIHx8IGhlYWRlclNob3duICE9PSBmYWxzZX1cbiAgICAgICAgPlxuICAgICAgICAgIDxIZWFkZXJIZWlnaHRDb250ZXh0LlByb3ZpZGVyXG4gICAgICAgICAgICB2YWx1ZT17aGVhZGVyU2hvd24gPyBoZWFkZXJIZWlnaHQgOiBwYXJlbnRIZWFkZXJIZWlnaHQgPz8gMH1cbiAgICAgICAgICA+XG4gICAgICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgICAgPC9IZWFkZXJIZWlnaHRDb250ZXh0LlByb3ZpZGVyPlxuICAgICAgICA8L0hlYWRlclNob3duQ29udGV4dC5Qcm92aWRlcj5cbiAgICAgIDwvVmlldz5cbiAgICAgIHtoZWFkZXJTaG93biA/IChcbiAgICAgICAgPE5hdmlnYXRpb25Db250ZXh0LlByb3ZpZGVyIHZhbHVlPXtuYXZpZ2F0aW9ufT5cbiAgICAgICAgICA8TmF2aWdhdGlvblJvdXRlQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17cm91dGV9PlxuICAgICAgICAgICAgPFZpZXdcbiAgICAgICAgICAgICAgb25MYXlvdXQ9eyhlKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyBoZWlnaHQgfSA9IGUubmF0aXZlRXZlbnQubGF5b3V0O1xuXG4gICAgICAgICAgICAgICAgc2V0SGVhZGVySGVpZ2h0KGhlaWdodCk7XG4gICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgIHN0eWxlPXtoZWFkZXJUcmFuc3BhcmVudCA/IHN0eWxlcy5hYnNvbHV0ZSA6IG51bGx9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgIHtoZWFkZXJ9XG4gICAgICAgICAgICA8L1ZpZXc+XG4gICAgICAgICAgPC9OYXZpZ2F0aW9uUm91dGVDb250ZXh0LlByb3ZpZGVyPlxuICAgICAgICA8L05hdmlnYXRpb25Db250ZXh0LlByb3ZpZGVyPlxuICAgICAgKSA6IG51bGx9XG4gICAgPC9CYWNrZ3JvdW5kPlxuICApO1xufVxuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIGNvbnRhaW5lcjoge1xuICAgIGZsZXg6IDEsXG4gICAgZmxleERpcmVjdGlvbjogJ2NvbHVtbi1yZXZlcnNlJyxcbiAgfSxcbiAgLy8gVGhpcyBpcyBuZWNlc3NhcnkgdG8gYXZvaWQgYXBwbHlpbmcgJ2NvbHVtbi1yZXZlcnNlJyB0byBzY3JlZW4gY29udGVudFxuICBjb250ZW50OiB7XG4gICAgZmxleDogMSxcbiAgfSxcbiAgYWJzb2x1dGU6IHtcbiAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICB0b3A6IDAsXG4gICAgbGVmdDogMCxcbiAgICByaWdodDogMCxcbiAgfSxcbn0pO1xuIl19