{"version":3,"mappings":";;;;;;;AAAA;;;;AAKA,IAAMA,wBAAwB,sDAC5BC,2BAAcC,oBADc,qFAC5BC,uBAAoCC,gBADR,qFAC5BC,uBAAsDC,iBAD1B,2DAC5BC,uBACIC,eAFwB,yEAEL,CAFzB;;AAIO,IAAMC,uBAAuB,GAAGC,sBAASC,MAATD,CAAgB;AACrDE,SAAO,EAAEZ,wBAD4C;AAErDa,KAAG,EAAEH,sBAASI,OAATJ,GAAmB,EAAnBA,GAAwBV,wBAAxBU,GAAmD;AAFH,CAAhBA,CAAhC","names":["estimatedStatusBarHeight","NativeModules","NativeUnimoduleProxy","_NativeModules$Native2","modulesConstants","_NativeModules$Native3","ExponentConstants","_NativeModules$Native4","statusBarHeight","APPROX_STATUSBAR_HEIGHT","Platform","select","android","ios","Version"],"sources":["constants.tsx"],"sourcesContent":["import { NativeModules, Platform } from 'react-native';\n\n// Use the existence of expo-constants as a heuristic for determining if the\n// status bar is translucent on Android. This should be replaced in the future\n// with react-native-safe-area-context.\nconst estimatedStatusBarHeight =\n  NativeModules.NativeUnimoduleProxy?.modulesConstants?.ExponentConstants\n    ?.statusBarHeight ?? 0;\n\nexport const APPROX_STATUSBAR_HEIGHT = Platform.select({\n  android: estimatedStatusBarHeight,\n  ios: Platform.Version < 11 ? estimatedStatusBarHeight : 0,\n});\n"]}