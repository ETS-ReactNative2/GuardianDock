{"version":3,"mappings":"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","names":["isImageSource","source","Object","prototype","hasOwnProperty","call","uri","Platform","OS","startsWith","test","getIconId","isValidIcon","isEqualIcon","a","b","Icon","color","size","theme","rest","direction","I18nManager","isRTL","s","iconColor","colors","text","React","_reactNative","style","transform","scaleX","width","height","tintColor","resizeMode","accessibilityProps","_settings","icon","name"],"sources":["Icon.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Image,\n  I18nManager,\n  Platform,\n  ImageSourcePropType,\n} from 'react-native';\nimport { Consumer as SettingsConsumer } from '../core/settings';\nimport { accessibilityProps } from './MaterialCommunityIcon';\nimport { withTheme } from '../core/theming';\n\ntype IconSourceBase = string | ImageSourcePropType;\n\nexport type IconSource =\n  | IconSourceBase\n  | Readonly<{ source: IconSourceBase; direction: 'rtl' | 'ltr' | 'auto' }>\n  | ((props: IconProps & { color: string }) => React.ReactNode);\n\ntype IconProps = {\n  size: number;\n  allowFontScaling?: boolean;\n};\n\ntype Props = IconProps & {\n  color?: string;\n  source: any;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst isImageSource = (source: any) =>\n  // source is an object with uri\n  (typeof source === 'object' &&\n    source !== null &&\n    Object.prototype.hasOwnProperty.call(source, 'uri') &&\n    typeof source.uri === 'string') ||\n  // source is a module, e.g. - require('image')\n  typeof source === 'number' ||\n  // image url on web\n  (Platform.OS === 'web' &&\n    typeof source === 'string' &&\n    (source.startsWith('data:image') ||\n      /\\.(bmp|jpg|jpeg|png|gif|svg)$/.test(source)));\n\nconst getIconId = (source: any) => {\n  if (\n    typeof source === 'object' &&\n    source !== null &&\n    Object.prototype.hasOwnProperty.call(source, 'uri') &&\n    typeof source.uri === 'string'\n  ) {\n    return source.uri;\n  }\n\n  return source;\n};\n\nexport const isValidIcon = (source: any) =>\n  typeof source === 'string' ||\n  typeof source === 'function' ||\n  isImageSource(source);\n\nexport const isEqualIcon = (a: any, b: any) =>\n  a === b || getIconId(a) === getIconId(b);\n\nconst Icon = ({ source, color, size, theme, ...rest }: Props) => {\n  const direction =\n    typeof source === 'object' && source.direction && source.source\n      ? source.direction === 'auto'\n        ? I18nManager.isRTL\n          ? 'rtl'\n          : 'ltr'\n        : source.direction\n      : null;\n  const s =\n    typeof source === 'object' && source.direction && source.source\n      ? source.source\n      : source;\n  const iconColor = color || theme.colors.text;\n\n  if (isImageSource(s)) {\n    return (\n      <Image\n        {...rest}\n        source={s}\n        style={[\n          {\n            transform: [{ scaleX: direction === 'rtl' ? -1 : 1 }],\n          },\n          // eslint-disable-next-line react-native/no-inline-styles\n          {\n            width: size,\n            height: size,\n            tintColor: color,\n            resizeMode: 'contain',\n          },\n        ]}\n        {...accessibilityProps}\n      />\n    );\n  } else if (typeof s === 'string') {\n    return (\n      <SettingsConsumer>\n        {({ icon }) => {\n          return icon({\n            name: s,\n            color: iconColor,\n            size,\n            direction,\n          });\n        }}\n      </SettingsConsumer>\n    );\n  } else if (typeof s === 'function') {\n    return s({ color: iconColor, size, direction });\n  }\n\n  return null;\n};\n\nexport default withTheme(Icon);\n"]}