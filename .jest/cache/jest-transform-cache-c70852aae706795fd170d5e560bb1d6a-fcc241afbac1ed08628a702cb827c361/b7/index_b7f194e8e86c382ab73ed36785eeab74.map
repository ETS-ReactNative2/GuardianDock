{"version":3,"mappings":";;;;;;;;AAOA,SAASA,SAAT;MACEC;MACAC;AAKA,MAAMC,YAAY,GAAGC,aAAmB,EAAnBA,EAAuBC,OAA5C;;AACA,MAAIJ,MAAM,IAAI,CAACE,YAAY,CAACG,OAA5B,EAAqC;AACnCH,gBAAY,CAACG,OAAbH,GAAuB,IAAII,OAAJ,CAAY,UAACC,GAAD;AACjCL,kBAAY,CAACM,OAAbN,GAAuBK,GAAvBL;AADqB,MAAvBA;AAGA,UAAMA,YAAY,CAACG,OAAnB;AAJF,SAKO,IAAIL,MAAJ,EAAY;AACjB,UAAME,YAAY,CAACG,OAAnB;AADK,SAEA,IAAIH,YAAY,CAACG,OAAjB,EAA0B;AAC/BH,gBAAY,CAACM,OAAbN;AACAA,gBAAY,CAACG,OAAbH,GAAuBO,SAAvBP;AACD;;AAED,SAAOQ,6BAACC,cAADD,QAAWT,QAAXS,CAAP;AACD;;SAQeE;MAASZ;MAAQC;gCAAUY;MAAAA,6CAAc,IAAdA,GAAcC;AACvD,SACEJ,6BAACK,cAADL;AAAUM,YAAQ,EAAEH;AAApB,KACEH,6BAACX,SAADW;AAAWV,UAAM,EAAEA;AAAnB,KAA4BC,QAA5BS,CADFA,CADF;AAKD","names":["Suspender","freeze","children","promiseCache","useRef","current","promise","Promise","res","resolve","undefined","React","Fragment","Freeze","placeholder","_ref2$placeholder","Suspense","fallback"],"sources":["../src/index.tsx"],"sourcesContent":["import React, { useRef, Suspense, Fragment } from \"react\";\n\ninterface StorageRef {\n  promise?: Promise<void>;\n  resolve?: (value: void | PromiseLike<void>) => void;\n}\n\nfunction Suspender({\n  freeze,\n  children,\n}: {\n  freeze: boolean;\n  children: React.ReactNode;\n}) {\n  const promiseCache = useRef<StorageRef>({}).current;\n  if (freeze && !promiseCache.promise) {\n    promiseCache.promise = new Promise((res) => {\n      promiseCache.resolve = res;\n    });\n    throw promiseCache.promise;\n  } else if (freeze) {\n    throw promiseCache.promise;\n  } else if (promiseCache.promise) {\n    promiseCache.resolve!();\n    promiseCache.promise = undefined;\n  }\n\n  return <Fragment>{children}</Fragment>;\n}\n\ninterface Props {\n  freeze: boolean;\n  children: React.ReactNode;\n  placeholder?: React.ReactNode;\n}\n\nexport function Freeze({ freeze, children, placeholder = null }: Props) {\n  return (\n    <Suspense fallback={placeholder}>\n      <Suspender freeze={freeze}>{children}</Suspender>\n    </Suspense>\n  );\n}\n"]}