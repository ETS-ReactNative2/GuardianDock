4a2a13dbb60d14c12394e150fabc0375
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");

var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));

var _excluded = ["children", "theme", "style"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DialogTitle = exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _Title = _interopRequireDefault(require("../Typography/Title"));

var _theming = require("../../core/theming");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj.default = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var DialogTitle = function DialogTitle(_ref) {
  var children = _ref.children,
      theme = _ref.theme,
      style = _ref.style,
      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  return React.createElement(_Title.default, _extends({
    accessibilityTraits: "header",
    accessibilityRole: "header",
    style: [styles.text, {
      color: theme.colors.text
    }, style]
  }, rest), children);
};

exports.DialogTitle = DialogTitle;
DialogTitle.displayName = 'Dialog.Title';

var styles = _reactNative.StyleSheet.create({
  text: {
    marginTop: 22,
    marginBottom: 18,
    marginHorizontal: 24
  }
});

var _default = (0, _theming.withTheme)(DialogTitle);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWdEQSxJQUFNQSxXQUFXLEdBQUcsU0FBZEEsV0FBYztBQUFBLE1BQUdDLFFBQUgsUUFBR0EsUUFBSDtBQUFBLE1BQWFDLEtBQWIsUUFBYUEsS0FBYjtBQUFBLE1BQW9CQyxLQUFwQixRQUFvQkEsS0FBcEI7QUFBQSxNQUE4QkMsSUFBOUI7QUFBQSxTQUNsQkMsb0JBQUNDLGNBQUQ7QUFFRUMsdUJBQW1CLEVBQUMsUUFGdEI7QUFHRUMscUJBQWlCLEVBQUMsUUFIcEI7QUFJRUwsU0FBSyxFQUFFLENBQUNNLE1BQU0sQ0FBQ0MsSUFBUixFQUFjO0FBQUVDLFdBQUssRUFBRVQsS0FBSyxDQUFDVSxNQUFOVixDQUFhUTtBQUF0QixLQUFkLEVBQTRDUCxLQUE1QztBQUpULEtBS01DLElBTE4sR0FPR0gsUUFQSCxDQURrQjtBQUFBLENBQXBCOzs7QUFZQUQsV0FBVyxDQUFDYSxXQUFaYixHQUEwQixjQUExQkE7O0FBRUEsSUFBTVMsTUFBTSxHQUFHSyx3QkFBV0MsTUFBWEQsQ0FBa0I7QUFDL0JKLE1BQUksRUFBRTtBQUNKTSxhQUFTLEVBQUUsRUFEUDtBQUVKQyxnQkFBWSxFQUFFLEVBRlY7QUFHSkMsb0JBQWdCLEVBQUU7QUFIZDtBQUR5QixDQUFsQkosQ0FBZjs7ZUFRZSx3QkFBVWQsV0FBViIsIm5hbWVzIjpbIkRpYWxvZ1RpdGxlIiwiY2hpbGRyZW4iLCJ0aGVtZSIsInN0eWxlIiwicmVzdCIsIlJlYWN0IiwiX1RpdGxlIiwiYWNjZXNzaWJpbGl0eVRyYWl0cyIsImFjY2Vzc2liaWxpdHlSb2xlIiwic3R5bGVzIiwidGV4dCIsImNvbG9yIiwiY29sb3JzIiwiZGlzcGxheU5hbWUiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwibWFyZ2luVG9wIiwibWFyZ2luQm90dG9tIiwibWFyZ2luSG9yaXpvbnRhbCJdLCJzb3VyY2VzIjpbIkRpYWxvZ1RpdGxlLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBTdHlsZVByb3AsIFRleHRTdHlsZSB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgVGl0bGUgZnJvbSAnLi4vVHlwb2dyYXBoeS9UaXRsZSc7XG5pbXBvcnQgeyB3aXRoVGhlbWUgfSBmcm9tICcuLi8uLi9jb3JlL3RoZW1pbmcnO1xuXG50eXBlIFByb3BzID0gUmVhY3QuQ29tcG9uZW50UHJvcHNXaXRoUmVmPHR5cGVvZiBUaXRsZT4gJiB7XG4gIC8qKlxuICAgKiBUaXRsZSB0ZXh0IGZvciB0aGUgYERpYWxvZ1RpdGxlYC5cbiAgICovXG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XG4gIHN0eWxlPzogU3R5bGVQcm9wPFRleHRTdHlsZT47XG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICovXG4gIHRoZW1lOiBSZWFjdE5hdGl2ZVBhcGVyLlRoZW1lO1xufTtcblxuLyoqXG4gKiBBIGNvbXBvbmVudCB0byBzaG93IGEgdGl0bGUgaW4gYSBEaWFsb2cuXG4gKlxuICogPGRpdiBjbGFzcz1cInNjcmVlbnNob3RzXCI+XG4gKiAgIDxmaWd1cmU+XG4gKiAgICAgPGltZyBjbGFzcz1cIm1lZGl1bVwiIHNyYz1cInNjcmVlbnNob3RzL2RpYWxvZy10aXRsZS5wbmdcIiAvPlxuICogICA8L2ZpZ3VyZT5cbiAqIDwvZGl2PlxuICpcbiAqICMjIFVzYWdlXG4gKiBgYGBqc1xuICogaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuICogaW1wb3J0IHsgUGFyYWdyYXBoLCBEaWFsb2csIFBvcnRhbCB9IGZyb20gJ3JlYWN0LW5hdGl2ZS1wYXBlcic7XG4gKlxuICogY29uc3QgTXlDb21wb25lbnQgPSAoKSA9PiB7XG4gKiAgIGNvbnN0IFt2aXNpYmxlLCBzZXRWaXNpYmxlXSA9IFJlYWN0LnVzZVN0YXRlKGZhbHNlKTtcbiAqXG4gKiAgIGNvbnN0IGhpZGVEaWFsb2cgPSAoKSA9PiBzZXRWaXNpYmxlKGZhbHNlKTtcbiAqXG4gKiAgIHJldHVybiAoXG4gKiAgICAgPFBvcnRhbD5cbiAqICAgICAgIDxEaWFsb2cgdmlzaWJsZT17dmlzaWJsZX0gb25EaXNtaXNzPXtoaWRlRGlhbG9nfT5cbiAqICAgICAgICAgPERpYWxvZy5UaXRsZT5UaGlzIGlzIGEgdGl0bGU8L0RpYWxvZy5UaXRsZT5cbiAqICAgICAgICAgPERpYWxvZy5Db250ZW50PlxuICogICAgICAgICAgIDxQYXJhZ3JhcGg+VGhpcyBpcyBzaW1wbGUgZGlhbG9nPC9QYXJhZ3JhcGg+XG4gKiAgICAgICAgIDwvRGlhbG9nLkNvbnRlbnQ+XG4gKiAgICAgICA8L0RpYWxvZz5cbiAqICAgICA8L1BvcnRhbD5cbiAqICAgKTtcbiAqIH07XG4gKlxuICogZXhwb3J0IGRlZmF1bHQgTXlDb21wb25lbnQ7XG4gKiBgYGBcbiAqL1xuY29uc3QgRGlhbG9nVGl0bGUgPSAoeyBjaGlsZHJlbiwgdGhlbWUsIHN0eWxlLCAuLi5yZXN0IH06IFByb3BzKSA9PiAoXG4gIDxUaXRsZVxuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgV2Uga2VlcCBvbGQgYTExeSBwcm9wcyBmb3IgYmFja3dhcmRzIGNvbXBhdCB3aXRoIG9sZCBSTiB2ZXJzaW9uc1xuICAgIGFjY2Vzc2liaWxpdHlUcmFpdHM9XCJoZWFkZXJcIlxuICAgIGFjY2Vzc2liaWxpdHlSb2xlPVwiaGVhZGVyXCJcbiAgICBzdHlsZT17W3N0eWxlcy50ZXh0LCB7IGNvbG9yOiB0aGVtZS5jb2xvcnMudGV4dCB9LCBzdHlsZV19XG4gICAgey4uLnJlc3R9XG4gID5cbiAgICB7Y2hpbGRyZW59XG4gIDwvVGl0bGU+XG4pO1xuXG5EaWFsb2dUaXRsZS5kaXNwbGF5TmFtZSA9ICdEaWFsb2cuVGl0bGUnO1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIHRleHQ6IHtcbiAgICBtYXJnaW5Ub3A6IDIyLFxuICAgIG1hcmdpbkJvdHRvbTogMTgsXG4gICAgbWFyZ2luSG9yaXpvbnRhbDogMjQsXG4gIH0sXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgd2l0aFRoZW1lKERpYWxvZ1RpdGxlKTtcblxuLy8gQGNvbXBvbmVudC1kb2NzIGlnbm9yZS1uZXh0LWxpbmVcbmV4cG9ydCB7IERpYWxvZ1RpdGxlIH07XG4iXX0=