{"version":3,"mappings":";;;;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CACtBC,aADsB,EAEtBC,YAFsB;AAAA,SAItB,SAASC,SAAT,CAAmBC,IAAnB,EAA4B;AAAA,QACpBC,eADoB;AAAAC;;AAAA;AAAA;;AAAA;AAAAC;AAAA;;AAAAC;;AAAAC;;AAAAA,iEAIf,UAACC,CAAD,EAAOC,CAAP,EAAiB;AACxB,cAAMC,QAAQ,GAAGJ,MAAKK,SAAtB;;AAEA,cAAID,QAAQ,IAAIA,QAAQ,CAACF,CAATE,KAAeF,CAA3BE,IAAgCA,QAAQ,CAACD,CAATC,KAAeD,CAAnD,EAAsD;AACpD,mBAAOC,QAAQ,CAACE,MAAhB;AACD;;AAED,cAAMA,MAAM,GAAGJ,CAAC,IAAIC,CAALD,IAAUA,CAAC,KAAKC,CAAhBD,GAAoB,wBAAUA,CAAV,EAAaC,CAAb,CAApBD,GAAsCA,CAAC,IAAIC,CAA1D;AAEAH,gBAAKK,SAAL,GAAiB;AAAEH,aAAC,EAADA,CAAF;AAAKC,aAAC,EAADA,CAAL;AAAQG,kBAAM,EAANA;AAAR,WAAjB;AAEA,iBAAOA,MAAP;AAfsB;;AAAA;AAAA;;AAAA;;AAAAC,aAkBxBC,MAlBwB,GAkBxB,kBAAS;AAAA;;AAAA,0BAC8C,KAAKC,KADnD;AAAA,YACCC,+BADD,eACCA,+BADD;AAAA,YACqCC,IADrC;;AAGP,eACEC,oBAAClB,YAAD,CAAcmB,QAAd,QACG,iBAAK;AAAA,iBACJD,oBAAChB,IAAD,eACMe,IADN;AAEEG,iBAAK,EAAEC,MAAI,CAACC,MAAL,CAAYF,KAAZ,EAAmBH,IAAI,CAACG,KAAxB,CAFT;AAGEG,eAAG,EAAEP;AAHP,aADI;AADR,UADF;AArBsB;;AAAA;AAAA,MACIE,KAAK,CAACM,SADV;;AAmC1B,QAAMC,eAAe,GAAGP,KAAK,CAACQ,UAANR,CAAiB,UAACH,KAAD,EAAQQ,GAAR;AAAA,aACvCL,oBAACf,eAAD,eAAqBY,KAArB;AAA4BC,uCAA+B,EAAEO;AAA7D,SADuC;AAAjB,MAAxB;AAIAE,mBAAe,CAACE,WAAhBF,mBAA2CvB,IAAI,CAACyB,WAALzB,IAAoBA,IAAI,CAAC0B,IAApE;AAEA,uCAAqBH,eAArB,EAAsCvB,IAAtC;AAEA,WAAQuB,eAAR;AA/CoB;AAAxB;;eAkDe3B","names":["createWithTheme","ThemeProvider","ThemeContext","withTheme","Comp","ThemedComponent","_inheritsLoose","args","_this","_defineProperty","a","b","previous","_previous","result","_proto","render","props","_reactThemeProviderForwardedRef","rest","React","Consumer","theme","_this2","_merge","ref","Component","ResultComponent","forwardRef","displayName","name"],"sources":["../src/createWithTheme.js"],"sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport deepmerge from 'deepmerge';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nimport type { ThemeProviderType } from './createThemeProvider';\nimport type { $DeepShape } from './types';\n\nexport type WithThemeType<T> = <P, C: React.ComponentType<P>>(\n  Comp: C\n) => C &\n  React.ComponentType<\n    $Diff<React.ElementConfig<C>, { theme: T }> & { theme?: $DeepShape<T> }\n  >;\n\nconst createWithTheme = <T: Object, S: $DeepShape<T>>(\n  ThemeProvider: ThemeProviderType<T>,\n  ThemeContext: React.Context<T>\n) =>\n  function withTheme(Comp: *) {\n    class ThemedComponent extends React.Component<*> {\n      _previous: ?{ a: T, b: ?S, result: T };\n\n      _merge = (a: T, b: ?S) => {\n        const previous = this._previous;\n\n        if (previous && previous.a === a && previous.b === b) {\n          return previous.result;\n        }\n\n        const result = a && b && a !== b ? deepmerge(a, b) : a || b;\n\n        this._previous = { a, b, result };\n\n        return result;\n      };\n\n      render() {\n        const { _reactThemeProviderForwardedRef, ...rest } = this.props;\n\n        return (\n          <ThemeContext.Consumer>\n            {theme => (\n              <Comp\n                {...rest}\n                theme={this._merge(theme, rest.theme)}\n                ref={_reactThemeProviderForwardedRef}\n              />\n            )}\n          </ThemeContext.Consumer>\n        );\n      }\n    }\n\n    const ResultComponent = React.forwardRef((props, ref) => (\n      <ThemedComponent {...props} _reactThemeProviderForwardedRef={ref} />\n    ));\n\n    ResultComponent.displayName = `withTheme(${Comp.displayName || Comp.name})`;\n\n    hoistNonReactStatics(ResultComponent, Comp);\n\n    return (ResultComponent: any);\n  };\n\nexport default createWithTheme;\n"]}