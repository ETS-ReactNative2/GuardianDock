{"version":3,"mappings":";;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA,IAAMA,OAAO,GAAG,SAAVA,OAAU,OAA6C;AAAA,MAA1CC,KAA0C,QAA1CA,KAA0C;AAAA,MAAnCC,KAAmC,QAAnCA,KAAmC;AAAA,MAA5BC,KAA4B,QAA5BA,KAA4B;AAAA,MAAlBC,IAAkB;AAC3D,MAAcC,WAAd,GAA8BF,KAA9B,CAAQG,IAAR;AACA,SACEC,oBAACC,iBAAD,eACMJ,IADN;AAEEF,SAAK,EAAE,CACLG,WAAW,GAAGI,MAAM,CAACH,IAAV,GAAiBG,MAAM,CAACC,KAD9B,EAELT,KAAK,IAAIQ,MAAM,CAACR,KAFX,EAGLC,KAHK;AAFT,KADF;AAFF;;AAcA,IAAMO,MAAM,GAAGE,wBAAWC,MAAXD,CAAkB;AAC/BD,OAAK,EAAE;AACLG,mBAAe,EAAE,oBAAMC,aAAN,EAAaC,KAAb,CAAmB,IAAnB,EAAyBC,GAAzB,GAA+BC,MAA/B,EADZ;AAELC,UAAM,EAAEP,wBAAWQ;AAFd,GADwB;AAK/Bb,MAAI,EAAE;AACJO,mBAAe,EAAE,oBAAMO,aAAN,EAAaL,KAAb,CAAmB,IAAnB,EAAyBC,GAAzB,GAA+BC,MAA/B,EADb;AAEJC,UAAM,EAAEP,wBAAWQ;AAFf,GALyB;AAS/BlB,OAAK,EAAE;AACLoB,cAAU,EAAE;AADP;AATwB,CAAlBV,CAAf;;eAce,wBAAUX,OAAV","names":["Divider","inset","style","theme","rest","isDarkTheme","dark","React","_reactNative","styles","light","StyleSheet","create","backgroundColor","black","alpha","rgb","string","height","hairlineWidth","white","marginLeft"],"sources":["Divider.tsx"],"sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, View, ViewStyle, StyleProp } from 'react-native';\nimport { withTheme } from '../core/theming';\nimport { black, white } from '../styles/colors';\nimport type { $RemoveChildren } from '../types';\n\ntype Props = $RemoveChildren<typeof View> & {\n  /**\n   *  Whether divider has a left inset.\n   */\n  inset?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A divider is a thin, lightweight separator that groups content in lists and page layouts.\n *\n * <div class=\"screenshots\">\n *  <figure>\n *    <img class=\"medium\" src=\"screenshots/divider.png\" />\n *  </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Divider, Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View>\n *     <Text>Lemon</Text>\n *     <Divider />\n *     <Text>Mango</Text>\n *     <Divider />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst Divider = ({ inset, style, theme, ...rest }: Props) => {\n  const { dark: isDarkTheme } = theme;\n  return (\n    <View\n      {...rest}\n      style={[\n        isDarkTheme ? styles.dark : styles.light,\n        inset && styles.inset,\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  light: {\n    backgroundColor: color(black).alpha(0.12).rgb().string(),\n    height: StyleSheet.hairlineWidth,\n  },\n  dark: {\n    backgroundColor: color(white).alpha(0.12).rgb().string(),\n    height: StyleSheet.hairlineWidth,\n  },\n  inset: {\n    marginLeft: 72,\n  },\n});\n\nexport default withTheme(Divider);\n"]}